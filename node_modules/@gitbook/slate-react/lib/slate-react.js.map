{"version":3,"file":"slate-react.js","sources":["../src/constants/event-handlers.js","../src/constants/plugin-props.js","../src/utils/offset-key.js","../src/components/leaf.js","../src/components/text.js","../src/components/void.js","../src/utils/get-children-decorations.js","../src/components/node.js","../src/utils/find-dom-node.js","../src/utils/find-dom-point.js","../src/utils/find-dom-range.js","../src/utils/find-point.js","../src/utils/find-range.js","../src/utils/scroll-to-selection.js","../src/utils/remove-all-ranges.js","../src/components/content.js","../src/constants/transfer-types.js","../src/utils/clone-fragment.js","../src/utils/find-node.js","../src/utils/get-event-range.js","../src/utils/get-event-transfer.js","../src/utils/set-event-transfer.js","../src/plugins/after.js","../src/plugins/before.js","../src/utils/noop.js","../src/components/editor.js","../src/index.js"],"sourcesContent":["/**\n * Event handlers used by Slate plugins.\n *\n * @type {Array}\n */\n\nconst EVENT_HANDLERS = [\n  'onBeforeInput',\n  'onBlur',\n  'onClick',\n  'onContextMenu',\n  'onCompositionEnd',\n  'onCompositionStart',\n  'onCopy',\n  'onCut',\n  'onDragEnd',\n  'onDragEnter',\n  'onDragExit',\n  'onDragLeave',\n  'onDragOver',\n  'onDragStart',\n  'onDrop',\n  'onInput',\n  'onFocus',\n  'onKeyDown',\n  'onKeyUp',\n  'onPaste',\n  'onSelect',\n]\n\n/**\n * Export.\n *\n * @type {Array}\n */\n\nexport default EVENT_HANDLERS\n","import EVENT_HANDLERS from './event-handlers'\n\n/**\n * Props that can be defined by plugins.\n *\n * @type {Array}\n */\n\nconst PLUGIN_PROPS = [\n  ...EVENT_HANDLERS,\n  'decorateNode',\n  'onChange',\n  'renderEditor',\n  'renderMark',\n  'renderNode',\n  'renderPlaceholder',\n  'renderPortal',\n  'schema',\n  'validateNode',\n]\n\n/**\n * Export.\n *\n * @type {Array}\n */\n\nexport default PLUGIN_PROPS\n","/**\n * Offset key parser regex.\n *\n * @type {RegExp}\n */\n\nconst PARSER = /^([\\w-]+)(?::(\\d+))?$/\n\n/**\n * Parse an offset key `string`.\n *\n * @param {String} string\n * @return {Object}\n */\n\nfunction parse(string) {\n  const matches = PARSER.exec(string)\n\n  if (!matches) {\n    throw new Error(`Invalid offset key string \"${string}\".`)\n  }\n\n  const [original, key, index] = matches // eslint-disable-line no-unused-vars\n  return {\n    key,\n    index: parseInt(index, 10),\n  }\n}\n\n/**\n * Stringify an offset key `object`.\n *\n * @param {Object} object\n *   @property {String} key\n *   @property {Number} index\n * @return {String}\n */\n\nfunction stringify(object) {\n  return `${object.key}:${object.index}`\n}\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexport default {\n  parse,\n  stringify,\n}\n","import Debug from 'debug'\nimport React from 'react'\nimport Types from 'prop-types'\nimport SlateTypes from '@gitbook/slate-prop-types'\n\nimport OffsetKey from '../utils/offset-key'\n\n/**\n * Debugger.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:leaves')\n\n/**\n * Leaf.\n *\n * @type {Component}\n */\n\nclass Leaf extends React.Component {\n  /**\n   * Property types.\n   *\n   * @type {Object}\n   */\n\n  static propTypes = {\n    block: SlateTypes.block.isRequired,\n    editor: Types.object.isRequired,\n    index: Types.number.isRequired,\n    leaves: SlateTypes.leaves.isRequired,\n    marks: SlateTypes.marks.isRequired,\n    node: SlateTypes.node.isRequired,\n    offset: Types.number.isRequired,\n    parent: SlateTypes.node.isRequired,\n    text: Types.string.isRequired,\n  }\n\n  /**\n   * Debug.\n   *\n   * @param {String} message\n   * @param {Mixed} ...args\n   */\n\n  debug = (message, ...args) => {\n    debug(message, `${this.props.node.key}-${this.props.index}`, ...args)\n  }\n\n  /**\n   * Should component update?\n   *\n   * @param {Object} props\n   * @return {Boolean}\n   */\n\n  shouldComponentUpdate(props) {\n    // If any of the regular properties have changed, re-render.\n    if (\n      props.index != this.props.index ||\n      props.marks != this.props.marks ||\n      props.text != this.props.text ||\n      props.parent != this.props.parent\n    ) {\n      return true\n    }\n\n    // Otherwise, don't update.\n    return false\n  }\n\n  /**\n   * Render the leaf.\n   *\n   * @return {Element}\n   */\n\n  render() {\n    this.debug('render', this)\n\n    const { node, index } = this.props\n    const offsetKey = OffsetKey.stringify({\n      key: node.key,\n      index,\n    })\n\n    return <span data-offset-key={offsetKey}>{this.renderMarks()}</span>\n  }\n\n  /**\n   * Render all of the leaf's mark components.\n   *\n   * @return {Element}\n   */\n\n  renderMarks() {\n    const { marks, node, offset, text, editor } = this.props\n    const { stack } = editor\n    const leaf = this.renderText()\n    const attributes = {\n      'data-slate-leaf': true,\n    }\n\n    return marks.reduce((children, mark) => {\n      const props = {\n        editor,\n        mark,\n        marks,\n        node,\n        offset,\n        text,\n        children,\n        attributes,\n      }\n      const element = stack.find('renderMark', props)\n      return element || children\n    }, leaf)\n  }\n\n  /**\n   * Render the text content of the leaf, accounting for browsers.\n   *\n   * @return {Element}\n   */\n\n  renderText() {\n    const { block, node, parent, text, index, leaves } = this.props\n\n    // COMPAT: Render text inside void nodes with a zero-width space.\n    // So the node can contain selection but the text is not visible.\n    if (parent.isVoid) {\n      return <span data-slate-zero-width=\"z\">{'\\u200B'}</span>\n    }\n\n    // COMPAT: If this is the last text node in an empty block, render a zero-\n    // width space that will convert into a line break when copying and pasting\n    // to support expected plain text.\n    if (\n      text === '' &&\n      parent.object === 'block' &&\n      parent.text === '' &&\n      parent.nodes.size === 1\n    ) {\n      return <span data-slate-zero-width=\"n\">{'\\u200B'}</span>\n    }\n\n    // COMPAT: If the text is empty, it's because it's on the edge of an inline\n    // void node, so we render a zero-width space so that the selection can be\n    // inserted next to it still.\n    if (text === '') {\n      return <span data-slate-zero-width=\"z\">{'\\u200B'}</span>\n    }\n\n    // COMPAT: Browsers will collapse trailing new lines at the end of blocks,\n    // so we need to add an extra trailing new lines to prevent that.\n    const lastText = block.getLastText()\n    const lastChar = text.charAt(text.length - 1)\n    const isLastText = node === lastText\n    const isLastLeaf = index === leaves.size - 1\n    if (isLastText && isLastLeaf && lastChar === '\\n') return `${text}\\n`\n\n    // Otherwise, just return the text.\n    return text\n  }\n}\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Leaf\n","import Debug from 'debug'\nimport ImmutableTypes from 'react-immutable-proptypes'\nimport React from 'react'\nimport SlateTypes from '@gitbook/slate-prop-types'\nimport Types from 'prop-types'\n\nimport Leaf from './leaf'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:node')\n\n/**\n * Text.\n *\n * @type {Component}\n */\n\nclass Text extends React.Component {\n  /**\n   * Property types.\n   *\n   * @type {Object}\n   */\n\n  static propTypes = {\n    block: SlateTypes.block,\n    decorations: ImmutableTypes.list.isRequired,\n    editor: Types.object.isRequired,\n    node: SlateTypes.node.isRequired,\n    parent: SlateTypes.node.isRequired,\n    style: Types.object,\n  }\n\n  /**\n   * Default prop types.\n   *\n   * @type {Object}\n   */\n\n  static defaultProps = {\n    style: null,\n  }\n\n  /**\n   * Debug.\n   *\n   * @param {String} message\n   * @param {Mixed} ...args\n   */\n\n  debug = (message, ...args) => {\n    const { node } = this.props\n    const { key } = node\n    debug(message, `${key} (text)`, ...args)\n  }\n\n  /**\n   * Should the node update?\n   *\n   * @param {Object} nextProps\n   * @param {Object} value\n   * @return {Boolean}\n   */\n\n  shouldComponentUpdate = nextProps => {\n    const { props } = this\n    const n = nextProps\n    const p = props\n\n    // If the node has changed, update. PERF: There are cases where it will have\n    // changed, but it's properties will be exactly the same (eg. copy-paste)\n    // which this won't catch. But that's rare and not a drag on performance, so\n    // for simplicity we just let them through.\n    if (n.node != p.node) return true\n\n    // If the node parent is a block node, and it was the last child of the\n    // block, re-render to cleanup extra `\\n`.\n    if (n.parent.object == 'block') {\n      const pLast = p.parent.nodes.last()\n      const nLast = n.parent.nodes.last()\n      if (p.node == pLast && n.node != nLast) return true\n    }\n\n    // Re-render if the current decorations have changed.\n    if (!n.decorations.equals(p.decorations)) return true\n\n    // Otherwise, don't update.\n    return false\n  }\n\n  /**\n   * Render.\n   *\n   * @return {Element}\n   */\n\n  render() {\n    this.debug('render', this)\n\n    const { decorations, editor, node, style } = this.props\n    const { value } = editor\n    const { document } = value\n    const { key } = node\n\n    const decs = decorations.filter(d => {\n      const { startKey, endKey } = d\n      if (startKey == key || endKey == key) return true\n      if (startKey === endKey) return false\n      const startsBefore = document.areDescendantsSorted(startKey, key)\n      if (!startsBefore) return false\n      const endsAfter = document.areDescendantsSorted(key, endKey)\n      return endsAfter\n    })\n\n    // PERF: Take advantage of cache by avoiding arguments\n    const leaves = decs.size === 0 ? node.getLeaves() : node.getLeaves(decs)\n    let offset = 0\n\n    const children = leaves.map((leaf, i) => {\n      const child = this.renderLeaf(leaves, leaf, i, offset)\n      offset += leaf.text.length\n      return child\n    })\n\n    return (\n      <span data-key={key} style={style}>\n        {children}\n      </span>\n    )\n  }\n\n  /**\n   * Render a single leaf given a `leaf` and `offset`.\n   *\n   * @param {List<Leaf>} leaves\n   * @param {Leaf} leaf\n   * @param {Number} index\n   * @param {Number} offset\n   * @return {Element} leaf\n   */\n\n  renderLeaf = (leaves, leaf, index, offset) => {\n    const { block, node, parent, editor } = this.props\n    const { text, marks } = leaf\n\n    return (\n      <Leaf\n        key={`${node.key}-${index}`}\n        block={block}\n        editor={editor}\n        index={index}\n        marks={marks}\n        node={node}\n        offset={offset}\n        parent={parent}\n        leaves={leaves}\n        text={text}\n      />\n    )\n  }\n}\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Text\n","import Debug from 'debug'\nimport React from 'react'\nimport SlateTypes from '@gitbook/slate-prop-types'\nimport Types from 'prop-types'\n\nimport Text from './text'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:void')\n\n/**\n * Void.\n *\n * @type {Component}\n */\n\nclass Void extends React.Component {\n  /**\n   * Property types.\n   *\n   * @type {Object}\n   */\n\n  static propTypes = {\n    block: SlateTypes.block,\n    children: Types.any.isRequired,\n    editor: Types.object.isRequired,\n    node: SlateTypes.node.isRequired,\n    parent: SlateTypes.node.isRequired,\n    readOnly: Types.bool.isRequired,\n  }\n\n  /**\n   * Debug.\n   *\n   * @param {String} message\n   * @param {Mixed} ...args\n   */\n\n  debug = (message, ...args) => {\n    const { node } = this.props\n    const { key, type } = node\n    const id = `${key} (${type})`\n    debug(message, `${id}`, ...args)\n  }\n\n  /**\n   * Render.\n   *\n   * @return {Element}\n   */\n\n  render() {\n    const { props } = this\n    const { children, node, readOnly } = props\n    const Tag = node.object == 'block' ? 'div' : 'span'\n    const style = {\n      height: '0',\n      color: 'transparent',\n      outline: 'none',\n      position: 'absolute',\n    }\n\n    const spacer = (\n      <Tag data-slate-spacer style={style}>\n        {this.renderText()}\n      </Tag>\n    )\n\n    const content = (\n      <Tag contentEditable={readOnly ? null : false}>{children}</Tag>\n    )\n\n    this.debug('render', { props })\n\n    return (\n      <Tag\n        data-slate-void\n        data-key={node.key}\n        contentEditable={readOnly || node.object == 'block' ? null : false}\n      >\n        {readOnly ? null : spacer}\n        {content}\n      </Tag>\n    )\n  }\n\n  /**\n   * Render the void node's text node, which will catch the cursor when it the\n   * void node is navigated to with the arrow keys.\n   *\n   * Having this text node there means the browser continues to manage the\n   * selection natively, so it keeps track of the right offset when moving\n   * across the block.\n   *\n   * @return {Element}\n   */\n\n  renderText = () => {\n    const { block, decorations, node, readOnly, editor } = this.props\n    const child = node.getFirstText()\n    return (\n      <Text\n        block={node.object == 'block' ? node : block}\n        decorations={decorations}\n        editor={editor}\n        key={child.key}\n        node={child}\n        parent={node}\n        readOnly={readOnly}\n      />\n    )\n  }\n}\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Void\n","import { Set } from 'immutable'\n\n/**\n * Split the decorations in lists of relevant decorations for each child.\n *\n * @param {Node} node\n * @param {List} decorations\n * @return {Array<List<Decoration>>}\n */\n\nfunction getChildrenDecorations(node, decorations) {\n  const activeDecorations = Set().asMutable()\n  const childrenDecorations = []\n\n  orderChildDecorations(node, decorations).forEach(item => {\n    if (item.isRangeStart) {\n      // Item is a decoration start\n      activeDecorations.add(item.decoration)\n    } else if (item.isRangeEnd) {\n      // item is a decoration end\n      activeDecorations.remove(item.decoration)\n    } else {\n      // Item is a child node\n      childrenDecorations.push(activeDecorations.toList())\n    }\n  })\n\n  return childrenDecorations\n}\n\n/**\n * Orders the children of provided node and its decoration endpoints (start, end)\n * so that decorations can be passed only to relevant children (see use in Node.render())\n *\n * @param {Node} node\n * @param {List} decorations\n * @return {Array<Item>}\n *\n * where type Item =\n * {\n *   child: Node,\n *   // Index of the child in its parent\n *   index: number\n * }\n * or {\n *   // True if this represents the start of the given decoration\n *   isRangeStart: boolean,\n *   // True if this represents the end of the given decoration\n *   isRangeEnd: boolean,\n *   decoration: Range\n * }\n */\n\nfunction orderChildDecorations(node, decorations) {\n  if (decorations.isEmpty()) {\n    return node.nodes.toArray().map((child, index) => ({\n      child,\n      index,\n    }))\n  }\n\n  // Map each key to its global order\n  const keyOrders = { [node.key]: 0 }\n  let globalOrder = 1\n\n  node.forEachDescendant(child => {\n    keyOrders[child.key] = globalOrder\n    globalOrder = globalOrder + 1\n  })\n\n  const childNodes = node.nodes.toArray()\n\n  const endPoints = childNodes.map((child, index) => ({\n    child,\n    index,\n    order: keyOrders[child.key],\n  }))\n\n  decorations.forEach(decoration => {\n    // Range start.\n    // A rangeStart should be before the child containing its startKey, in order\n    // to consider it active before going down the child.\n    const startKeyOrder = keyOrders[decoration.startKey]\n    const containingChildOrder =\n      startKeyOrder === undefined\n        ? 0\n        : getContainingChildOrder(childNodes, keyOrders, startKeyOrder)\n\n    endPoints.push({\n      isRangeStart: true,\n      order: containingChildOrder - 0.5,\n      decoration,\n    })\n\n    // Range end.\n    const endKeyOrder = (keyOrders[decoration.endKey] || globalOrder) + 0.5\n\n    endPoints.push({\n      isRangeEnd: true,\n      order: endKeyOrder,\n      decoration,\n    })\n  })\n\n  return endPoints.sort(byOrder)\n}\n\n/*\n * Compare two objects to sort them according to their .order property\n */\n\nfunction byOrder(a, b) {\n  if (a.order > b.order) {\n    return 1\n  } else if (a.order < b.order) {\n    return -1\n  } else {\n    return 0\n  }\n}\n\n/*\n * Returns the key order of the child right before the given order.\n */\n\nfunction getContainingChildOrder(children, keyOrders, order) {\n  // Find the first child that is after the given key\n  const nextChildIndex = children.findIndex(\n    child => order < keyOrders[child.key]\n  )\n\n  if (nextChildIndex <= 0) {\n    return 0\n  }\n\n  const containingChild = children[nextChildIndex - 1]\n  return keyOrders[containingChild.key]\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default getChildrenDecorations\n","import Debug from 'debug'\nimport ImmutableTypes from 'react-immutable-proptypes'\nimport React from 'react'\nimport SlateTypes from '@gitbook/slate-prop-types'\nimport logger from '@gitbook/slate-dev-logger'\nimport Types from 'prop-types'\n\nimport Void from './void'\nimport Text from './text'\nimport getChildrenDecorations from '../utils/get-children-decorations'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:node')\n\n/**\n * Node.\n *\n * @type {Component}\n */\n\nclass Node extends React.Component {\n  /**\n   * Property types.\n   *\n   * @type {Object}\n   */\n\n  static propTypes = {\n    block: SlateTypes.block,\n    decorations: ImmutableTypes.list.isRequired,\n    editor: Types.object.isRequired,\n    isFocused: Types.bool.isRequired,\n    isSelected: Types.bool.isRequired,\n    node: SlateTypes.node.isRequired,\n    parent: SlateTypes.node.isRequired,\n    readOnly: Types.bool.isRequired,\n  }\n\n  /**\n   * Debug.\n   *\n   * @param {String} message\n   * @param {Mixed} ...args\n   */\n\n  debug = (message, ...args) => {\n    const { node } = this.props\n    const { key, type } = node\n    debug(message, `${key} (${type})`, ...args)\n  }\n\n  /**\n   * Should the node update?\n   *\n   * @param {Object} nextProps\n   * @param {Object} value\n   * @return {Boolean}\n   */\n\n  shouldComponentUpdate = nextProps => {\n    const { props } = this\n    const { stack } = props.editor\n    const shouldUpdate = stack.find(\n      'shouldNodeComponentUpdate',\n      props,\n      nextProps\n    )\n    const n = nextProps\n    const p = props\n\n    // If the `Component` has a custom logic to determine whether the component\n    // needs to be updated or not, return true if it returns true. If it returns\n    // false, we need to ignore it, because it shouldn't be allowed it.\n    if (shouldUpdate != null) {\n      if (shouldUpdate) {\n        return true\n      }\n\n      if (shouldUpdate === false) {\n        logger.warn(\n          \"Returning false in `shouldNodeComponentUpdate` does not disable Slate's internal `shouldComponentUpdate` logic. If you want to prevent updates, use React's `shouldComponentUpdate` instead.\"\n        )\n      }\n    }\n\n    // If the `readOnly` status has changed, re-render in case there is any\n    // user-land logic that depends on it, like nested editable contents.\n    if (n.readOnly != p.readOnly) return true\n\n    // If the node has changed, update. PERF: There are cases where it will have\n    // changed, but it's properties will be exactly the same (eg. copy-paste)\n    // which this won't catch. But that's rare and not a drag on performance, so\n    // for simplicity we just let them through.\n    if (n.node != p.node) return true\n\n    // If the selection value of the node or of some of its children has changed,\n    // re-render in case there is any user-land logic depends on it to render.\n    // if the node is selected update it, even if it was already selected: the\n    // selection value of some of its children could have been changed and they\n    // need to be rendered again.\n    if (n.isSelected || p.isSelected) return true\n    if (n.isFocused || p.isFocused) return true\n\n    // If the decorations have changed, update.\n    if (!n.decorations.equals(p.decorations)) return true\n\n    // Otherwise, don't update.\n    return false\n  }\n\n  /**\n   * Render.\n   *\n   * @return {Element}\n   */\n\n  render() {\n    this.debug('render', this)\n    const {\n      editor,\n      isSelected,\n      isFocused,\n      node,\n      decorations,\n      parent,\n      readOnly,\n    } = this.props\n    const { value } = editor\n    const { selection } = value\n    const { stack } = editor\n    const indexes = node.getSelectionIndexes(selection, isSelected)\n    const decs = decorations.concat(node.getDecorations(stack))\n    const childrenDecorations = getChildrenDecorations(node, decs)\n\n    let children = []\n\n    node.nodes.forEach((child, i) => {\n      const isChildSelected = !!indexes && indexes.start <= i && i < indexes.end\n\n      children.push(\n        this.renderNode(child, isChildSelected, childrenDecorations[i])\n      )\n    })\n\n    // Attributes that the developer must mix into the element in their\n    // custom node renderer component.\n    const attributes = { 'data-key': node.key }\n\n    // If it's a block node with inline children, add the proper `dir` attribute\n    // for text direction.\n    if (node.object == 'block' && node.nodes.first().object != 'block') {\n      const direction = node.getTextDirection()\n      if (direction == 'rtl') attributes.dir = 'rtl'\n    }\n\n    const props = {\n      key: node.key,\n      editor,\n      isFocused,\n      isSelected,\n      node,\n      parent,\n      readOnly,\n    }\n\n    let placeholder = stack.find('renderPlaceholder', props)\n\n    if (placeholder) {\n      placeholder = React.cloneElement(placeholder, {\n        key: `${node.key}-placeholder`,\n      })\n\n      children = [placeholder, ...children]\n    }\n\n    const element = stack.find('renderNode', {\n      ...props,\n      attributes,\n      children,\n    })\n\n    return node.isVoid ? <Void {...this.props}>{element}</Void> : element\n  }\n\n  /**\n   * Render a `child` node.\n   *\n   * @param {Node} child\n   * @param {Boolean} isSelected\n   * @param {Array<Decoration>} decorations\n   * @return {Element}\n   */\n\n  renderNode = (child, isSelected, decorations) => {\n    const { block, editor, node, readOnly, isFocused } = this.props\n    const Component = child.object == 'text' ? Text : Node\n\n    return (\n      <Component\n        block={node.object == 'block' ? node : block}\n        decorations={decorations}\n        editor={editor}\n        isSelected={isSelected}\n        isFocused={isFocused && isSelected}\n        key={child.key}\n        node={child}\n        parent={node}\n        readOnly={readOnly}\n      />\n    )\n  }\n}\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Node\n","import { Node } from '@gitbook/slate'\n\n/**\n * Find the DOM node for a `key`.\n *\n * @param {String|Node} key\n * @param {Window} win (optional)\n * @return {Element}\n */\n\nfunction findDOMNode(key, win = window) {\n  if (Node.isNode(key)) {\n    key = key.key\n  }\n\n  const el = win.document.querySelector(`[data-key=\"${key}\"]`)\n\n  if (!el) {\n    throw new Error(\n      `Unable to find a DOM node for \"${key}\". This is often because of forgetting to add \\`props.attributes\\` to a custom component.`\n    )\n  }\n\n  return el\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findDOMNode\n","import findDOMNode from './find-dom-node'\n\n/**\n * Find a native DOM selection point from a Slate `key` and `offset`.\n *\n * @param {String} key\n * @param {Number} offset\n * @param {Window} win (optional)\n * @return {Object|Null}\n */\n\nfunction findDOMPoint(key, offset, win = window) {\n  const el = findDOMNode(key, win)\n  let start = 0\n  let n\n\n  // COMPAT: In IE, this method's arguments are not optional, so we have to\n  // pass in all four even though the last two are defaults. (2017/10/25)\n  const iterator = win.document.createNodeIterator(\n    el,\n    NodeFilter.SHOW_TEXT,\n    () => NodeFilter.FILTER_ACCEPT,\n    false\n  )\n\n  while ((n = iterator.nextNode())) {\n    const { length } = n.textContent\n    const end = start + length\n\n    if (offset <= end) {\n      const o = offset - start\n      return { node: n, offset: o >= 0 ? o : 0 }\n    }\n\n    start = end\n  }\n\n  return null\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findDOMPoint\n","import findDOMPoint from './find-dom-point'\n\n/**\n * Find a native DOM range Slate `range`.\n *\n * @param {Range} range\n * @param {Window} win (optional)\n * @return {Object|Null}\n */\n\nfunction findDOMRange(range, win = window) {\n  const {\n    anchorKey,\n    anchorOffset,\n    focusKey,\n    focusOffset,\n    isBackward,\n    isCollapsed,\n  } = range\n  const anchor = findDOMPoint(anchorKey, anchorOffset, win)\n  const focus = isCollapsed ? anchor : findDOMPoint(focusKey, focusOffset, win)\n  if (!anchor || !focus) return null\n\n  const r = win.document.createRange()\n  const start = isBackward ? focus : anchor\n  const end = isBackward ? anchor : focus\n  r.setStart(start.node, start.offset)\n  r.setEnd(end.node, end.offset)\n  return r\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findDOMRange\n","import getWindow from 'get-window'\n\nimport OffsetKey from './offset-key'\n\n/**\n * Constants.\n *\n * @type {String}\n */\n\nexport const ZERO_WIDTH_ATTRIBUTE = 'data-slate-zero-width'\nexport const ZERO_WIDTH_SELECTOR = `[${ZERO_WIDTH_ATTRIBUTE}]`\nconst OFFSET_KEY_ATTRIBUTE = 'data-offset-key'\nconst RANGE_SELECTOR = `[${OFFSET_KEY_ATTRIBUTE}]`\nconst TEXT_SELECTOR = `[data-key]`\nconst VOID_SELECTOR = '[data-slate-void]'\n\n/**\n * Find a Slate point from a DOM selection's `nativeNode` and `nativeOffset`.\n *\n * @param {Element} nativeNode\n * @param {Number} nativeOffset\n * @param {Value} value\n * @return {Object}\n */\n\nfunction findPoint(nativeNode, nativeOffset, value) {\n  const { node: nearestNode, offset: nearestOffset } = normalizeNodeAndOffset(\n    nativeNode,\n    nativeOffset\n  )\n\n  const window = getWindow(nativeNode)\n  const { parentNode } = nearestNode\n  let rangeNode = parentNode.closest(RANGE_SELECTOR)\n  let offset\n  let node\n\n  // Calculate how far into the text node the `nearestNode` is, so that we can\n  // determine what the offset relative to the text node is.\n  if (rangeNode) {\n    const range = window.document.createRange()\n    const textNode = rangeNode.closest(TEXT_SELECTOR)\n    range.setStart(textNode, 0)\n    range.setEnd(nearestNode, nearestOffset)\n    node = textNode\n    offset = range.toString().length\n  } else {\n    // For void nodes, the element with the offset key will be a cousin, not an\n    // ancestor, so find it by going down from the nearest void parent.\n    const voidNode = parentNode.closest(VOID_SELECTOR)\n    if (!voidNode) return null\n    rangeNode = voidNode.querySelector(RANGE_SELECTOR)\n    if (!rangeNode) return null\n    node = rangeNode\n    offset = node.textContent.length\n  }\n\n  // COMPAT: If the parent node is a Slate zero-width space, this is because the\n  // text node should have no characters. However, during IME composition the\n  // ASCII characters will be prepended to the zero-width space, so subtract 1\n  // from the offset to account for the zero-width space character.\n  if (\n    offset == node.textContent.length &&\n    parentNode.hasAttribute(ZERO_WIDTH_ATTRIBUTE)\n  ) {\n    offset--\n  }\n\n  // Get the string value of the offset key attribute.\n  const offsetKey = rangeNode.getAttribute(OFFSET_KEY_ATTRIBUTE)\n  if (!offsetKey) return null\n\n  const { key } = OffsetKey.parse(offsetKey)\n\n  // COMPAT: If someone is clicking from one Slate editor into another, the\n  // select event fires twice, once for the old editor's `element` first, and\n  // then afterwards for the correct `element`. (2017/03/03)\n  if (!value.document.hasDescendant(key)) return null\n\n  return {\n    key,\n    offset,\n  }\n}\n\n/**\n * From a DOM selection's `node` and `offset`, normalize so that it always\n * refers to a text node.\n *\n * @param {Element} node\n * @param {Number} offset\n * @return {Object}\n */\n\nfunction normalizeNodeAndOffset(node, offset) {\n  // If it's an element node, its offset refers to the index of its children\n  // including comment nodes, so try to find the right text child node.\n  if (node.nodeType == 1 && node.childNodes.length) {\n    const isLast = offset == node.childNodes.length\n    const direction = isLast ? 'backward' : 'forward'\n    const index = isLast ? offset - 1 : offset\n    node = getEditableChild(node, index, direction)\n\n    // If the node has children, traverse until we have a leaf node. Leaf nodes\n    // can be either text nodes, or other void DOM nodes.\n    while (node.nodeType == 1 && node.childNodes.length) {\n      const i = isLast ? node.childNodes.length - 1 : 0\n      node = getEditableChild(node, i, direction)\n    }\n\n    // Determine the new offset inside the text node.\n    offset = isLast ? node.textContent.length : 0\n  }\n\n  // Return the node and offset.\n  return { node, offset }\n}\n\n/**\n * Get the nearest editable child at `index` in a `parent`, preferring\n * `direction`.\n *\n * @param {Element} parent\n * @param {Number} index\n * @param {String} direction ('forward' or 'backward')\n * @return {Element|Null}\n */\n\nfunction getEditableChild(parent, index, direction) {\n  const { childNodes } = parent\n  let child = childNodes[index]\n  let i = index\n  let triedForward = false\n  let triedBackward = false\n\n  // While the child is a comment node, or an element node with no children,\n  // keep iterating to find a sibling non-void, non-comment node.\n  while (\n    child.nodeType == 8 ||\n    (child.nodeType == 1 && child.childNodes.length == 0) ||\n    (child.nodeType == 1 && child.getAttribute('contenteditable') == 'false')\n  ) {\n    if (triedForward && triedBackward) break\n\n    if (i >= childNodes.length) {\n      triedForward = true\n      i = index - 1\n      direction = 'backward'\n      continue\n    }\n\n    if (i < 0) {\n      triedBackward = true\n      i = index + 1\n      direction = 'forward'\n      continue\n    }\n\n    child = childNodes[i]\n    if (direction == 'forward') i++\n    if (direction == 'backward') i--\n  }\n\n  return child || null\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findPoint\n","import getWindow from 'get-window'\nimport isBackward from 'selection-is-backward'\nimport { Range } from '@gitbook/slate'\nimport { IS_IE, IS_EDGE } from '@gitbook/slate-dev-environment'\n\nimport findPoint from './find-point'\nimport findDOMPoint from './find-dom-point'\n\n/**\n * Find a Slate range from a DOM `native` selection.\n *\n * @param {Selection} native\n * @param {Value} value\n * @return {Range}\n */\n\nfunction findRange(native, value) {\n  const el = native.anchorNode || native.startContainer\n  if (!el) return null\n\n  const window = getWindow(el)\n\n  // If the `native` object is a DOM `Range` or `StaticRange` object, change it\n  // into something that looks like a DOM `Selection` instead.\n  if (\n    native instanceof window.Range ||\n    (window.StaticRange && native instanceof window.StaticRange)\n  ) {\n    native = {\n      anchorNode: native.startContainer,\n      anchorOffset: native.startOffset,\n      focusNode: native.endContainer,\n      focusOffset: native.endOffset,\n    }\n  }\n\n  const {\n    anchorNode,\n    anchorOffset,\n    focusNode,\n    focusOffset,\n    isCollapsed,\n  } = native\n  const anchor = findPoint(anchorNode, anchorOffset, value)\n  const focus = isCollapsed ? anchor : findPoint(focusNode, focusOffset, value)\n  if (!anchor || !focus) return null\n\n  // COMPAT: ??? The Edge browser seems to have a case where if you select the\n  // last word of a span, it sets the endContainer to the containing span.\n  // `selection-is-backward` doesn't handle this case.\n  if (IS_IE || IS_EDGE) {\n    const domAnchor = findDOMPoint(anchor.key, anchor.offset)\n    const domFocus = findDOMPoint(focus.key, focus.offset)\n\n    native = {\n      anchorNode: domAnchor.node,\n      anchorOffset: domAnchor.offset,\n      focusNode: domFocus.node,\n      focusOffset: domFocus.offset,\n    }\n  }\n\n  const range = Range.create({\n    anchorKey: anchor.key,\n    anchorOffset: anchor.offset,\n    focusKey: focus.key,\n    focusOffset: focus.offset,\n    isBackward: isCollapsed ? false : isBackward(native),\n    isFocused: true,\n  })\n\n  return range\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findRange\n","import getWindow from 'get-window'\nimport isBackward from 'selection-is-backward'\nimport { IS_SAFARI, IS_IOS } from '@gitbook/slate-dev-environment'\n\n/**\n * CSS overflow values that would cause scrolling.\n *\n * @type {Array}\n */\n\nconst OVERFLOWS = ['auto', 'overlay', 'scroll']\n\n/**\n * Detect whether we are running IOS version 11\n */\n\nconst IS_IOS_11 = IS_IOS && !!window.navigator.userAgent.match(/os 11_/i)\n\n/**\n * Find the nearest parent with scrolling, or window.\n *\n * @param {el} Element\n */\n\nfunction findScrollContainer(el, window) {\n  let parent = el.parentNode\n  let scroller\n\n  while (!scroller) {\n    if (!parent.parentNode) break\n\n    const style = window.getComputedStyle(parent)\n    const { overflowY } = style\n\n    if (OVERFLOWS.includes(overflowY)) {\n      scroller = parent\n      break\n    }\n\n    parent = parent.parentNode\n  }\n\n  // COMPAT: Because Chrome does not allow doucment.body.scrollTop, we're\n  // assuming that window.scrollTo() should be used if the scrollable element\n  // turns out to be document.body or document.documentElement. This will work\n  // unless body is intentionally set to scrollable by restricting its height\n  // (e.g. height: 100vh).\n  if (!scroller) {\n    return window.document.body\n  }\n\n  return scroller\n}\n\n/**\n * Scroll the current selection's focus point into view if needed.\n *\n * @param {Selection} selection\n */\n\nfunction scrollToSelection(selection) {\n  if (IS_IOS_11) return\n  if (!selection.anchorNode) return\n\n  const window = getWindow(selection.anchorNode)\n  const scroller = findScrollContainer(selection.anchorNode, window)\n  const isWindow =\n    scroller == window.document.body ||\n    scroller == window.document.documentElement\n  const backward = isBackward(selection)\n\n  const range = selection.getRangeAt(0).cloneRange()\n  range.collapse(backward)\n  let cursorRect = range.getBoundingClientRect()\n\n  // COMPAT: range.getBoundingClientRect() returns 0s in Safari when range is\n  // collapsed. Expanding the range by 1 is a relatively effective workaround\n  // for vertical scroll, although horizontal may be off by 1 character.\n  // https://bugs.webkit.org/show_bug.cgi?id=138949\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=435438\n  if (IS_SAFARI) {\n    if (range.collapsed && cursorRect.top == 0 && cursorRect.height == 0) {\n      if (range.startOffset == 0) {\n        range.setEnd(range.endContainer, 1)\n      } else {\n        range.setStart(range.startContainer, range.startOffset - 1)\n      }\n\n      cursorRect = range.getBoundingClientRect()\n\n      if (cursorRect.top == 0 && cursorRect.height == 0) {\n        if (range.getClientRects().length) {\n          cursorRect = range.getClientRects()[0]\n        }\n      }\n    }\n  }\n\n  let width\n  let height\n  let yOffset\n  let xOffset\n  let scrollerTop = 0\n  let scrollerLeft = 0\n  let scrollerBordersY = 0\n  let scrollerBordersX = 0\n  let scrollerPaddingTop = 0\n  let scrollerPaddingBottom = 0\n  let scrollerPaddingLeft = 0\n  let scrollerPaddingRight = 0\n\n  if (isWindow) {\n    const { innerWidth, innerHeight, pageYOffset, pageXOffset } = window\n    width = innerWidth\n    height = innerHeight\n    yOffset = pageYOffset\n    xOffset = pageXOffset\n  } else {\n    const { offsetWidth, offsetHeight, scrollTop, scrollLeft } = scroller\n    const {\n      borderTopWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      borderRightWidth,\n      paddingTop,\n      paddingBottom,\n      paddingLeft,\n      paddingRight,\n    } = window.getComputedStyle(scroller)\n\n    const scrollerRect = scroller.getBoundingClientRect()\n    width = offsetWidth\n    height = offsetHeight\n    scrollerTop = scrollerRect.top + parseInt(borderTopWidth, 10)\n    scrollerLeft = scrollerRect.left + parseInt(borderLeftWidth, 10)\n\n    scrollerBordersY =\n      parseInt(borderTopWidth, 10) + parseInt(borderBottomWidth, 10)\n\n    scrollerBordersX =\n      parseInt(borderLeftWidth, 10) + parseInt(borderRightWidth, 10)\n\n    scrollerPaddingTop = parseInt(paddingTop, 10)\n    scrollerPaddingBottom = parseInt(paddingBottom, 10)\n    scrollerPaddingLeft = parseInt(paddingLeft, 10)\n    scrollerPaddingRight = parseInt(paddingRight, 10)\n    yOffset = scrollTop\n    xOffset = scrollLeft\n  }\n\n  const cursorTop = cursorRect.top + yOffset - scrollerTop\n  const cursorLeft = cursorRect.left + xOffset - scrollerLeft\n\n  let x = xOffset\n  let y = yOffset\n\n  if (cursorLeft < xOffset) {\n    // selection to the left of viewport\n    x = cursorLeft - scrollerPaddingLeft\n  } else if (\n    cursorLeft + cursorRect.width + scrollerBordersX >\n    xOffset + width\n  ) {\n    // selection to the right of viewport\n    x = cursorLeft + scrollerBordersX + scrollerPaddingRight - width\n  }\n\n  if (cursorTop < yOffset) {\n    // selection above viewport\n    y = cursorTop - scrollerPaddingTop\n  } else if (\n    cursorTop + cursorRect.height + scrollerBordersY >\n    yOffset + height\n  ) {\n    // selection below viewport\n    y =\n      cursorTop +\n      scrollerBordersY +\n      scrollerPaddingBottom +\n      cursorRect.height -\n      height\n  }\n\n  if (isWindow) {\n    window.scrollTo(x, y)\n  } else {\n    scroller.scrollTop = y\n    scroller.scrollLeft = x\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default scrollToSelection\n","/**\n * COMPAT: if we are in <= IE11 and the selection contains\n * tables, `removeAllRanges()` will throw\n * \"unable to complete the operation due to error 800a025e\"\n *\n * @param {Selection} selection document selection\n */\n\nfunction removeAllRanges(selection) {\n  const doc = window.document\n\n  if (doc && doc.body.createTextRange) {\n    // All IE but Edge\n    const range = doc.body.createTextRange()\n    range.collapse()\n    range.select()\n  } else {\n    selection.removeAllRanges()\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default removeAllRanges\n","import Debug from 'debug'\nimport React from 'react'\nimport Types from 'prop-types'\nimport getWindow from 'get-window'\nimport {\n  IS_FIREFOX,\n  IS_IOS,\n  IS_ANDROID,\n  SUPPORTED_EVENTS,\n} from '@gitbook/slate-dev-environment'\nimport logger from '@gitbook/slate-dev-logger'\nimport throttle from 'lodash/throttle'\n\nimport EVENT_HANDLERS from '../constants/event-handlers'\nimport Node from './node'\nimport findDOMRange from '../utils/find-dom-range'\nimport findRange from '../utils/find-range'\nimport getChildrenDecorations from '../utils/get-children-decorations'\nimport scrollToSelection from '../utils/scroll-to-selection'\nimport removeAllRanges from '../utils/remove-all-ranges'\n\nconst FIREFOX_NODE_TYPE_ACCESS_ERROR = /Permission denied to access property \"nodeType\"/\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:content')\n\n/**\n * Content.\n *\n * @type {Component}\n */\n\nclass Content extends React.Component {\n  /**\n   * Property types.\n   *\n   * @type {Object}\n   */\n\n  static propTypes = {\n    autoCorrect: Types.bool.isRequired,\n    children: Types.any.isRequired,\n    className: Types.string,\n    editor: Types.object.isRequired,\n    readOnly: Types.bool.isRequired,\n    role: Types.string,\n    spellCheck: Types.bool.isRequired,\n    style: Types.object,\n    tabIndex: Types.number,\n    tagName: Types.string,\n  }\n\n  /**\n   * Default properties.\n   *\n   * @type {Object}\n   */\n\n  static defaultProps = {\n    style: {},\n    tagName: 'div',\n  }\n\n  /**\n   * Constructor.\n   *\n   * @param {Object} props\n   */\n\n  constructor(props) {\n    super(props)\n    this.tmp = {}\n    this.tmp.isUpdatingSelection = false\n\n    EVENT_HANDLERS.forEach(handler => {\n      this[handler] = event => {\n        this.onEvent(handler, event)\n      }\n    })\n  }\n\n  /**\n   * When the editor first mounts in the DOM we need to:\n   *\n   *   - Add native DOM event listeners.\n   *   - Update the selection, in case it starts focused.\n   */\n\n  componentDidMount = () => {\n    const window = getWindow(this.element)\n\n    window.document.addEventListener(\n      'selectionchange',\n      this.onNativeSelectionChange\n    )\n\n    // COMPAT: Restrict scope of `beforeinput` to mobile.\n    if ((IS_IOS || IS_ANDROID) && SUPPORTED_EVENTS.beforeinput) {\n      this.element.addEventListener('beforeinput', this.onNativeBeforeInput)\n    }\n\n    this.updateSelection()\n  }\n\n  /**\n   * When unmounting, remove DOM event listeners.\n   */\n\n  componentWillUnmount() {\n    const window = getWindow(this.element)\n\n    if (window) {\n      window.document.removeEventListener(\n        'selectionchange',\n        this.onNativeSelectionChange\n      )\n    }\n\n    // COMPAT: Restrict scope of `beforeinput` to mobile.\n    if ((IS_IOS || IS_ANDROID) && SUPPORTED_EVENTS.beforeinput) {\n      this.element.removeEventListener('beforeinput', this.onNativeBeforeInput)\n    }\n  }\n\n  /**\n   * On update, update the selection.\n   */\n\n  componentDidUpdate = () => {\n    this.updateSelection()\n  }\n\n  /**\n   * Update the native DOM selection to reflect the internal model.\n   */\n\n  updateSelection = () => {\n    const { editor } = this.props\n    const { value } = editor\n    const { selection } = value\n    const { isBackward } = selection\n    const window = getWindow(this.element)\n    const native = window.getSelection()\n\n    // .getSelection() can return null in some cases\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=827585\n    if (!native) return\n\n    const { rangeCount, anchorNode } = native\n\n    // If both selections are blurred, do nothing.\n    if (!rangeCount && selection.isBlurred) return\n\n    // If the selection has been blurred, but is still inside the editor in the\n    // DOM, blur it manually.\n    if (selection.isBlurred) {\n      if (!this.isInEditor(anchorNode)) return\n      removeAllRanges(native)\n      this.element.blur()\n      debug('updateSelection', { selection, native })\n      return\n    }\n\n    // If the selection isn't set, do nothing.\n    if (selection.isUnset) return\n\n    // Otherwise, figure out which DOM nodes should be selected...\n    const current = !!rangeCount && native.getRangeAt(0)\n    const range = findDOMRange(selection, window)\n\n    if (!range) {\n      logger.error(\n        'Unable to find a native DOM range from the current selection.',\n        { selection }\n      )\n      return\n    }\n\n    const { startContainer, startOffset, endContainer, endOffset } = range\n\n    // If the new range matches the current selection, there is nothing to fix.\n    // COMPAT: The native `Range` object always has it's \"start\" first and \"end\"\n    // last in the DOM. It has no concept of \"backwards/forwards\", so we have\n    // to check both orientations here. (2017/10/31)\n    if (current) {\n      if (\n        (startContainer == current.startContainer &&\n          startOffset == current.startOffset &&\n          endContainer == current.endContainer &&\n          endOffset == current.endOffset) ||\n        (startContainer == current.endContainer &&\n          startOffset == current.endOffset &&\n          endContainer == current.startContainer &&\n          endOffset == current.startOffset)\n      ) {\n        return\n      }\n    }\n\n    // Otherwise, set the `isUpdatingSelection` flag and update the selection.\n    this.tmp.isUpdatingSelection = true\n    removeAllRanges(native)\n\n    // COMPAT: IE 11 does not support Selection.setBaseAndExtent\n    if (native.setBaseAndExtent) {\n      // COMPAT: Since the DOM range has no concept of backwards/forwards\n      // we need to check and do the right thing here.\n      if (isBackward) {\n        native.setBaseAndExtent(\n          range.endContainer,\n          range.endOffset,\n          range.startContainer,\n          range.startOffset\n        )\n      } else {\n        native.setBaseAndExtent(\n          range.startContainer,\n          range.startOffset,\n          range.endContainer,\n          range.endOffset\n        )\n      }\n    } else {\n      // COMPAT: IE 11 does not support Selection.extend, fallback to addRange\n      native.addRange(range)\n    }\n\n    // Scroll to the selection, in case it's out of view.\n    scrollToSelection(native)\n\n    // Then unset the `isUpdatingSelection` flag after a delay.\n    setTimeout(() => {\n      // COMPAT: In Firefox, it's not enough to create a range, you also need to\n      // focus the contenteditable element too. (2016/11/16)\n      if (IS_FIREFOX && this.element) this.element.focus()\n      this.tmp.isUpdatingSelection = false\n    })\n\n    debug('updateSelection', { selection, native })\n  }\n\n  /**\n   * The React ref method to set the root content element locally.\n   *\n   * @param {Element} element\n   */\n\n  ref = element => {\n    this.element = element\n  }\n\n  /**\n   * Check if an event `target` is fired from within the contenteditable\n   * element. This should be false for edits happening in non-contenteditable\n   * children, such as void nodes and other nested Slate editors.\n   *\n   * @param {Element} target\n   * @param {Boolean} mustBeEditable True if we need to be in edit mode\n   * @return {Boolean}\n   */\n\n  isInEditor = (target, mustBeEditable = true) => {\n    const { element } = this\n\n    let el\n\n    try {\n      // COMPAT: Text nodes don't have `isContentEditable` property. So, when\n      // `target` is a text node use its parent node for check.\n      el = target.nodeType === 3 ? target.parentNode : target\n    } catch (err) {\n      // COMPAT: In Firefox, `target.nodeType` will throw an error if target is\n      // originating from an internal \"restricted\" element (e.g. a stepper\n      // arrow on a number input)\n      // see github.com/ianstormtaylor/slate/issues/1819\n      if (IS_FIREFOX && FIREFOX_NODE_TYPE_ACCESS_ERROR.test(err.message)) {\n        return false\n      }\n\n      throw err\n    }\n    return (\n      (!mustBeEditable || el.isContentEditable) &&\n      (el === element || el.closest('[data-slate-editor]') === element)\n    )\n  }\n\n  /**\n   * On `event` with `handler`.\n   *\n   * @param {String} handler\n   * @param {Event} event\n   */\n\n  onEvent(handler, event) {\n    debug('onEvent', handler)\n\n    // Ignore `onBlur`, `onFocus` and `onSelect` events generated\n    // programmatically while updating selection.\n    if (\n      this.tmp.isUpdatingSelection &&\n      (handler == 'onSelect' || handler == 'onBlur' || handler == 'onFocus')\n    ) {\n      return\n    }\n\n    // COMPAT: There are situations where a select event will fire with a new\n    // native selection that resolves to the same internal position. In those\n    // cases we don't need to trigger any changes, since our internal model is\n    // already up to date, but we do want to update the native selection again\n    // to make sure it is in sync. (2017/10/16)\n    if (handler == 'onSelect') {\n      const { editor } = this.props\n      const { value } = editor\n      const { selection } = value\n      const window = getWindow(event.target)\n      const native = window.getSelection()\n      const range = findRange(native, value)\n\n      if (range && range.equals(selection)) {\n        this.updateSelection()\n        return\n      }\n    }\n\n    // Don't handle drag and drop events coming from embedded editors.\n    if (\n      handler == 'onDragEnd' ||\n      handler == 'onDragEnter' ||\n      handler == 'onDragExit' ||\n      handler == 'onDragLeave' ||\n      handler == 'onDragOver' ||\n      handler == 'onDragStart' ||\n      handler == 'onDrop'\n    ) {\n      const { target } = event\n      const targetEditorNode = target.closest('[data-slate-editor]')\n      if (targetEditorNode !== this.element) return\n    }\n\n    // Some events require being in editable in the editor, so if the event\n    // target isn't, ignore them.\n    if (\n      handler == 'onBeforeInput' ||\n      handler == 'onBlur' ||\n      handler == 'onCut' ||\n      handler == 'onCompositionEnd' ||\n      handler == 'onCompositionStart' ||\n      handler == 'onFocus' ||\n      handler == 'onInput' ||\n      handler == 'onKeyDown' ||\n      handler == 'onKeyUp' ||\n      handler == 'onPaste' ||\n      handler == 'onSelect'\n    ) {\n      if (!this.isInEditor(event.target)) return\n    }\n\n    // Same for the following events, except they work in read mode too.\n    if (handler == 'onCopy') {\n      if (!this.isInEditor(event.target, false)) return\n    }\n\n    this.props[handler](event)\n  }\n\n  /**\n   * On a native `beforeinput` event, use the additional range information\n   * provided by the event to manipulate text exactly as the browser would.\n   *\n   * This is currently only used on iOS and Android.\n   *\n   * @param {InputEvent} event\n   */\n\n  onNativeBeforeInput = event => {\n    if (this.props.readOnly) return\n    if (!this.isInEditor(event.target)) return\n\n    const [targetRange] = event.getTargetRanges()\n    if (!targetRange) return\n\n    const { editor } = this.props\n\n    switch (event.inputType) {\n      case 'deleteContentBackward': {\n        event.preventDefault()\n\n        const range = findRange(targetRange, editor.value)\n        editor.change(change => change.deleteAtRange(range))\n        break\n      }\n\n      case 'insertLineBreak': // intentional fallthru\n      case 'insertParagraph': {\n        event.preventDefault()\n        const range = findRange(targetRange, editor.value)\n\n        editor.change(change => {\n          if (change.value.isInVoid) {\n            change.collapseToStartOfNextText()\n          } else {\n            change.splitBlockAtRange(range)\n          }\n        })\n\n        break\n      }\n\n      case 'insertReplacementText': // intentional fallthru\n      case 'insertText': {\n        // `data` should have the text for the `insertText` input type and\n        // `dataTransfer` should have the text for the `insertReplacementText`\n        // input type, but Safari uses `insertText` for spell check replacements\n        // and sets `data` to `null`.\n        const text =\n          event.data == null\n            ? event.dataTransfer.getData('text/plain')\n            : event.data\n\n        if (text == null) return\n\n        event.preventDefault()\n\n        const { value } = editor\n        const { selection } = value\n        const range = findRange(targetRange, value)\n\n        editor.change(change => {\n          change.insertTextAtRange(range, text, selection.marks)\n\n          // If the text was successfully inserted, and the selection had marks\n          // on it, unset the selection's marks.\n          if (selection.marks && value.document != change.value.document) {\n            change.select({ marks: null })\n          }\n        })\n\n        break\n      }\n    }\n  }\n\n  /**\n   * On native `selectionchange` event, trigger the `onSelect` handler. This is\n   * needed to account for React's `onSelect` being non-standard and not firing\n   * until after a selection has been released. This causes issues in situations\n   * where another change happens while a selection is being made.\n   *\n   * @param {Event} event\n   */\n\n  onNativeSelectionChange = throttle(event => {\n    if (this.props.readOnly) return\n\n    const window = getWindow(event.target)\n    const { activeElement } = window.document\n    if (activeElement !== this.element) return\n\n    this.props.onSelect(event)\n  }, 100)\n\n  /**\n   * Render the editor content.\n   *\n   * @return {Element}\n   */\n\n  render() {\n    const { props } = this\n    const {\n      className,\n      readOnly,\n      editor,\n      tabIndex,\n      role,\n      tagName,\n      spellCheck,\n    } = props\n    const { value, stack } = editor\n    const Container = tagName\n    const { document, selection, decorations } = value\n    const indexes = document.getSelectionIndexes(selection)\n    const decs = document.getDecorations(stack).concat(decorations || [])\n    const childrenDecorations = getChildrenDecorations(document, decs)\n\n    const children = document.nodes.toArray().map((child, i) => {\n      const isSelected = !!indexes && indexes.start <= i && i < indexes.end\n\n      return this.renderNode(child, isSelected, childrenDecorations[i])\n    })\n\n    const handlers = EVENT_HANDLERS.reduce((obj, handler) => {\n      obj[handler] = this[handler]\n      return obj\n    }, {})\n\n    const style = {\n      // Prevent the default outline styles.\n      outline: 'none',\n      // Preserve adjacent whitespace and new lines.\n      whiteSpace: 'pre-wrap',\n      // Allow words to break if they are too long.\n      wordWrap: 'break-word',\n      // COMPAT: In iOS, a formatting menu with bold, italic and underline\n      // buttons is shown which causes our internal value to get out of sync in\n      // weird ways. This hides that. (2016/06/21)\n      ...(readOnly ? {} : { WebkitUserModify: 'read-write-plaintext-only' }),\n      // Allow for passed-in styles to override anything.\n      ...props.style,\n    }\n\n    debug('render', { props })\n\n    return (\n      <Container\n        {...handlers}\n        data-slate-editor\n        ref={this.ref}\n        data-key={document.key}\n        contentEditable={readOnly ? null : true}\n        suppressContentEditableWarning\n        className={className}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n        onCompositionEnd={this.onCompositionEnd}\n        onCompositionStart={this.onCompositionStart}\n        onCopy={this.onCopy}\n        onCut={this.onCut}\n        onDragEnd={this.onDragEnd}\n        onDragOver={this.onDragOver}\n        onDragStart={this.onDragStart}\n        onDrop={this.onDrop}\n        onInput={this.onInput}\n        onKeyDown={this.onKeyDown}\n        onKeyUp={this.onKeyUp}\n        onPaste={this.onPaste}\n        onSelect={this.onSelect}\n        autoCorrect={props.autoCorrect ? 'on' : 'off'}\n        spellCheck={spellCheck}\n        style={style}\n        role={readOnly ? null : role || 'textbox'}\n        tabIndex={tabIndex}\n        // COMPAT: The Grammarly Chrome extension works by changing the DOM out\n        // from under `contenteditable` elements, which leads to weird behaviors\n        // so we have to disable it like this. (2017/04/24)\n        data-gramm={false}\n      >\n        {children}\n        {this.props.children}\n      </Container>\n    )\n  }\n\n  /**\n   * Render a `child` node of the document.\n   *\n   * @param {Node} child\n   * @param {Boolean} isSelected\n   * @return {Element}\n   */\n\n  renderNode = (child, isSelected, decorations) => {\n    const { editor, readOnly } = this.props\n    const { value } = editor\n    const { document, isFocused } = value\n\n    return (\n      <Node\n        block={null}\n        editor={editor}\n        decorations={decorations}\n        isSelected={isSelected}\n        isFocused={isFocused && isSelected}\n        key={child.key}\n        node={child}\n        parent={document}\n        readOnly={readOnly}\n      />\n    )\n  }\n}\n\n/**\n * Mix in handler prop types.\n */\n\nEVENT_HANDLERS.forEach(handler => {\n  Content.propTypes[handler] = Types.func.isRequired\n})\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Content\n","/**\n * The transfer types that Slate recognizes.\n *\n * @type {Object}\n */\n\nconst TRANSFER_TYPES = {\n  FRAGMENT: 'application/x-slate-fragment',\n  HTML: 'text/html',\n  NODE: 'application/x-slate-node',\n  RICH: 'text/rtf',\n  TEXT: 'text/plain',\n}\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexport default TRANSFER_TYPES\n","import Base64 from '@gitbook/slate-base64-serializer'\nimport Plain from '@gitbook/slate-plain-serializer'\nimport { Value } from '@gitbook/slate'\nimport TRANSFER_TYPES from '../constants/transfer-types'\nimport getWindow from 'get-window'\nimport findDOMNode from './find-dom-node'\nimport removeAllRanges from './remove-all-ranges'\nimport { IS_IE } from '@gitbook/slate-dev-environment'\nimport { ZERO_WIDTH_SELECTOR, ZERO_WIDTH_ATTRIBUTE } from './find-point'\n\nconst { FRAGMENT, HTML, TEXT } = TRANSFER_TYPES\n\n/**\n * Prepares a Slate document fragment to be copied to the clipboard.\n *\n * @param {Event} event\n * @param {Value} value\n * @param {Document} [fragment]\n */\n\nfunction cloneFragment(event, value, fragment = value.fragment) {\n  const window = getWindow(event.target)\n  const native = window.getSelection()\n  const { startKey, endKey } = value\n  const startVoid = value.document.getClosestVoid(startKey)\n  const endVoid = value.document.getClosestVoid(endKey)\n\n  // If the selection is collapsed, and it isn't inside a void node, abort.\n  if (native.isCollapsed && !startVoid) return\n\n  // Create a fake selection so that we can add a Base64-encoded copy of the\n  // fragment to the HTML, to decode on future pastes.\n  const encoded = Base64.serializeNode(fragment)\n  const range = native.getRangeAt(0)\n  let contents = range.cloneContents()\n  let attach = contents.childNodes[0]\n\n  // Make sure attach is a non-empty node, since empty nodes will not get copied\n  contents.childNodes.forEach(node => {\n    if (node.textContent && node.textContent.trim() !== '') {\n      attach = node\n    }\n  })\n\n  // COMPAT: If the end node is a void node, we need to move the end of the\n  // range from the void node's spacer span, to the end of the void node's\n  // content, since the spacer is before void's content in the DOM.\n  if (endVoid) {\n    const r = range.cloneRange()\n    const node = findDOMNode(endVoid, window)\n    r.setEndAfter(node)\n    contents = r.cloneContents()\n  }\n\n  // COMPAT: If the start node is a void node, we need to attach the encoded\n  // fragment to the void node's content node instead of the spacer, because\n  // attaching it to empty `<div>/<span>` nodes will end up having it erased by\n  // most browsers. (2018/04/27)\n  if (startVoid) {\n    attach = contents.childNodes[0].childNodes[1].firstChild\n  }\n\n  // Remove any zero-width space spans from the cloned DOM so that they don't\n  // show up elsewhere when pasted.\n  ;[].slice.call(contents.querySelectorAll(ZERO_WIDTH_SELECTOR)).forEach(zw => {\n    const isNewline = zw.getAttribute(ZERO_WIDTH_ATTRIBUTE) === 'n'\n    zw.textContent = isNewline ? '\\n' : ''\n  })\n\n  // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\n  // in the HTML, and can be used for intra-Slate pasting. If it's a text\n  // node, wrap it in a `<span>` so we have something to set an attribute on.\n  if (attach.nodeType == 3) {\n    const span = window.document.createElement('span')\n\n    // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\n    // then leading and trailing spaces will be ignored. (2017/09/21)\n    span.style.whiteSpace = 'pre'\n\n    span.appendChild(attach)\n    contents.appendChild(span)\n    attach = span\n  }\n\n  attach.setAttribute('data-slate-fragment', encoded)\n\n  //  Creates value from only the selected blocks\n  //  Then gets plaintext for clipboard with proper linebreaks for BLOCK elements\n  //  Via Plain serializer\n  const valFromSelection = Value.create({ document: fragment })\n  const plainText = Plain.serialize(valFromSelection)\n\n  // Add the phony content to a div element. This is needed to copy the\n  // contents into the html clipboard register.\n  const div = window.document.createElement('div')\n  div.appendChild(contents)\n\n  // For browsers supporting it, we set the clipboard registers manually,\n  // since the result is more predictable.\n  // COMPAT: IE supports the setData method, but only in restricted sense.\n  // IE doesn't support arbitrary MIME types or common ones like 'text/plain';\n  // it only accepts \"Text\" (which gets mapped to 'text/plain') and \"Url\"\n  // (mapped to 'text/url-list'); so, we should only enter block if !IS_IE\n  if (event.clipboardData && event.clipboardData.setData && !IS_IE) {\n    event.preventDefault()\n    event.clipboardData.setData(TEXT, plainText)\n    event.clipboardData.setData(FRAGMENT, encoded)\n    event.clipboardData.setData(HTML, div.innerHTML)\n    return\n  }\n\n  // COMPAT: For browser that don't support the Clipboard API's setData method,\n  // we must rely on the browser to natively copy what's selected.\n  // So we add the div (containing our content) to the DOM, and select it.\n  const editor = event.target.closest('[data-slate-editor]')\n  div.setAttribute('contenteditable', true)\n  div.style.position = 'absolute'\n  div.style.left = '-9999px'\n  editor.appendChild(div)\n  native.selectAllChildren(div)\n\n  // Revert to the previous selection right after copying.\n  window.requestAnimationFrame(() => {\n    editor.removeChild(div)\n    removeAllRanges(native)\n    native.addRange(range)\n  })\n}\n\nexport default cloneFragment\n","/**\n * Find a Slate node from a DOM `element`.\n *\n * @param {Element} element\n * @param {Value} value\n * @return {Node|Null}\n */\n\nfunction findNode(element, value) {\n  const closest = element.closest('[data-key]')\n  if (!closest) return null\n\n  const key = closest.getAttribute('data-key')\n  if (!key) return null\n\n  const node = value.document.getNode(key)\n  return node || null\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findNode\n","import getWindow from 'get-window'\n\nimport { Range } from '@gitbook/slate'\nimport findNode from './find-node'\nimport findRange from './find-range'\n\n/**\n * Get the target range from a DOM `event`.\n *\n * @param {Event} event\n * @param {Value} value\n * @return {Range}\n */\n\nfunction getEventRange(event, value) {\n  if (event.nativeEvent) {\n    event = event.nativeEvent\n  }\n\n  const { x, y, target } = event\n  if (x == null || y == null) return null\n\n  const { document } = value\n  const node = findNode(target, value)\n  if (!node) return null\n\n  // If the drop target is inside a void node, move it into either the next or\n  // previous node, depending on which side the `x` and `y` coordinates are\n  // closest to.\n  if (node.isVoid) {\n    const rect = target.getBoundingClientRect()\n    const isPrevious =\n      node.object == 'inline'\n        ? x - rect.left < rect.left + rect.width - x\n        : y - rect.top < rect.top + rect.height - y\n\n    const text = node.getFirstText()\n    const range = Range.create()\n\n    if (isPrevious) {\n      const previousText = document.getPreviousText(text.key)\n\n      if (previousText) {\n        return range.moveToEndOf(previousText)\n      }\n    }\n\n    const nextText = document.getNextText(text.key)\n    return nextText ? range.moveToStartOf(nextText) : null\n  }\n\n  // Else resolve a range from the caret position where the drop occured.\n  const window = getWindow(target)\n  let native\n\n  // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\n  if (window.document.caretRangeFromPoint) {\n    native = window.document.caretRangeFromPoint(x, y)\n  } else if (window.document.caretPositionFromPoint) {\n    const position = window.document.caretPositionFromPoint(x, y)\n    native = window.document.createRange()\n    native.setStart(position.offsetNode, position.offset)\n    native.setEnd(position.offsetNode, position.offset)\n  } else if (window.document.body.createTextRange) {\n    // COMPAT: In IE, `caretRangeFromPoint` and\n    // `caretPositionFromPoint` don't exist. (2018/07/11)\n    native = window.document.body.createTextRange()\n\n    try {\n      native.moveToPoint(x, y)\n    } catch (error) {\n      // IE11 will raise an `unspecified error` if `moveToPoint` is\n      // called during a dropEvent.\n      return null\n    }\n  }\n\n  // Resolve a Slate range from the DOM range.\n  const range = findRange(native, value)\n  if (!range) return null\n\n  return range\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default getEventRange\n","import Base64 from '@gitbook/slate-base64-serializer'\nimport { IS_IE } from '@gitbook/slate-dev-environment'\nimport TRANSFER_TYPES from '../constants/transfer-types'\n\n/**\n * Transfer types.\n *\n * @type {String}\n */\n\nconst { FRAGMENT, HTML, NODE, RICH, TEXT } = TRANSFER_TYPES\n\n/**\n * Fragment matching regexp for HTML nodes.\n *\n * @type {RegExp}\n */\n\nconst FRAGMENT_MATCHER = / data-slate-fragment=\"([^\\s\"]+)\"/\n\n/**\n * Get the transfer data from an `event`.\n *\n * @param {Event} event\n * @return {Object}\n */\n\nfunction getEventTransfer(event) {\n  // COMPAT: IE 11 doesn't populate nativeEvent with either\n  // dataTransfer or clipboardData. We'll need to use the base event\n  // object (2018/14/6)\n  if (!IS_IE && event.nativeEvent) {\n    event = event.nativeEvent\n  }\n\n  const transfer = event.dataTransfer || event.clipboardData\n  let fragment = getType(transfer, FRAGMENT)\n  let node = getType(transfer, NODE)\n  const html = getType(transfer, HTML)\n  const rich = getType(transfer, RICH)\n  let text = getType(transfer, TEXT)\n  let files\n\n  // If there isn't a fragment, but there is HTML, check to see if the HTML is\n  // actually an encoded fragment.\n  if (!fragment && html && ~html.indexOf(' data-slate-fragment=\"')) {\n    const matches = FRAGMENT_MATCHER.exec(html)\n    const [full, encoded] = matches // eslint-disable-line no-unused-vars\n    if (encoded) fragment = encoded\n  }\n\n  // COMPAT: Edge doesn't handle custom data types\n  // These will be embedded in text/plain in this case (2017/7/12)\n  if (text) {\n    const embeddedTypes = getEmbeddedTypes(text)\n\n    if (embeddedTypes[FRAGMENT]) fragment = embeddedTypes[FRAGMENT]\n    if (embeddedTypes[NODE]) node = embeddedTypes[NODE]\n    if (embeddedTypes[TEXT]) text = embeddedTypes[TEXT]\n  }\n\n  // Decode a fragment or node if they exist.\n  if (fragment) fragment = Base64.deserializeNode(fragment)\n  if (node) node = Base64.deserializeNode(node)\n\n  // COMPAT: Edge sometimes throws 'NotSupportedError'\n  // when accessing `transfer.items` (2017/7/12)\n  try {\n    // Get and normalize files if they exist.\n    if (transfer.items && transfer.items.length) {\n      files = Array.from(transfer.items)\n        .map(item => (item.kind == 'file' ? item.getAsFile() : null))\n        .filter(exists => exists)\n    } else if (transfer.files && transfer.files.length) {\n      files = Array.from(transfer.files)\n    }\n  } catch (err) {\n    if (transfer.files && transfer.files.length) {\n      files = Array.from(transfer.files)\n    }\n  }\n\n  // Determine the type of the data.\n  const data = { files, fragment, html, node, rich, text }\n  data.type = getTransferType(data)\n  return data\n}\n\n/**\n * Takes text input, checks whether contains embedded data\n * and returns object with original text +/- additional data\n *\n * @param {String} text\n * @return {Object}\n */\n\nfunction getEmbeddedTypes(text) {\n  const prefix = 'SLATE-DATA-EMBED::'\n\n  if (text.substring(0, prefix.length) != prefix) {\n    return { TEXT: text }\n  }\n\n  // Attempt to parse, if fails then just standard text/plain\n  // Otherwise, already had data embedded\n  try {\n    return JSON.parse(text.substring(prefix.length))\n  } catch (err) {\n    throw new Error('Unable to parse custom Slate drag event data.')\n  }\n}\n\n/**\n * Get the type of a transfer from its `data`.\n *\n * @param {Object} data\n * @return {String}\n */\n\nfunction getTransferType(data) {\n  if (data.fragment) return 'fragment'\n  if (data.node) return 'node'\n\n  // COMPAT: Microsoft Word adds an image of the selected text to the data.\n  // Since files are preferred over HTML or text, this would cause the type to\n  // be considered `files`. But it also adds rich text data so we can check\n  // for that and properly set the type to `html` or `text`. (2016/11/21)\n  if (data.rich && data.html) return 'html'\n  if (data.rich && data.text) return 'text'\n\n  if (data.files && data.files.length) return 'files'\n  if (data.html) return 'html'\n  if (data.text) return 'text'\n  return 'unknown'\n}\n\n/**\n * Get one of types `TYPES.FRAGMENT`, `TYPES.NODE`, `text/html`, `text/rtf` or\n * `text/plain` from transfers's `data` if possible, otherwise return null.\n *\n * @param {Object} transfer\n * @param {String} type\n * @return {String}\n */\n\nfunction getType(transfer, type) {\n  if (!transfer.types || !transfer.types.length) {\n    // COMPAT: In IE 11, there is no `types` field but `getData('Text')`\n    // is supported`. (2017/06/23)\n    return type == TEXT ? transfer.getData('Text') || null : null\n  }\n\n  // COMPAT: In Edge, transfer.types doesn't respond to `indexOf`. (2017/10/25)\n  const types = Array.from(transfer.types)\n\n  return types.indexOf(type) !== -1 ? transfer.getData(type) || null : null\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default getEventTransfer\n","import TRANSFER_TYPES from '../constants/transfer-types'\n\n/**\n * The default plain text transfer type.\n *\n * @type {String}\n */\n\nconst { TEXT } = TRANSFER_TYPES\n\n/**\n * Set data with `type` and `content` on an `event`.\n *\n * COMPAT: In Edge, custom types throw errors, so embed all non-standard\n * types in text/plain compound object. (2017/7/12)\n *\n * @param {Event} event\n * @param {String} type\n * @param {String} content\n */\n\nfunction setEventTransfer(event, type, content) {\n  const mime = TRANSFER_TYPES[type.toUpperCase()]\n\n  if (!mime) {\n    throw new Error(`Cannot set unknown transfer type \"${mime}\".`)\n  }\n\n  if (event.nativeEvent) {\n    event = event.nativeEvent\n  }\n\n  const transfer = event.dataTransfer || event.clipboardData\n\n  try {\n    transfer.setData(mime, content)\n    // COMPAT: Safari needs to have the 'text' (and not 'text/plain') value in dataTransfer\n    // to display the cursor while dragging internally.\n    transfer.setData('text', transfer.getData('text'))\n  } catch (err) {\n    const prefix = 'SLATE-DATA-EMBED::'\n    const text = transfer.getData(TEXT)\n    let obj = {}\n\n    // If the existing plain text data is prefixed, it's Slate JSON data.\n    if (text.substring(0, prefix.length) === prefix) {\n      try {\n        obj = JSON.parse(text.substring(prefix.length))\n      } catch (e) {\n        throw new Error(\n          'Failed to parse Slate data from `DataTransfer` object.'\n        )\n      }\n    } else {\n      // Otherwise, it's just set it as is.\n      obj[TEXT] = text\n    }\n\n    obj[mime] = content\n    const string = `${prefix}${JSON.stringify(obj)}`\n    transfer.setData(TEXT, string)\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default setEventTransfer\n","import Base64 from '@gitbook/slate-base64-serializer'\nimport Debug from 'debug'\nimport Plain from '@gitbook/slate-plain-serializer'\nimport { IS_IOS } from '@gitbook/slate-dev-environment'\nimport React from 'react'\nimport getWindow from 'get-window'\nimport { Block, Inline, Text } from '@gitbook/slate'\nimport Hotkeys from '@gitbook/slate-hotkeys'\n\nimport EVENT_HANDLERS from '../constants/event-handlers'\nimport Content from '../components/content'\nimport cloneFragment from '../utils/clone-fragment'\nimport findDOMNode from '../utils/find-dom-node'\nimport findNode from '../utils/find-node'\nimport findPoint from '../utils/find-point'\nimport findRange from '../utils/find-range'\nimport getEventRange from '../utils/get-event-range'\nimport getEventTransfer from '../utils/get-event-transfer'\nimport setEventTransfer from '../utils/set-event-transfer'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:after')\n\n/**\n * The after plugin.\n *\n * @return {Object}\n */\n\nfunction AfterPlugin() {\n  let isDraggingInternally = null\n\n  /**\n   * On before input, correct any browser inconsistencies.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onBeforeInput(event, change, editor) {\n    debug('onBeforeInput', { event })\n\n    event.preventDefault()\n    change.insertText(event.data)\n  }\n\n  /**\n   * On blur.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onBlur(event, change, editor) {\n    debug('onBlur', { event })\n\n    change.blur()\n  }\n\n  /**\n   * On click.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onClick(event, change, editor) {\n    if (editor.props.readOnly) {\n      return true\n    }\n\n    const { value } = change\n    const { document } = value\n    const node = findNode(event.target, value)\n\n    if (!node) {\n      return\n    }\n\n    const isVoid = node.isVoid || document.hasVoidParent(node.key)\n\n    if (isVoid) {\n      // COMPAT: In Chrome & Safari, selections that are at the zero offset of\n      // an inline node will be automatically replaced to be at the last offset\n      // of a previous inline node, which screws us up, so we always want to set\n      // it to the end of the node. (2016/11/29)\n      change.focus().collapseToEndOf(node)\n    }\n\n    debug('onClick', { event })\n  }\n\n  /**\n   * On copy.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onCopy(event, change, editor) {\n    debug('onCopy', { event })\n\n    cloneFragment(event, change.value)\n  }\n\n  /**\n   * On cut.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onCut(event, change, editor) {\n    debug('onCut', { event })\n\n    const { value } = change\n    cloneFragment(event, value)\n\n    if (editor.props.readOnly) {\n      // We can only copy the content, so stop here\n      return\n    }\n\n    const window = getWindow(event.target)\n\n    // Once the fake cut content has successfully been added to the clipboard,\n    // delete the content in the current selection.\n    window.requestAnimationFrame(() => {\n      // If user cuts a void block node or a void inline node,\n      // manually removes it since selection is collapsed in this case.\n      const { endBlock, endInline, isCollapsed } = value\n      const isVoidBlock = endBlock && endBlock.isVoid && isCollapsed\n      const isVoidInline = endInline && endInline.isVoid && isCollapsed\n\n      if (isVoidBlock) {\n        editor.change(c => c.removeNodeByKey(endBlock.key))\n      } else if (isVoidInline) {\n        editor.change(c => c.removeNodeByKey(endInline.key))\n      } else {\n        editor.change(c => c.delete())\n      }\n    })\n  }\n\n  /**\n   * On drag end.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragEnd(event, change, editor) {\n    debug('onDragEnd', { event })\n\n    isDraggingInternally = null\n  }\n\n  /**\n   * On drag over.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragOver(event, change, editor) {\n    debug('onDragOver', { event })\n  }\n\n  /**\n   * On drag start.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragStart(event, change, editor) {\n    debug('onDragStart', { event })\n\n    isDraggingInternally = true\n\n    const { value } = change\n    const { document } = value\n    const node = findNode(event.target, value)\n    const isVoid = node && (node.isVoid || document.hasVoidParent(node.key))\n\n    if (isVoid) {\n      const encoded = Base64.serializeNode(node, { preserveKeys: true })\n      setEventTransfer(event, 'node', encoded)\n    } else {\n      const { fragment } = value\n      const encoded = Base64.serializeNode(fragment)\n      setEventTransfer(event, 'fragment', encoded)\n    }\n  }\n\n  /**\n   * On drop.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDrop(event, change, editor) {\n    debug('onDrop', { event })\n\n    const { value } = change\n    const { document, selection } = value\n    const window = getWindow(event.target)\n    let target = getEventRange(event, value)\n    if (!target) return\n\n    const transfer = getEventTransfer(event)\n    const { type, fragment, node, text } = transfer\n\n    change.focus()\n\n    // If the drag is internal and the target is after the selection, it\n    // needs to account for the selection's content being deleted.\n    if (\n      isDraggingInternally &&\n      selection.endKey == target.endKey &&\n      selection.endOffset < target.endOffset\n    ) {\n      target = target.move(\n        selection.startKey == selection.endKey\n          ? 0 - selection.endOffset + selection.startOffset\n          : 0 - selection.endOffset\n      )\n    }\n\n    if (isDraggingInternally) {\n      change.delete()\n    }\n\n    change.select(target)\n\n    if (type == 'text' || type == 'html') {\n      const { anchorKey } = target\n      let hasVoidParent = document.hasVoidParent(anchorKey)\n\n      if (hasVoidParent) {\n        let n = document.getNode(anchorKey)\n\n        while (hasVoidParent) {\n          n = document.getNextText(n.key)\n          if (!n) break\n          hasVoidParent = document.hasVoidParent(n.key)\n        }\n\n        if (n) change.collapseToStartOf(n)\n      }\n\n      if (text) {\n        text.split('\\n').forEach((line, i) => {\n          if (i > 0) change.splitBlock()\n          change.insertText(line)\n        })\n      }\n    }\n\n    if (type == 'fragment') {\n      change.insertFragment(fragment)\n    }\n\n    if (type == 'node' && Block.isBlock(node)) {\n      change.insertBlock(node.regenerateKey()).removeNodeByKey(node.key)\n    }\n\n    if (type == 'node' && Inline.isInline(node)) {\n      change.insertInline(node.regenerateKey()).removeNodeByKey(node.key)\n    }\n\n    // COMPAT: React's onSelect event breaks after an onDrop event\n    // has fired in a node: https://github.com/facebook/react/issues/11379.\n    // Until this is fixed in React, we dispatch a mouseup event on that\n    // DOM node, since that will make it go back to normal.\n    const focusNode = document.getNode(target.focusKey)\n    const el = findDOMNode(focusNode, window)\n    if (!el) return\n\n    el.dispatchEvent(\n      new MouseEvent('mouseup', {\n        view: window,\n        bubbles: true,\n        cancelable: true,\n      })\n    )\n  }\n\n  /**\n   * On input.\n   *\n   * @param {Event} eventvent\n   * @param {Change} change\n   */\n\n  function onInput(event, change, editor) {\n    debug('onInput', { event })\n\n    const window = getWindow(event.target)\n    const { value } = change\n\n    // Get the selection point.\n    const native = window.getSelection()\n    const { anchorNode } = native\n    const point = findPoint(anchorNode, 0, value)\n    if (!point) return\n\n    // Get the text node and leaf in question.\n    const { document, selection } = value\n    const node = document.getDescendant(point.key)\n    const block = document.getClosestBlock(node.key)\n    const leaves = node.getLeaves()\n    const lastText = block.getLastText()\n    const lastLeaf = leaves.last()\n    let start = 0\n    let end = 0\n\n    const leaf =\n      leaves.find(r => {\n        start = end\n        end += r.text.length\n        if (end > point.offset) return true\n      }) || lastLeaf\n\n    // Get the text information.\n    const { text } = leaf\n    let { textContent } = anchorNode\n    const isLastText = node == lastText\n    const isLastLeaf = leaf == lastLeaf\n    const lastChar = textContent.charAt(textContent.length - 1)\n\n    // COMPAT: If this is the last leaf, and the DOM text ends in a new line,\n    // we will have added another new line in <Leaf>'s render method to account\n    // for browsers collapsing a single trailing new lines, so remove it.\n    if (isLastText && isLastLeaf && lastChar == '\\n') {\n      textContent = textContent.slice(0, -1)\n    }\n\n    // If the text is no different, abort.\n    if (textContent == text) return\n\n    // Determine what the selection should be after changing the text.\n    const delta = textContent.length - text.length\n    const corrected = selection.collapseToEnd().move(delta)\n    const entire = selection\n      .moveAnchorTo(point.key, start)\n      .moveFocusTo(point.key, end)\n\n    // Change the current value to have the leaf's text replaced.\n    change.insertTextAtRange(entire, textContent, leaf.marks).select(corrected)\n  }\n\n  /**\n   * On key down.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onKeyDown(event, change, editor) {\n    debug('onKeyDown', { event })\n\n    const { value } = change\n\n    // COMPAT: In iOS, some of these hotkeys are handled in the\n    // `onNativeBeforeInput` handler of the `<Content>` component in order to\n    // preserve native autocorrect behavior, so they shouldn't be handled here.\n    if (Hotkeys.isSplitBlock(event) && !IS_IOS) {\n      return value.isInVoid\n        ? change.collapseToStartOfNextText()\n        : change.splitBlock()\n    }\n\n    if (Hotkeys.isDeleteCharBackward(event) && !IS_IOS) {\n      return change.deleteCharBackward()\n    }\n\n    if (Hotkeys.isDeleteCharForward(event) && !IS_IOS) {\n      return change.deleteCharForward()\n    }\n\n    if (Hotkeys.isDeleteLineBackward(event)) {\n      return change.deleteLineBackward()\n    }\n\n    if (Hotkeys.isDeleteLineForward(event)) {\n      return change.deleteLineForward()\n    }\n\n    if (Hotkeys.isDeleteWordBackward(event)) {\n      return change.deleteWordBackward()\n    }\n\n    if (Hotkeys.isDeleteWordForward(event)) {\n      return change.deleteWordForward()\n    }\n\n    if (Hotkeys.isRedo(event)) {\n      return change.redo()\n    }\n\n    if (Hotkeys.isUndo(event)) {\n      return change.undo()\n    }\n\n    // COMPAT: Certain browsers don't handle the selection updates properly. In\n    // Chrome, the selection isn't properly extended. And in Firefox, the\n    // selection isn't properly collapsed. (2017/10/17)\n    if (Hotkeys.isCollapseLineBackward(event)) {\n      event.preventDefault()\n      return change.collapseLineBackward()\n    }\n\n    if (Hotkeys.isCollapseLineForward(event)) {\n      event.preventDefault()\n      return change.collapseLineForward()\n    }\n\n    if (Hotkeys.isExtendLineBackward(event)) {\n      event.preventDefault()\n      return change.extendLineBackward()\n    }\n\n    if (Hotkeys.isExtendLineForward(event)) {\n      event.preventDefault()\n      return change.extendLineForward()\n    }\n\n    // COMPAT: If a void node is selected, or a zero-width text node adjacent to\n    // an inline is selected, we need to handle these hotkeys manually because\n    // browsers won't know what to do.\n    if (Hotkeys.isCollapseCharBackward(event)) {\n      const { document, isInVoid, previousText, startText } = value\n      const isPreviousInVoid =\n        previousText && document.hasVoidParent(previousText.key)\n\n      if (isInVoid || isPreviousInVoid || startText.text == '') {\n        event.preventDefault()\n        return change.collapseCharBackward()\n      }\n    }\n\n    if (Hotkeys.isCollapseCharForward(event)) {\n      const { document, isInVoid, nextText, startText } = value\n      const isNextInVoid = nextText && document.hasVoidParent(nextText.key)\n\n      if (isInVoid || isNextInVoid || startText.text == '') {\n        event.preventDefault()\n        return change.collapseCharForward()\n      }\n    }\n\n    if (Hotkeys.isExtendCharBackward(event)) {\n      const { document, isInVoid, previousText, startText } = value\n      const isPreviousInVoid =\n        previousText && document.hasVoidParent(previousText.key)\n\n      if (isInVoid || isPreviousInVoid || startText.text == '') {\n        event.preventDefault()\n        return change.extendCharBackward()\n      }\n    }\n\n    if (Hotkeys.isExtendCharForward(event)) {\n      const { document, isInVoid, nextText, startText } = value\n      const isNextInVoid = nextText && document.hasVoidParent(nextText.key)\n\n      if (isInVoid || isNextInVoid || startText.text == '') {\n        event.preventDefault()\n        return change.extendCharForward()\n      }\n    }\n  }\n\n  /**\n   * On paste.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onPaste(event, change, editor) {\n    debug('onPaste', { event })\n\n    const transfer = getEventTransfer(event)\n    const { type, fragment, text } = transfer\n\n    if (type == 'fragment') {\n      change.insertFragment(fragment)\n    }\n\n    if (type == 'text' || type == 'html') {\n      if (!text) return\n      const { value } = change\n      const { document, selection, startBlock } = value\n      if (startBlock.isVoid) return\n\n      const defaultBlock = startBlock\n      const defaultMarks = document.getInsertMarksAtRange(selection)\n      const frag = Plain.deserialize(text, { defaultBlock, defaultMarks })\n        .document\n      change.insertFragment(frag)\n    }\n  }\n\n  /**\n   * On select.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onSelect(event, change, editor) {\n    debug('onSelect', { event })\n\n    const window = getWindow(event.target)\n    const { value } = change\n    const { document } = value\n    const native = window.getSelection()\n\n    // If there are no ranges, the editor was blurred natively.\n    if (!native.rangeCount) {\n      change.blur()\n      return\n    }\n\n    // Otherwise, determine the Slate selection from the native one.\n    let range = findRange(native, value)\n    if (!range) return\n\n    const { anchorKey, anchorOffset, focusKey, focusOffset } = range\n    const anchorText = document.getNode(anchorKey)\n    const focusText = document.getNode(focusKey)\n    const anchorInline = document.getClosestInline(anchorKey)\n    const focusInline = document.getClosestInline(focusKey)\n    const focusBlock = document.getClosestBlock(focusKey)\n    const anchorBlock = document.getClosestBlock(anchorKey)\n\n    // COMPAT: If the anchor point is at the start of a non-void, and the\n    // focus point is inside a void node with an offset that isn't `0`, set\n    // the focus offset to `0`. This is due to void nodes <span>'s being\n    // positioned off screen, resulting in the offset always being greater\n    // than `0`. Since we can't know what it really should be, and since an\n    // offset of `0` is less destructive because it creates a hanging\n    // selection, go with `0`. (2017/09/07)\n    if (\n      anchorBlock &&\n      !anchorBlock.isVoid &&\n      anchorOffset == 0 &&\n      focusBlock &&\n      focusBlock.isVoid &&\n      focusOffset != 0\n    ) {\n      range = range.set('focusOffset', 0)\n    }\n\n    // COMPAT: If the selection is at the end of a non-void inline node, and\n    // there is a node after it, put it in the node after instead. This\n    // standardizes the behavior, since it's indistinguishable to the user.\n    if (\n      anchorInline &&\n      !anchorInline.isVoid &&\n      anchorOffset == anchorText.text.length\n    ) {\n      const block = document.getClosestBlock(anchorKey)\n      const next = block.getNextText(anchorKey)\n      if (next) range = range.moveAnchorTo(next.key, 0)\n    }\n\n    if (\n      focusInline &&\n      !focusInline.isVoid &&\n      focusOffset == focusText.text.length\n    ) {\n      const block = document.getClosestBlock(focusKey)\n      const next = block.getNextText(focusKey)\n      if (next) range = range.moveFocusTo(next.key, 0)\n    }\n\n    range = range.normalize(document)\n\n    // Preserve active marks from the current selection.\n    // They will be cleared by `change.select` if the selection actually moved.\n    range = range.set('marks', value.selection.marks)\n\n    change.select(range)\n  }\n\n  /**\n   * Render editor.\n   *\n   * @param {Object} props\n   * @param {Editor} editor\n   * @return {Object}\n   */\n\n  function renderEditor(props, editor) {\n    const handlers = EVENT_HANDLERS.reduce((obj, handler) => {\n      obj[handler] = editor[handler]\n      return obj\n    }, {})\n\n    return (\n      <Content\n        {...handlers}\n        autoCorrect={props.autoCorrect}\n        className={props.className}\n        children={props.children}\n        editor={editor}\n        readOnly={props.readOnly}\n        role={props.role}\n        spellCheck={props.spellCheck}\n        style={props.style}\n        tabIndex={props.tabIndex}\n        tagName={props.tagName}\n      />\n    )\n  }\n\n  /**\n   * Render node.\n   *\n   * @param {Object} props\n   * @return {Element}\n   */\n\n  function renderNode(props) {\n    const { attributes, children, node } = props\n    if (node.object != 'block' && node.object != 'inline') return\n    const Tag = node.object == 'block' ? 'div' : 'span'\n    const style = { position: 'relative' }\n    return (\n      <Tag {...attributes} style={style}>\n        {children}\n      </Tag>\n    )\n  }\n\n  /**\n   * Render placeholder.\n   *\n   * @param {Object} props\n   * @return {Element}\n   */\n\n  function renderPlaceholder(props) {\n    const { editor, node } = props\n    if (!editor.props.placeholder) return\n    if (editor.state.isComposing) return\n    if (node.object != 'block') return\n    if (!Text.isTextList(node.nodes)) return\n    if (node.text != '') return\n    if (editor.value.document.getBlocks().size > 1) return\n\n    const style = {\n      pointerEvents: 'none',\n      display: 'inline-block',\n      width: '0',\n      maxWidth: '100%',\n      whiteSpace: 'nowrap',\n      opacity: '0.333',\n    }\n\n    return (\n      <span contentEditable={false} style={style}>\n        {editor.props.placeholder}\n      </span>\n    )\n  }\n\n  /**\n   * Return the plugin.\n   *\n   * @type {Object}\n   */\n\n  return {\n    onBeforeInput,\n    onBlur,\n    onClick,\n    onCopy,\n    onCut,\n    onDragEnd,\n    onDragOver,\n    onDragStart,\n    onDrop,\n    onInput,\n    onKeyDown,\n    onPaste,\n    onSelect,\n    renderEditor,\n    renderNode,\n    renderPlaceholder,\n  }\n}\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexport default AfterPlugin\n","import Debug from 'debug'\nimport getWindow from 'get-window'\nimport { findDOMNode } from 'react-dom'\nimport Hotkeys from '@gitbook/slate-hotkeys'\nimport {\n  IS_FIREFOX,\n  IS_IE,\n  IS_IOS,\n  IS_ANDROID,\n  SUPPORTED_EVENTS,\n} from '@gitbook/slate-dev-environment'\n\nimport findNode from '../utils/find-node'\nimport findRange from '../utils/find-range'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:before')\n\n/**\n * In edit mode, uses the current change selection. In read mode,\n * tries to compute the current Slate range from the native\n * selection, and returns the updated change.\n * Returns null if no selection could be computed.\n *\n * @param {Event} event\n * @param {Change} change\n * @param {Editor} editor\n * @returns {Boolean} False if we could not determine get a Slate selection\n */\n\nfunction ensureSlateSelection(event, change, editor) {\n  const { readOnly } = editor.props\n  const { value } = change\n\n  if (!readOnly) {\n    return true\n  }\n\n  // We need to compute the current selection\n  const window = getWindow(event.target)\n  const native = window.getSelection()\n  const range = findRange(native, value)\n\n  if (!range) {\n    // We don't have a Slate selection\n    return false\n  }\n\n  // Ensure the value has the correct selection set\n  change.select(range)\n  return true\n}\n\n/**\n * The core before plugin.\n *\n * @return {Object}\n */\n\nfunction BeforePlugin() {\n  let activeElement = null\n  let compositionCount = 0\n  let isComposing = false\n  let isCopying = false\n  let isDragging = false\n\n  /**\n   * On before input.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onBeforeInput(event, change, editor) {\n    if (editor.props.readOnly) return true\n\n    // COMPAT: React's `onBeforeInput` synthetic event is based on the native\n    // `keypress` and `textInput` events. In browsers that support the native\n    // `beforeinput` event, we instead use that event to trigger text insertion,\n    // since it provides more useful information about the range being affected\n    // and also preserves compatibility with iOS autocorrect, which would be\n    // broken if we called `preventDefault()` on React's synthetic event here.\n    // Since native `onbeforeinput` mainly benefits autocorrect and spellcheck\n    // for mobile, on desktop it brings IME issue, limit its scope for now.\n    if ((IS_IOS || IS_ANDROID) && SUPPORTED_EVENTS.beforeinput) return true\n\n    debug('onBeforeInput', { event })\n  }\n\n  /**\n   * On blur.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onBlur(event, change, editor) {\n    if (isCopying) return true\n    if (editor.props.readOnly) return true\n\n    const { value } = change\n    const { relatedTarget, target } = event\n    const window = getWindow(target)\n\n    // COMPAT: If the current `activeElement` is still the previous one, this is\n    // due to the window being blurred when the tab itself becomes unfocused, so\n    // we want to abort early to allow to editor to stay focused when the tab\n    // becomes focused again.\n    if (activeElement == window.document.activeElement) return true\n\n    // COMPAT: The `relatedTarget` can be null when the new focus target is not\n    // a \"focusable\" element (eg. a `<div>` without `tabindex` set).\n    if (relatedTarget) {\n      const el = findDOMNode(editor)\n\n      // COMPAT: The event should be ignored if the focus is returning to the\n      // editor from an embedded editable element (eg. an <input> element inside\n      // a void node).\n      if (relatedTarget == el) return true\n\n      // COMPAT: The event should be ignored if the focus is moving from the\n      // editor to inside a void node's spacer element.\n      if (relatedTarget.hasAttribute('data-slate-spacer')) return true\n\n      // COMPAT: The event should be ignored if the focus is moving to a non-\n      // editable section of an element that isn't a void node (eg. a list item\n      // of the check list example).\n      const node = findNode(relatedTarget, value)\n      if (el.contains(relatedTarget) && node && !node.isVoid) return true\n    }\n\n    debug('onBlur', { event })\n  }\n\n  /**\n   * On change.\n   *\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onChange(change, editor) {\n    const { value } = change\n\n    // If the value's schema isn't the editor's schema, update it. This can\n    // happen on the initialization of the editor, or if the schema changes.\n    // This change isn't save into history since only schema is updated.\n    if (value.schema != editor.schema) {\n      change.setValue({ schema: editor.schema }, { save: false }).normalize()\n    }\n\n    debug('onChange')\n  }\n\n  /**\n   * On composition end.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onCompositionEnd(event, change, editor) {\n    const n = compositionCount\n\n    // The `count` check here ensures that if another composition starts\n    // before the timeout has closed out this one, we will abort unsetting the\n    // `isComposing` flag, since a composition is still in affect.\n    window.requestAnimationFrame(() => {\n      if (compositionCount > n) return\n      isComposing = false\n\n      // HACK: we need to re-render the editor here so that it will update its\n      // placeholder in case one is currently rendered. This should be handled\n      // differently ideally, in a less invasive way?\n      // (apply force re-render if isComposing changes)\n      if (editor.state.isComposing) {\n        editor.setState({ isComposing: false })\n      }\n    })\n\n    debug('onCompositionEnd', { event })\n  }\n\n  /**\n   * On composition start.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onCompositionStart(event, change, editor) {\n    isComposing = true\n    compositionCount++\n\n    // HACK: we need to re-render the editor here so that it will update its\n    // placeholder in case one is currently rendered. This should be handled\n    // differently ideally, in a less invasive way?\n    // (apply force re-render if isComposing changes)\n    if (!editor.state.isComposing) {\n      editor.setState({ isComposing: true })\n    }\n\n    debug('onCompositionStart', { event })\n  }\n\n  /**\n   * On copy.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onCopy(event, change, editor) {\n    const window = getWindow(event.target)\n\n    const hasSelection = ensureSlateSelection(event, change, editor)\n\n    if (!hasSelection) {\n      // We don't have a selection, so let the browser\n      // handle the copy, and do not call other plugins\n      return true\n    }\n\n    isCopying = true\n    window.requestAnimationFrame(() => (isCopying = false))\n\n    debug('onCopy', { event })\n  }\n\n  /**\n   * On cut.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onCut(event, change, editor) {\n    const window = getWindow(event.target)\n    isCopying = true\n    window.requestAnimationFrame(() => (isCopying = false))\n\n    debug('onCut', { event })\n  }\n\n  /**\n   * On drag end.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragEnd(event, change, editor) {\n    isDragging = false\n\n    debug('onDragEnd', { event })\n  }\n\n  /**\n   * On drag enter.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragEnter(event, change, editor) {\n    debug('onDragEnter', { event })\n  }\n\n  /**\n   * On drag exit.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragExit(event, change, editor) {\n    debug('onDragExit', { event })\n  }\n\n  /**\n   * On drag leave.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragLeave(event, change, editor) {\n    debug('onDragLeave', { event })\n  }\n\n  /**\n   * On drag over.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragOver(event, change, editor) {\n    // If the target is inside a void node, and only in this case,\n    // call `preventDefault` to signal that drops are allowed.\n    // When the target is editable, dropping is already allowed by\n    // default, and calling `preventDefault` hides the cursor.\n    const node = findNode(event.target, editor.value)\n    if (node.isVoid) event.preventDefault()\n\n    // COMPAT: IE won't call onDrop on contentEditables unless the\n    // default dragOver is prevented:\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/913982/\n    // (2018/07/11)\n    if (IS_IE) event.preventDefault()\n\n    // If a drag is already in progress, don't do this again.\n    if (!isDragging) {\n      isDragging = true\n\n      // COMPAT: IE will raise an `unspecified error` if dropEffect is\n      // set. (2018/07/11)\n      if (!IS_IE) {\n        event.nativeEvent.dataTransfer.dropEffect = 'move'\n      }\n    }\n\n    debug('onDragOver', { event })\n  }\n\n  /**\n   * On drag start.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDragStart(event, change, editor) {\n    isDragging = true\n\n    debug('onDragStart', { event })\n  }\n\n  /**\n   * On drop.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onDrop(event, change, editor) {\n    // Nothing happens in read-only mode.\n    if (editor.props.readOnly) return true\n\n    // Prevent default so the DOM's value isn't corrupted.\n    event.preventDefault()\n\n    debug('onDrop', { event })\n  }\n\n  /**\n   * On focus.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onFocus(event, change, editor) {\n    if (isCopying) return true\n    if (editor.props.readOnly) return true\n\n    const el = findDOMNode(editor)\n\n    // Save the new `activeElement`.\n    const window = getWindow(event.target)\n    activeElement = window.document.activeElement\n\n    // COMPAT: If the editor has nested editable elements, the focus can go to\n    // those elements. In Firefox, this must be prevented because it results in\n    // issues with keyboard navigation. (2017/03/30)\n    if (IS_FIREFOX && event.target != el) {\n      el.focus()\n      return true\n    }\n\n    debug('onFocus', { event })\n  }\n\n  /**\n   * On input.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onInput(event, change, editor) {\n    if (isComposing) return true\n    if (change.value.isBlurred) return true\n\n    debug('onInput', { event })\n  }\n\n  /**\n   * On key down.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onKeyDown(event, change, editor) {\n    if (editor.props.readOnly) return true\n\n    // When composing, we need to prevent all hotkeys from executing while\n    // typing. However, certain characters also move the selection before\n    // we're able to handle it, so prevent their default behavior.\n    if (isComposing) {\n      if (Hotkeys.isComposing(event)) event.preventDefault()\n      return true\n    }\n\n    // Certain hotkeys have native behavior in contenteditable elements which\n    // will cause our value to be out of sync, so prevent them.\n    if (Hotkeys.isContentEditable(event) && !IS_IOS) {\n      event.preventDefault()\n    }\n\n    debug('onKeyDown', { event })\n  }\n\n  /**\n   * On paste.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onPaste(event, change, editor) {\n    if (editor.props.readOnly) return true\n\n    // Prevent defaults so the DOM state isn't corrupted.\n    event.preventDefault()\n\n    debug('onPaste', { event })\n  }\n\n  /**\n   * On select.\n   *\n   * @param {Event} event\n   * @param {Change} change\n   * @param {Editor} editor\n   */\n\n  function onSelect(event, change, editor) {\n    if (isCopying) return true\n    if (isComposing) return true\n    if (editor.props.readOnly) return true\n\n    // Save the new `activeElement`.\n    const window = getWindow(event.target)\n    activeElement = window.document.activeElement\n\n    debug('onSelect', { event })\n  }\n\n  /**\n   * Return the plugin.\n   *\n   * @type {Object}\n   */\n\n  return {\n    onBeforeInput,\n    onBlur,\n    onChange,\n    onCompositionEnd,\n    onCompositionStart,\n    onCopy,\n    onCut,\n    onDragEnd,\n    onDragEnter,\n    onDragExit,\n    onDragLeave,\n    onDragOver,\n    onDragStart,\n    onDrop,\n    onFocus,\n    onInput,\n    onKeyDown,\n    onPaste,\n    onSelect,\n  }\n}\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexport default BeforePlugin\n","/**\n * Noop.\n *\n * @return {Void}\n */\n\nfunction noop() {}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default noop\n","import Debug from 'debug'\nimport Portal from 'react-portal'\nimport React from 'react'\nimport SlateTypes from '@gitbook/slate-prop-types'\nimport Types from 'prop-types'\nimport logger from '@gitbook/slate-dev-logger'\nimport { Schema, Stack } from '@gitbook/slate'\n\nimport EVENT_HANDLERS from '../constants/event-handlers'\nimport PLUGINS_PROPS from '../constants/plugin-props'\nimport AfterPlugin from '../plugins/after'\nimport BeforePlugin from '../plugins/before'\nimport noop from '../utils/noop'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:editor')\n\n/**\n * Editor.\n *\n * @type {Component}\n */\n\nclass Editor extends React.Component {\n  /**\n   * Property types.\n   *\n   * @type {Object}\n   */\n\n  static propTypes = {\n    autoCorrect: Types.bool,\n    autoFocus: Types.bool,\n    className: Types.string,\n    onChange: Types.func,\n    placeholder: Types.any,\n    plugins: Types.array,\n    readOnly: Types.bool,\n    role: Types.string,\n    schema: Types.object,\n    spellCheck: Types.bool,\n    style: Types.object,\n    tabIndex: Types.number,\n    value: SlateTypes.value.isRequired,\n  }\n\n  /**\n   * Default properties.\n   *\n   * @type {Object}\n   */\n\n  static defaultProps = {\n    autoFocus: false,\n    autoCorrect: true,\n    onChange: noop,\n    plugins: [],\n    readOnly: false,\n    schema: {},\n    spellCheck: true,\n  }\n\n  /**\n   * Constructor.\n   *\n   * @param {Object} props\n   */\n\n  constructor(props) {\n    super(props)\n    this.state = {}\n    this.tmp = {}\n    this.tmp.updates = 0\n    this.tmp.resolves = 0\n\n    // Resolve the plugins and create a stack and schema from them.\n    const plugins = this.resolvePlugins(props.plugins, props.schema)\n    const stack = Stack.create({ plugins })\n    const schema = Schema.create({ plugins })\n    this.state.schema = schema\n    this.state.stack = stack\n\n    // Run `onChange` on the passed-in value because we need to ensure that it\n    // is normalized, and queue the resulting change.\n    const change = props.value.change()\n    stack.run('onChange', change, this)\n    this.queueChange(change)\n    this.state.value = change.value\n\n    // Create a bound event handler for each event.\n    EVENT_HANDLERS.forEach(handler => {\n      this[handler] = (...args) => {\n        this.onEvent(handler, ...args)\n      }\n    })\n  }\n\n  /**\n   * When the `props` are updated, create a new `Stack` if necessary and run\n   * `onChange` to ensure the value is normalized.\n   *\n   * @param {Object} props\n   */\n\n  componentWillReceiveProps = props => {\n    let { schema, stack } = this\n\n    // Increment the updates counter as a baseline.\n    this.tmp.updates++\n\n    // If the plugins or the schema have changed, we need to re-resolve the\n    // plugins, since it will result in a new stack and new validations.\n    if (\n      props.plugins != this.props.plugins ||\n      props.schema != this.props.schema\n    ) {\n      const plugins = this.resolvePlugins(props.plugins, props.schema)\n      stack = Stack.create({ plugins })\n      schema = Schema.create({ plugins })\n      this.setState({ schema, stack })\n\n      // Increment the resolves counter.\n      this.tmp.resolves++\n\n      // If we've resolved a few times already, and it's exactly in line with\n      // the updates, then warn the user that they may be doing something wrong.\n      if (this.tmp.resolves > 5 && this.tmp.resolves == this.tmp.updates) {\n        logger.warn(\n          'A Slate <Editor> is re-resolving `props.plugins` or `props.schema` on each update, which leads to poor performance. This is often due to passing in a new `schema` or `plugins` prop with each render by declaring them inline in your render function. Do not do this!'\n        )\n      }\n    }\n\n    // Run `onChange` on the passed-in value because we need to ensure that it\n    // is normalized, and queue the resulting change.\n    const change = props.value.change()\n    stack.run('onChange', change, this)\n    this.queueChange(change)\n    this.setState({ value: change.value })\n  }\n\n  /**\n   * When the component first mounts, flush any temporary changes,\n   * and then, focus the editor if `autoFocus` is set.\n   */\n\n  componentDidMount = () => {\n    this.flushChange()\n\n    if (this.props.autoFocus) {\n      this.focus()\n    }\n  }\n\n  /**\n   * When the component updates, flush any temporary change.\n   */\n\n  componentDidUpdate = () => {\n    this.flushChange()\n  }\n\n  /**\n   * Queue a `change` object, to be able to flush it later. This is required for\n   * when a change needs to be applied to the value, but because of the React\n   * lifecycle we can't apply that change immediately. So we cache it here and\n   * later can call `this.flushChange()` to flush it.\n   *\n   * @param {Change} change\n   */\n\n  queueChange = change => {\n    if (change.operations.size) {\n      debug('queueChange', { change })\n      this.tmp.change = change\n    }\n  }\n\n  /**\n   * Flush a temporarily stored `change` object, for when a change needed to be\n   * made but couldn't because of React's lifecycle.\n   */\n\n  flushChange = () => {\n    const { change } = this.tmp\n\n    if (change) {\n      debug('flushChange', { change })\n      delete this.tmp.change\n      this.props.onChange(change)\n    }\n  }\n\n  /**\n   * Perform a change on the editor, passing `...args` to `change.call`.\n   *\n   * @param {Mixed} ...args\n   */\n\n  change = (...args) => {\n    const change = this.value.change().call(...args)\n    this.onChange(change)\n  }\n\n  /**\n   * Programmatically blur the editor.\n   */\n\n  blur = () => {\n    this.change(c => c.blur())\n  }\n\n  /**\n   * Programmatically focus the editor.\n   */\n\n  focus = () => {\n    this.change(c => c.focus())\n  }\n\n  /**\n   * Getters for exposing public properties of the editor's state.\n   */\n\n  get schema() {\n    return this.state.schema\n  }\n\n  get stack() {\n    return this.state.stack\n  }\n\n  get value() {\n    return this.state.value\n  }\n\n  /**\n   * On event.\n   *\n   * @param {String} handler\n   * @param {Event} event\n   */\n\n  onEvent = (handler, event) => {\n    this.change(change => {\n      this.stack.run(handler, event, change, this)\n    })\n  }\n\n  /**\n   * On change.\n   *\n   * @param {Change} change\n   */\n\n  onChange = change => {\n    debug('onChange', { change })\n\n    if (this.props.readOnly) {\n      return\n    }\n\n    this.stack.run('onChange', change, this)\n    const { value } = change\n    const { onChange } = this.props\n    if (value == this.value) return\n    onChange(change)\n  }\n\n  /**\n   * Render the editor.\n   *\n   * @return {Element}\n   */\n\n  render() {\n    debug('render', this)\n\n    const children = this.stack\n      .map('renderPortal', this.value, this)\n      .map((child, i) => (\n        <Portal key={i} isOpened>\n          {child}\n        </Portal>\n      ))\n\n    const props = { ...this.props, children }\n    const tree = this.stack.render('renderEditor', props, this)\n    return tree\n  }\n\n  /**\n   * Resolve an array of plugins from `plugins` and `schema` props.\n   *\n   * In addition to the plugins provided in props, this will initialize three\n   * other plugins:\n   *\n   * - The top-level editor plugin, which allows for top-level handlers, etc.\n   * - The two \"core\" plugins, one before all the other and one after.\n   *\n   * @param {Array|Void} plugins\n   * @param {Schema|Object|Void} schema\n   * @return {Array}\n   */\n\n  resolvePlugins = (plugins, schema) => {\n    const beforePlugin = BeforePlugin()\n    const afterPlugin = AfterPlugin()\n    const editorPlugin = {\n      schema: schema || {},\n    }\n\n    for (const prop of PLUGINS_PROPS) {\n      // Skip `onChange` because the editor's `onChange` is special.\n      if (prop == 'onChange') continue\n\n      // Skip `schema` because it can't be proxied easily, so it must be\n      // passed in as an argument to this function instead.\n      if (prop == 'schema') continue\n\n      // Define a function that will just proxies into `props`.\n      editorPlugin[prop] = (...args) => {\n        return this.props[prop] && this.props[prop](...args)\n      }\n    }\n\n    return [beforePlugin, editorPlugin, ...(plugins || []), afterPlugin]\n  }\n}\n\n/**\n * Mix in the property types for the event handlers.\n */\n\nfor (const prop of EVENT_HANDLERS) {\n  Editor.propTypes[prop] = Types.func\n}\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Editor\n","import Editor from './components/editor'\nimport cloneFragment from './utils/clone-fragment'\nimport findDOMNode from './utils/find-dom-node'\nimport findDOMRange from './utils/find-dom-range'\nimport findNode from './utils/find-node'\nimport findRange from './utils/find-range'\nimport getEventRange from './utils/get-event-range'\nimport getEventTransfer from './utils/get-event-transfer'\nimport setEventTransfer from './utils/set-event-transfer'\nimport AfterPlugin from './plugins/after'\nimport BeforePlugin from './plugins/before'\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexport {\n  Editor,\n  cloneFragment,\n  findDOMNode,\n  findDOMRange,\n  findNode,\n  findRange,\n  getEventRange,\n  getEventTransfer,\n  setEventTransfer,\n  AfterPlugin,\n  BeforePlugin,\n}\n\nexport default {\n  Editor,\n  cloneFragment,\n  findDOMNode,\n  findDOMRange,\n  findNode,\n  findRange,\n  getEventRange,\n  getEventTransfer,\n  setEventTransfer,\n  AfterPlugin,\n  BeforePlugin,\n}\n"],"names":["EVENT_HANDLERS","PLUGIN_PROPS","PARSER","parse","string","matches","exec","Error","original","key","index","parseInt","stringify","object","debug","Debug","Leaf","props","marks","text","parent","node","offsetKey","OffsetKey","renderMarks","offset","editor","stack","leaf","renderText","attributes","reduce","children","mark","element","find","block","leaves","isVoid","nodes","size","lastText","getLastText","lastChar","charAt","length","isLastText","isLastLeaf","React","Component","propTypes","SlateTypes","isRequired","Types","number","message","args","Text","decorations","style","value","document","decs","filter","startKey","d","endKey","startsBefore","areDescendantsSorted","endsAfter","getLeaves","map","i","child","renderLeaf","ImmutableTypes","list","defaultProps","shouldComponentUpdate","n","nextProps","p","pLast","last","nLast","equals","Void","readOnly","Tag","spacer","content","any","bool","type","id","getFirstText","getChildrenDecorations","activeDecorations","Set","asMutable","childrenDecorations","forEach","item","isRangeStart","add","decoration","isRangeEnd","remove","push","toList","orderChildDecorations","isEmpty","toArray","keyOrders","globalOrder","forEachDescendant","childNodes","endPoints","startKeyOrder","containingChildOrder","undefined","getContainingChildOrder","endKeyOrder","sort","byOrder","a","b","order","nextChildIndex","findIndex","containingChild","Node","isSelected","isFocused","selection","indexes","getSelectionIndexes","concat","getDecorations","isChildSelected","start","end","renderNode","first","direction","getTextDirection","dir","placeholder","cloneElement","shouldUpdate","warn","findDOMNode","win","window","isNode","el","querySelector","findDOMPoint","iterator","createNodeIterator","NodeFilter","SHOW_TEXT","FILTER_ACCEPT","nextNode","textContent","o","findDOMRange","range","anchorKey","anchorOffset","focusKey","focusOffset","isBackward","isCollapsed","anchor","focus","r","createRange","setStart","setEnd","ZERO_WIDTH_ATTRIBUTE","ZERO_WIDTH_SELECTOR","OFFSET_KEY_ATTRIBUTE","RANGE_SELECTOR","TEXT_SELECTOR","VOID_SELECTOR","findPoint","nativeNode","nativeOffset","normalizeNodeAndOffset","nearestNode","nearestOffset","getWindow","parentNode","rangeNode","closest","textNode","toString","voidNode","hasAttribute","getAttribute","hasDescendant","nodeType","isLast","getEditableChild","triedForward","triedBackward","findRange","native","anchorNode","startContainer","Range","StaticRange","startOffset","endContainer","endOffset","focusNode","IS_IE","IS_EDGE","domAnchor","domFocus","create","OVERFLOWS","IS_IOS_11","IS_IOS","navigator","userAgent","match","findScrollContainer","scroller","getComputedStyle","overflowY","includes","body","scrollToSelection","isWindow","documentElement","backward","getRangeAt","cloneRange","collapse","cursorRect","getBoundingClientRect","IS_SAFARI","collapsed","top","height","getClientRects","width","yOffset","xOffset","scrollerTop","scrollerLeft","scrollerBordersY","scrollerBordersX","scrollerPaddingTop","scrollerPaddingBottom","scrollerPaddingLeft","scrollerPaddingRight","innerWidth","innerHeight","pageYOffset","pageXOffset","offsetWidth","offsetHeight","scrollTop","scrollLeft","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","scrollerRect","left","cursorTop","cursorLeft","x","y","scrollTo","removeAllRanges","doc","createTextRange","select","FIREFOX_NODE_TYPE_ACCESS_ERROR","Content","componentDidMount","addEventListener","onNativeSelectionChange","IS_ANDROID","SUPPORTED_EVENTS","beforeinput","onNativeBeforeInput","updateSelection","componentDidUpdate","getSelection","rangeCount","isBlurred","isInEditor","blur","isUnset","current","error","tmp","isUpdatingSelection","setBaseAndExtent","addRange","IS_FIREFOX","ref","target","mustBeEditable","err","test","isContentEditable","event","getTargetRanges","targetRange","inputType","preventDefault","change","deleteAtRange","isInVoid","collapseToStartOfNextText","splitBlockAtRange","data","dataTransfer","getData","insertTextAtRange","throttle","activeElement","onSelect","handler","onEvent","removeEventListener","targetEditorNode","className","tabIndex","role","tagName","spellCheck","Container","handlers","obj","WebkitUserModify","onBlur","onFocus","onCompositionEnd","onCompositionStart","onCopy","onCut","onDragEnd","onDragOver","onDragStart","onDrop","onInput","onKeyDown","onKeyUp","onPaste","autoCorrect","func","TRANSFER_TYPES","FRAGMENT","HTML","TEXT","cloneFragment","fragment","startVoid","getClosestVoid","endVoid","encoded","Base64","serializeNode","contents","cloneContents","attach","trim","setEndAfter","firstChild","slice","call","querySelectorAll","isNewline","zw","span","createElement","whiteSpace","appendChild","setAttribute","valFromSelection","Value","plainText","Plain","serialize","div","clipboardData","setData","innerHTML","position","selectAllChildren","requestAnimationFrame","removeChild","findNode","getNode","getEventRange","nativeEvent","rect","isPrevious","previousText","getPreviousText","moveToEndOf","nextText","getNextText","moveToStartOf","caretRangeFromPoint","caretPositionFromPoint","offsetNode","moveToPoint","NODE","RICH","FRAGMENT_MATCHER","getEventTransfer","transfer","getType","html","rich","files","indexOf","full","embeddedTypes","getEmbeddedTypes","deserializeNode","items","Array","from","kind","getAsFile","exists","getTransferType","prefix","substring","JSON","types","setEventTransfer","mime","toUpperCase","e","AfterPlugin","isDraggingInternally","onBeforeInput","insertText","onClick","hasVoidParent","collapseToEndOf","endBlock","endInline","isVoidBlock","isVoidInline","c","removeNodeByKey","delete","preserveKeys","move","collapseToStartOf","split","line","splitBlock","insertFragment","Block","isBlock","insertBlock","regenerateKey","Inline","isInline","insertInline","dispatchEvent","MouseEvent","point","getDescendant","getClosestBlock","lastLeaf","delta","corrected","collapseToEnd","entire","moveAnchorTo","moveFocusTo","Hotkeys","isSplitBlock","isDeleteCharBackward","deleteCharBackward","isDeleteCharForward","deleteCharForward","isDeleteLineBackward","deleteLineBackward","isDeleteLineForward","deleteLineForward","isDeleteWordBackward","deleteWordBackward","isDeleteWordForward","deleteWordForward","isRedo","redo","isUndo","undo","isCollapseLineBackward","collapseLineBackward","isCollapseLineForward","collapseLineForward","isExtendLineBackward","extendLineBackward","isExtendLineForward","extendLineForward","isCollapseCharBackward","startText","isPreviousInVoid","collapseCharBackward","isCollapseCharForward","isNextInVoid","collapseCharForward","isExtendCharBackward","extendCharBackward","isExtendCharForward","extendCharForward","startBlock","defaultBlock","defaultMarks","getInsertMarksAtRange","frag","deserialize","anchorText","focusText","anchorInline","getClosestInline","focusInline","focusBlock","anchorBlock","set","next","normalize","renderEditor","renderPlaceholder","state","isComposing","isTextList","getBlocks","ensureSlateSelection","BeforePlugin","compositionCount","isCopying","isDragging","relatedTarget","contains","onChange","schema","setValue","save","setState","hasSelection","onDragEnter","onDragExit","onDragLeave","dropEffect","noop","Editor","updates","resolves","plugins","resolvePlugins","Stack","Schema","run","queueChange","tree","render","array","componentWillReceiveProps","flushChange","autoFocus","operations","beforePlugin","afterPlugin","editorPlugin","prop","PLUGINS_PROPS"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAMA,IAAMA,iBAAiB,CACrB,eADqB,EAErB,QAFqB,EAGrB,SAHqB,EAIrB,eAJqB,EAKrB,kBALqB,EAMrB,oBANqB,EAOrB,QAPqB,EAQrB,OARqB,EASrB,WATqB,EAUrB,aAVqB,EAWrB,YAXqB,EAYrB,aAZqB,EAarB,YAbqB,EAcrB,aAdqB,EAerB,QAfqB,EAgBrB,SAhBqB,EAiBrB,SAjBqB,EAkBrB,WAlBqB,EAmBrB,SAnBqB,EAoBrB,SApBqB,EAqBrB,UArBqB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;;;;;;AAMA,IAAMC,2CACDD,cADC,IAEJ,cAFI,EAGJ,UAHI,EAIJ,cAJI,EAKJ,YALI,EAMJ,YANI,EAOJ,mBAPI,EAQJ,cARI,EASJ,QATI,EAUJ,cAVI,EAAN;;ACRA;;;;;;AAMA,IAAME,SAAS,uBAAf;;;;;;;;;AASA,SAASC,KAAT,CAAeC,MAAf,EAAuB;MACfC,UAAUH,OAAOI,IAAP,CAAYF,MAAZ,CAAhB;;MAEI,CAACC,OAAL,EAAc;UACN,IAAIE,KAAJ,kCAAwCH,MAAxC,SAAN;;;+BAG6BC,OAPV;MAOdG,QAPc;MAOJC,GAPI;MAOCC,KAPD;;;SAQd;YAAA;WAEEC,SAASD,KAAT,EAAgB,EAAhB;GAFT;;;;;;;;;;;;AAeF,SAASE,SAAT,CAAmBC,MAAnB,EAA2B;SACfA,OAAOJ,GAAjB,SAAwBI,OAAOH,KAA/B;;;;;;;;;AASF,gBAAe;cAAA;;CAAf;;ACzCA;;;;;;AAMA,IAAMI,QAAQC,MAAM,cAAN,CAAd;;;;;;;;IAQMC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0CAqCkBC,OAAO;;UAGzBA,MAAMP,KAAN,IAAe,KAAKO,KAAL,CAAWP,KAA1B,IACAO,MAAMC,KAAN,IAAe,KAAKD,KAAL,CAAWC,KAD1B,IAEAD,MAAME,IAAN,IAAc,KAAKF,KAAL,CAAWE,IAFzB,IAGAF,MAAMG,MAAN,IAAgB,KAAKH,KAAL,CAAWG,MAJ7B,EAKE;eACO,IAAP;;;;aAIK,KAAP;;;;;;;;;;;6BASO;WACFN,KAAL,CAAW,QAAX,EAAqB,IAArB;;mBAEwB,KAAKG,KAHtB;UAGCI,IAHD,UAGCA,IAHD;UAGOX,KAHP,UAGOA,KAHP;;UAIDY,YAAYC,UAAUX,SAAV,CAAoB;aAC/BS,KAAKZ,GAD0B;;OAApB,CAAlB;;aAKO;;UAAM,mBAAiBa,SAAvB;aAAwCE,WAAL;OAA1C;;;;;;;;;;;kCASY;oBACkC,KAAKP,KADvC;UACJC,KADI,WACJA,KADI;UACGG,IADH,WACGA,IADH;UACSI,MADT,WACSA,MADT;UACiBN,IADjB,WACiBA,IADjB;UACuBO,MADvB,WACuBA,MADvB;UAEJC,KAFI,GAEMD,MAFN,CAEJC,KAFI;;UAGNC,OAAO,KAAKC,UAAL,EAAb;UACMC,aAAa;2BACE;OADrB;;aAIOZ,MAAMa,MAAN,CAAa,UAACC,QAAD,EAAWC,IAAX,EAAoB;YAChChB,QAAQ;wBAAA;oBAAA;sBAAA;oBAAA;wBAAA;oBAAA;4BAAA;;SAAd;YAUMiB,UAAUP,MAAMQ,IAAN,CAAW,YAAX,EAAyBlB,KAAzB,CAAhB;eACOiB,WAAWF,QAAlB;OAZK,EAaJJ,IAbI,CAAP;;;;;;;;;;;iCAsBW;oBAC0C,KAAKX,KAD/C;UACHmB,KADG,WACHA,KADG;UACIf,IADJ,WACIA,IADJ;UACUD,MADV,WACUA,MADV;UACkBD,IADlB,WACkBA,IADlB;UACwBT,KADxB,WACwBA,KADxB;UAC+B2B,MAD/B,WAC+BA,MAD/B;;;;;UAKPjB,OAAOkB,MAAX,EAAmB;eACV;;YAAM,yBAAsB,GAA5B;;SAAP;;;;;;UAOAnB,SAAS,EAAT,IACAC,OAAOP,MAAP,KAAkB,OADlB,IAEAO,OAAOD,IAAP,KAAgB,EAFhB,IAGAC,OAAOmB,KAAP,CAAaC,IAAb,KAAsB,CAJxB,EAKE;eACO;;YAAM,yBAAsB,GAA5B;;SAAP;;;;;;UAMErB,SAAS,EAAb,EAAiB;eACR;;YAAM,yBAAsB,GAA5B;;SAAP;;;;;UAKIsB,WAAWL,MAAMM,WAAN,EAAjB;UACMC,WAAWxB,KAAKyB,MAAL,CAAYzB,KAAK0B,MAAL,GAAc,CAA1B,CAAjB;UACMC,aAAazB,SAASoB,QAA5B;UACMM,aAAarC,UAAU2B,OAAOG,IAAP,GAAc,CAA3C;UACIM,cAAcC,UAAd,IAA4BJ,aAAa,IAA7C,EAAmD,OAAUxB,IAAV;;;aAG5CA,IAAP;;;;EA/Ie6B,MAAMC;;;;;;;;AAAnBjC,KAOGkC,YAAY;SACVC,WAAWf,KAAX,CAAiBgB,UADP;UAETC,MAAMxC,MAAN,CAAauC,UAFJ;SAGVC,MAAMC,MAAN,CAAaF,UAHH;UAITD,WAAWd,MAAX,CAAkBe,UAJT;SAKVD,WAAWjC,KAAX,CAAiBkC,UALP;QAMXD,WAAW9B,IAAX,CAAgB+B,UANL;UAOTC,MAAMC,MAAN,CAAaF,UAPJ;UAQTD,WAAW9B,IAAX,CAAgB+B,UARP;QASXC,MAAMjD,MAAN,CAAagD,UATF;;;;;OAmBnBtC,QAAQ,UAACyC,OAAD,EAAsB;uCAATC,IAAS;UAAA;;;4BACtBD,OAAN,EAAkB,OAAKtC,KAAL,CAAWI,IAAX,CAAgBZ,GAAlC,SAAyC,OAAKQ,KAAL,CAAWP,KAApD,SAAgE8C,IAAhE;;;;ACxCJ;;;;;;AAMA,IAAM1C,UAAQC,MAAM,YAAN,CAAd;;;;;;;;IAQM0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BA+EK;;;WACF3C,KAAL,CAAW,QAAX,EAAqB,IAArB;;mBAE6C,KAAKG,KAH3C;UAGCyC,WAHD,UAGCA,WAHD;UAGchC,MAHd,UAGcA,MAHd;UAGsBL,IAHtB,UAGsBA,IAHtB;UAG4BsC,KAH5B,UAG4BA,KAH5B;UAICC,KAJD,GAIWlC,MAJX,CAICkC,KAJD;UAKCC,QALD,GAKcD,KALd,CAKCC,QALD;UAMCpD,GAND,GAMSY,IANT,CAMCZ,GAND;;;UAQDqD,OAAOJ,YAAYK,MAAZ,CAAmB,aAAK;YAC3BC,QAD2B,GACNC,CADM,CAC3BD,QAD2B;YACjBE,MADiB,GACND,CADM,CACjBC,MADiB;;YAE/BF,YAAYvD,GAAZ,IAAmByD,UAAUzD,GAAjC,EAAsC,OAAO,IAAP;YAClCuD,aAAaE,MAAjB,EAAyB,OAAO,KAAP;YACnBC,eAAeN,SAASO,oBAAT,CAA8BJ,QAA9B,EAAwCvD,GAAxC,CAArB;YACI,CAAC0D,YAAL,EAAmB,OAAO,KAAP;YACbE,YAAYR,SAASO,oBAAT,CAA8B3D,GAA9B,EAAmCyD,MAAnC,CAAlB;eACOG,SAAP;OAPW,CAAb;;;UAWMhC,SAASyB,KAAKtB,IAAL,KAAc,CAAd,GAAkBnB,KAAKiD,SAAL,EAAlB,GAAqCjD,KAAKiD,SAAL,CAAeR,IAAf,CAApD;UACIrC,SAAS,CAAb;;UAEMO,WAAWK,OAAOkC,GAAP,CAAW,UAAC3C,IAAD,EAAO4C,CAAP,EAAa;YACjCC,QAAQ,OAAKC,UAAL,CAAgBrC,MAAhB,EAAwBT,IAAxB,EAA8B4C,CAA9B,EAAiC/C,MAAjC,CAAd;kBACUG,KAAKT,IAAL,CAAU0B,MAApB;eACO4B,KAAP;OAHe,CAAjB;;aAOE;;UAAM,YAAUhE,GAAhB,EAAqB,OAAOkD,KAA5B;;OADF;;;;;;;;;;;;;;;EA3GeX,MAAMC;;;;;;;;AAAnBQ,KAOGP,YAAY;SACVC,WAAWf,KADD;eAEJuC,eAAeC,IAAf,CAAoBxB,UAFhB;UAGTC,MAAMxC,MAAN,CAAauC,UAHJ;QAIXD,WAAW9B,IAAX,CAAgB+B,UAJL;UAKTD,WAAW9B,IAAX,CAAgB+B,UALP;SAMVC,MAAMxC,MANI;AAPf4C,KAsBGoB,eAAe;SACb,IADa;;;;;OAWtB/D,QAAQ,UAACyC,OAAD,EAAsB;uCAATC,IAAS;UAAA;;;QACpBnC,IADoB,GACX,OAAKJ,KADM,CACpBI,IADoB;QAEpBZ,GAFoB,GAEZY,IAFY,CAEpBZ,GAFoB;;8BAGtB8C,OAAN,EAAkB9C,GAAlB,qBAAmC+C,IAAnC;;;OAWFsB,wBAAwB,qBAAa;QAC3B7D,KAD2B,UAC3BA,KAD2B;;QAE7B8D,IAAIC,SAAV;QACMC,IAAIhE,KAAV;;;;;;QAMI8D,EAAE1D,IAAF,IAAU4D,EAAE5D,IAAhB,EAAsB,OAAO,IAAP;;;;QAIlB0D,EAAE3D,MAAF,CAASP,MAAT,IAAmB,OAAvB,EAAgC;UACxBqE,QAAQD,EAAE7D,MAAF,CAASmB,KAAT,CAAe4C,IAAf,EAAd;UACMC,QAAQL,EAAE3D,MAAF,CAASmB,KAAT,CAAe4C,IAAf,EAAd;UACIF,EAAE5D,IAAF,IAAU6D,KAAV,IAAmBH,EAAE1D,IAAF,IAAU+D,KAAjC,EAAwC,OAAO,IAAP;;;;QAItC,CAACL,EAAErB,WAAF,CAAc2B,MAAd,CAAqBJ,EAAEvB,WAAvB,CAAL,EAA0C,OAAO,IAAP;;;WAGnC,KAAP;;;OAsDFgB,aAAa,UAACrC,MAAD,EAAST,IAAT,EAAelB,KAAf,EAAsBe,MAAtB,EAAiC;kBACJ,OAAKR,KADD;QACpCmB,KADoC,WACpCA,KADoC;QAC7Bf,IAD6B,WAC7BA,IAD6B;QACvBD,MADuB,WACvBA,MADuB;QACfM,MADe,WACfA,MADe;QAEpCP,IAFoC,GAEpBS,IAFoB,CAEpCT,IAFoC;QAE9BD,KAF8B,GAEpBU,IAFoB,CAE9BV,KAF8B;;;WAK1C,oBAAC,IAAD;WACUG,KAAKZ,GAAb,SAAoBC,KADtB;aAES0B,KAFT;cAGUV,MAHV;aAIShB,KAJT;aAKSQ,KALT;YAMQG,IANR;cAOUI,MAPV;cAQUL,MARV;cASUiB,MATV;YAUQlB;MAXV;;;;AC/IJ;;;;;;AAMA,IAAML,UAAQC,MAAM,YAAN,CAAd;;;;;;;;IAQMuE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAoCK;UACCrE,KADD,GACW,IADX,CACCA,KADD;UAECe,QAFD,GAE8Bf,KAF9B,CAECe,QAFD;UAEWX,IAFX,GAE8BJ,KAF9B,CAEWI,IAFX;UAEiBkE,QAFjB,GAE8BtE,KAF9B,CAEiBsE,QAFjB;;UAGDC,MAAMnE,KAAKR,MAAL,IAAe,OAAf,GAAyB,KAAzB,GAAiC,MAA7C;UACM8C,QAAQ;gBACJ,GADI;eAEL,aAFK;iBAGH,MAHG;kBAIF;OAJZ;;UAOM8B,SACJ;WAAA;UAAK,yBAAL,EAAuB,OAAO9B,KAA9B;aACQ9B,UAAL;OAFL;;UAMM6D,UACJ;WAAA;UAAK,iBAAiBH,WAAW,IAAX,GAAkB,KAAxC;;OADF;;WAIKzE,KAAL,CAAW,QAAX,EAAqB,EAAEG,YAAF,EAArB;;aAGE;WAAA;;iCAAA;sBAEYI,KAAKZ,GAFjB;2BAGmB8E,YAAYlE,KAAKR,MAAL,IAAe,OAA3B,GAAqC,IAArC,GAA4C;;mBAEjD,IAAX,GAAkB4E,MALrB;;OADF;;;;;;;;;;;;;;;;EA3DezC,MAAMC;;;;;;;;AAAnBqC,KAOGpC,YAAY;SACVC,WAAWf,KADD;YAEPiB,MAAMsC,GAAN,CAAUvC,UAFH;UAGTC,MAAMxC,MAAN,CAAauC,UAHJ;QAIXD,WAAW9B,IAAX,CAAgB+B,UAJL;UAKTD,WAAW9B,IAAX,CAAgB+B,UALP;YAMPC,MAAMuC,IAAN,CAAWxC,UANJ;;;;;OAgBnBtC,QAAQ,UAACyC,OAAD,EAAsB;uCAATC,IAAS;UAAA;;;QACpBnC,IADoB,GACX,OAAKJ,KADM,CACpBI,IADoB;QAEpBZ,GAFoB,GAENY,IAFM,CAEpBZ,GAFoB;QAEfoF,IAFe,GAENxE,IAFM,CAEfwE,IAFe;;QAGtBC,KAAQrF,GAAR,UAAgBoF,IAAhB,MAAN;8BACMtC,OAAN,OAAkBuC,EAAlB,SAA2BtC,IAA3B;;;OAuDF3B,aAAa,YAAM;iBACsC,OAAKZ,KAD3C;QACTmB,KADS,UACTA,KADS;QACFsB,WADE,UACFA,WADE;QACWrC,IADX,UACWA,IADX;QACiBkE,QADjB,UACiBA,QADjB;QAC2B7D,MAD3B,UAC2BA,MAD3B;;QAEX+C,QAAQpD,KAAK0E,YAAL,EAAd;WAEE,oBAAC,IAAD;aACS1E,KAAKR,MAAL,IAAe,OAAf,GAAyBQ,IAAzB,GAAgCe,KADzC;mBAEesB,WAFf;cAGUhC,MAHV;WAIO+C,MAAMhE,GAJb;YAKQgE,KALR;cAMUpD,IANV;gBAOYkE;MARd;;;;ACxGJ;;;;;;;;AAQA,SAASS,sBAAT,CAAgC3E,IAAhC,EAAsCqC,WAAtC,EAAmD;MAC3CuC,oBAAoBC,gBAAMC,SAAN,EAA1B;MACMC,sBAAsB,EAA5B;;wBAEsB/E,IAAtB,EAA4BqC,WAA5B,EAAyC2C,OAAzC,CAAiD,gBAAQ;QACnDC,KAAKC,YAAT,EAAuB;;wBAEHC,GAAlB,CAAsBF,KAAKG,UAA3B;KAFF,MAGO,IAAIH,KAAKI,UAAT,EAAqB;;wBAERC,MAAlB,CAAyBL,KAAKG,UAA9B;KAFK,MAGA;;0BAEeG,IAApB,CAAyBX,kBAAkBY,MAAlB,EAAzB;;GATJ;;SAaOT,mBAAP;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BF,SAASU,qBAAT,CAA+BzF,IAA/B,EAAqCqC,WAArC,EAAkD;MAC5CA,YAAYqD,OAAZ,EAAJ,EAA2B;WAClB1F,KAAKkB,KAAL,CAAWyE,OAAX,GAAqBzC,GAArB,CAAyB,UAACE,KAAD,EAAQ/D,KAAR;aAAmB;oBAAA;;OAAnB;KAAzB,CAAP;;;;MAOIuG,+BAAe5F,KAAKZ,GAApB,EAA0B,CAA1B,CAAN;MACIyG,cAAc,CAAlB;;OAEKC,iBAAL,CAAuB,iBAAS;cACpB1C,MAAMhE,GAAhB,IAAuByG,WAAvB;kBACcA,cAAc,CAA5B;GAFF;;MAKME,aAAa/F,KAAKkB,KAAL,CAAWyE,OAAX,EAAnB;;MAEMK,YAAYD,WAAW7C,GAAX,CAAe,UAACE,KAAD,EAAQ/D,KAAR;WAAmB;kBAAA;kBAAA;aAG3CuG,UAAUxC,MAAMhE,GAAhB;KAHwB;GAAf,CAAlB;;cAMY4F,OAAZ,CAAoB,sBAAc;;;;QAI1BiB,gBAAgBL,UAAUR,WAAWzC,QAArB,CAAtB;QACMuD,uBACJD,kBAAkBE,SAAlB,GACI,CADJ,GAEIC,wBAAwBL,UAAxB,EAAoCH,SAApC,EAA+CK,aAA/C,CAHN;;cAKUV,IAAV,CAAe;oBACC,IADD;aAENW,uBAAuB,GAFjB;;KAAf;;;QAOMG,cAAc,CAACT,UAAUR,WAAWvC,MAArB,KAAgCgD,WAAjC,IAAgD,GAApE;;cAEUN,IAAV,CAAe;kBACD,IADC;aAENc,WAFM;;KAAf;GAnBF;;SA0BOL,UAAUM,IAAV,CAAeC,OAAf,CAAP;;;;;;;AAOF,SAASA,OAAT,CAAiBC,CAAjB,EAAoBC,CAApB,EAAuB;MACjBD,EAAEE,KAAF,GAAUD,EAAEC,KAAhB,EAAuB;WACd,CAAP;GADF,MAEO,IAAIF,EAAEE,KAAF,GAAUD,EAAEC,KAAhB,EAAuB;WACrB,CAAC,CAAR;GADK,MAEA;WACE,CAAP;;;;;;;;AAQJ,SAASN,uBAAT,CAAiCzF,QAAjC,EAA2CiF,SAA3C,EAAsDc,KAAtD,EAA6D;;MAErDC,iBAAiBhG,SAASiG,SAAT,CACrB;WAASF,QAAQd,UAAUxC,MAAMhE,GAAhB,CAAjB;GADqB,CAAvB;;MAIIuH,kBAAkB,CAAtB,EAAyB;WAChB,CAAP;;;MAGIE,kBAAkBlG,SAASgG,iBAAiB,CAA1B,CAAxB;SACOf,UAAUiB,gBAAgBzH,GAA1B,CAAP;;;AC7HF;;;;;;AAMA,IAAMK,UAAQC,MAAM,YAAN,CAAd;;;;;;;;IAQMoH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAgGK;;;WACFrH,KAAL,CAAW,QAAX,EAAqB,IAArB;mBASI,KAAKG,KAVF;UAGLS,MAHK,UAGLA,MAHK;UAIL0G,UAJK,UAILA,UAJK;UAKLC,SALK,UAKLA,SALK;UAMLhH,IANK,UAMLA,IANK;UAOLqC,WAPK,UAOLA,WAPK;UAQLtC,MARK,UAQLA,MARK;UASLmE,QATK,UASLA,QATK;UAWC3B,KAXD,GAWWlC,MAXX,CAWCkC,KAXD;UAYC0E,SAZD,GAYe1E,KAZf,CAYC0E,SAZD;UAaC3G,KAbD,GAaWD,MAbX,CAaCC,KAbD;;UAcD4G,UAAUlH,KAAKmH,mBAAL,CAAyBF,SAAzB,EAAoCF,UAApC,CAAhB;UACMtE,OAAOJ,YAAY+E,MAAZ,CAAmBpH,KAAKqH,cAAL,CAAoB/G,KAApB,CAAnB,CAAb;UACMyE,sBAAsBJ,uBAAuB3E,IAAvB,EAA6ByC,IAA7B,CAA5B;;UAEI9B,WAAW,EAAf;;WAEKO,KAAL,CAAW8D,OAAX,CAAmB,UAAC5B,KAAD,EAAQD,CAAR,EAAc;YACzBmE,kBAAkB,CAAC,CAACJ,OAAF,IAAaA,QAAQK,KAAR,IAAiBpE,CAA9B,IAAmCA,IAAI+D,QAAQM,GAAvE;;iBAESjC,IAAT,CACE,OAAKkC,UAAL,CAAgBrE,KAAhB,EAAuBkE,eAAvB,EAAwCvC,oBAAoB5B,CAApB,CAAxC,CADF;OAHF;;;;UAUM1C,aAAa,EAAE,YAAYT,KAAKZ;;;;OAAtC,CAIA,IAAIY,KAAKR,MAAL,IAAe,OAAf,IAA0BQ,KAAKkB,KAAL,CAAWwG,KAAX,GAAmBlI,MAAnB,IAA6B,OAA3D,EAAoE;YAC5DmI,YAAY3H,KAAK4H,gBAAL,EAAlB;YACID,aAAa,KAAjB,EAAwBlH,WAAWoH,GAAX,GAAiB,KAAjB;;;UAGpBjI,QAAQ;aACPI,KAAKZ,GADE;sBAAA;4BAAA;8BAAA;kBAAA;sBAAA;;OAAd;;UAUI0I,cAAcxH,MAAMQ,IAAN,CAAW,mBAAX,EAAgClB,KAAhC,CAAlB;;UAEIkI,WAAJ,EAAiB;sBACDnG,MAAMoG,YAAN,CAAmBD,WAAnB,EAAgC;eACpC9H,KAAKZ,GAAb;SADY,CAAd;;oBAIY0I,WAAZ,2BAA4BnH,QAA5B;;;UAGIE,UAAUP,MAAMQ,IAAN,CAAW,YAAX,eACXlB,KADW;8BAAA;;SAAhB;;aAMOI,KAAKiB,MAAL,GAAc;YAAA;aAAerB,KAAf;;OAAd,GAAuDiB,OAA9D;;;;;;;;;;;;;;EAjKec,MAAMC;;;;;;;;AAAnBkF,KAOGjF,YAAY;SACVC,WAAWf,KADD;eAEJuC,eAAeC,IAAf,CAAoBxB,UAFhB;UAGTC,MAAMxC,MAAN,CAAauC,UAHJ;aAINC,MAAMuC,IAAN,CAAWxC,UAJL;cAKLC,MAAMuC,IAAN,CAAWxC,UALN;QAMXD,WAAW9B,IAAX,CAAgB+B,UANL;UAOTD,WAAW9B,IAAX,CAAgB+B,UAPP;YAQPC,MAAMuC,IAAN,CAAWxC,UARJ;;;;;OAkBnBtC,QAAQ,UAACyC,OAAD,EAAsB;uCAATC,IAAS;UAAA;;;QACpBnC,IADoB,GACX,OAAKJ,KADM,CACpBI,IADoB;QAEpBZ,GAFoB,GAENY,IAFM,CAEpBZ,GAFoB;QAEfoF,IAFe,GAENxE,IAFM,CAEfwE,IAFe;;8BAGtBtC,OAAN,EAAkB9C,GAAlB,UAA0BoF,IAA1B,eAAsCrC,IAAtC;;;OAWFsB,wBAAwB,qBAAa;QAC3B7D,KAD2B,UAC3BA,KAD2B;QAE3BU,KAF2B,GAEjBV,MAAMS,MAFW,CAE3BC,KAF2B;;QAG7B0H,eAAe1H,MAAMQ,IAAN,CACnB,2BADmB,EAEnBlB,KAFmB,EAGnB+D,SAHmB,CAArB;QAKMD,IAAIC,SAAV;QACMC,IAAIhE,KAAV;;;;;QAKIoI,gBAAgB,IAApB,EAA0B;UACpBA,YAAJ,EAAkB;eACT,IAAP;;;UAGEA,iBAAiB,KAArB,EAA4B;eACnBC,IAAP,CACE,8LADF;;;;;;QAQAvE,EAAEQ,QAAF,IAAcN,EAAEM,QAApB,EAA8B,OAAO,IAAP;;;;;;QAM1BR,EAAE1D,IAAF,IAAU4D,EAAE5D,IAAhB,EAAsB,OAAO,IAAP;;;;;;;QAOlB0D,EAAEqD,UAAF,IAAgBnD,EAAEmD,UAAtB,EAAkC,OAAO,IAAP;QAC9BrD,EAAEsD,SAAF,IAAepD,EAAEoD,SAArB,EAAgC,OAAO,IAAP;;;QAG5B,CAACtD,EAAErB,WAAF,CAAc2B,MAAd,CAAqBJ,EAAEvB,WAAvB,CAAL,EAA0C,OAAO,IAAP;;;WAGnC,KAAP;;;OAsFFoF,aAAa,UAACrE,KAAD,EAAQ2D,UAAR,EAAoB1E,WAApB,EAAoC;kBACM,OAAKzC,KADX;QACvCmB,KADuC,WACvCA,KADuC;QAChCV,MADgC,WAChCA,MADgC;QACxBL,IADwB,WACxBA,IADwB;QAClBkE,QADkB,WAClBA,QADkB;QACR8C,SADQ,WACRA,SADQ;;QAEzCpF,YAAYwB,MAAM5D,MAAN,IAAgB,MAAhB,GAAyB4C,IAAzB,GAAgC0E,IAAlD;;WAGE,oBAAC,SAAD;aACS9G,KAAKR,MAAL,IAAe,OAAf,GAAyBQ,IAAzB,GAAgCe,KADzC;mBAEesB,WAFf;cAGUhC,MAHV;kBAIc0G,UAJd;iBAKaC,aAAaD,UAL1B;WAMO3D,MAAMhE,GANb;YAOQgE,KAPR;cAQUpD,IARV;gBASYkE;MAVd;;;;ACxMJ;;;;;;;;AAQA,SAASgE,WAAT,CAAqB9I,GAArB,EAAwC;MAAd+I,GAAc,uEAARC,MAAQ;;MAClCtB,WAAKuB,MAAL,CAAYjJ,GAAZ,CAAJ,EAAsB;UACdA,IAAIA,GAAV;;;MAGIkJ,KAAKH,IAAI3F,QAAJ,CAAa+F,aAAb,iBAAyCnJ,GAAzC,QAAX;;MAEI,CAACkJ,EAAL,EAAS;UACD,IAAIpJ,KAAJ,qCAC8BE,GAD9B,6FAAN;;;SAKKkJ,EAAP;;;ACrBF;;;;;;;;;AASA,SAASE,YAAT,CAAsBpJ,GAAtB,EAA2BgB,MAA3B,EAAiD;MAAd+H,GAAc,uEAARC,MAAQ;;MACzCE,KAAKJ,YAAY9I,GAAZ,EAAiB+I,GAAjB,CAAX;MACIZ,QAAQ,CAAZ;MACI7D,UAAJ;;;;MAIM+E,WAAWN,IAAI3F,QAAJ,CAAakG,kBAAb,CACfJ,EADe,EAEfK,WAAWC,SAFI,EAGf;WAAMD,WAAWE,aAAjB;GAHe,EAIf,KAJe,CAAjB;;SAOQnF,IAAI+E,SAASK,QAAT,EAAZ,EAAkC;QACxBtH,MADwB,GACbkC,EAAEqF,WADW,CACxBvH,MADwB;;QAE1BgG,MAAMD,QAAQ/F,MAApB;;QAEIpB,UAAUoH,GAAd,EAAmB;UACXwB,IAAI5I,SAASmH,KAAnB;aACO,EAAEvH,MAAM0D,CAAR,EAAWtD,QAAQ4I,KAAK,CAAL,GAASA,CAAT,GAAa,CAAhC,EAAP;;;YAGMxB,GAAR;;;SAGK,IAAP;;;ACnCF;;;;;;;;AAQA,SAASyB,YAAT,CAAsBC,KAAtB,EAA2C;MAAdf,GAAc,uEAARC,MAAQ;MAEvCe,SAFuC,GAQrCD,KARqC,CAEvCC,SAFuC;MAGvCC,YAHuC,GAQrCF,KARqC,CAGvCE,YAHuC;MAIvCC,QAJuC,GAQrCH,KARqC,CAIvCG,QAJuC;MAKvCC,WALuC,GAQrCJ,KARqC,CAKvCI,WALuC;MAMvCC,aANuC,GAQrCL,KARqC,CAMvCK,UANuC;MAOvCC,WAPuC,GAQrCN,KARqC,CAOvCM,WAPuC;;MASnCC,SAASjB,aAAaW,SAAb,EAAwBC,YAAxB,EAAsCjB,GAAtC,CAAf;MACMuB,QAAQF,cAAcC,MAAd,GAAuBjB,aAAaa,QAAb,EAAuBC,WAAvB,EAAoCnB,GAApC,CAArC;MACI,CAACsB,MAAD,IAAW,CAACC,KAAhB,EAAuB,OAAO,IAAP;;MAEjBC,IAAIxB,IAAI3F,QAAJ,CAAaoH,WAAb,EAAV;MACMrC,QAAQgC,gBAAaG,KAAb,GAAqBD,MAAnC;MACMjC,MAAM+B,gBAAaE,MAAb,GAAsBC,KAAlC;IACEG,QAAF,CAAWtC,MAAMvH,IAAjB,EAAuBuH,MAAMnH,MAA7B;IACE0J,MAAF,CAAStC,IAAIxH,IAAb,EAAmBwH,IAAIpH,MAAvB;SACOuJ,CAAP;;;ACxBF;;;;;;AAMA,AAAO,IAAMI,uBAAuB,uBAA7B;AACP,AAAO,IAAMC,4BAA0BD,oBAA1B,MAAN;AACP,IAAME,uBAAuB,iBAA7B;AACA,IAAMC,uBAAqBD,oBAArB,MAAN;AACA,IAAME,4BAAN;AACA,IAAMC,gBAAgB,mBAAtB;;;;;;;;;;;AAWA,SAASC,SAAT,CAAmBC,UAAnB,EAA+BC,YAA/B,EAA6ChI,KAA7C,EAAoD;8BACGiI,uBACnDF,UADmD,EAEnDC,YAFmD,CADH;MACpCE,WADoC,yBAC1CzK,IAD0C;MACf0K,aADe,yBACvBtK,MADuB;;MAM5CgI,SAASuC,UAAUL,UAAV,CAAf;MACQM,UAP0C,GAO3BH,WAP2B,CAO1CG,UAP0C;;MAQ9CC,YAAYD,WAAWE,OAAX,CAAmBZ,cAAnB,CAAhB;MACI9J,eAAJ;MACIJ,aAAJ;;;;MAII6K,SAAJ,EAAe;QACP3B,QAAQd,OAAO5F,QAAP,CAAgBoH,WAAhB,EAAd;QACMmB,WAAWF,UAAUC,OAAV,CAAkBX,aAAlB,CAAjB;UACMN,QAAN,CAAekB,QAAf,EAAyB,CAAzB;UACMjB,MAAN,CAAaW,WAAb,EAA0BC,aAA1B;WACOK,QAAP;aACS7B,MAAM8B,QAAN,GAAiBxJ,MAA1B;GANF,MAOO;;;QAGCyJ,WAAWL,WAAWE,OAAX,CAAmBV,aAAnB,CAAjB;QACI,CAACa,QAAL,EAAe,OAAO,IAAP;gBACHA,SAAS1C,aAAT,CAAuB2B,cAAvB,CAAZ;QACI,CAACW,SAAL,EAAgB,OAAO,IAAP;WACTA,SAAP;aACS7K,KAAK+I,WAAL,CAAiBvH,MAA1B;;;;;;;MAQApB,UAAUJ,KAAK+I,WAAL,CAAiBvH,MAA3B,IACAoJ,WAAWM,YAAX,CAAwBnB,oBAAxB,CAFF,EAGE;;;;;MAKI9J,YAAY4K,UAAUM,YAAV,CAAuBlB,oBAAvB,CAAlB;MACI,CAAChK,SAAL,EAAgB,OAAO,IAAP;;yBAEAC,UAAUpB,KAAV,CAAgBmB,SAAhB,CA/CkC;MA+C1Cb,GA/C0C,oBA+C1CA,GA/C0C;;;;;;;MAoD9C,CAACmD,MAAMC,QAAN,CAAe4I,aAAf,CAA6BhM,GAA7B,CAAL,EAAwC,OAAO,IAAP;;SAEjC;YAAA;;GAAP;;;;;;;;;;;;AAeF,SAASoL,sBAAT,CAAgCxK,IAAhC,EAAsCI,MAAtC,EAA8C;;;MAGxCJ,KAAKqL,QAAL,IAAiB,CAAjB,IAAsBrL,KAAK+F,UAAL,CAAgBvE,MAA1C,EAAkD;QAC1C8J,SAASlL,UAAUJ,KAAK+F,UAAL,CAAgBvE,MAAzC;QACMmG,YAAY2D,SAAS,UAAT,GAAsB,SAAxC;QACMjM,QAAQiM,SAASlL,SAAS,CAAlB,GAAsBA,MAApC;WACOmL,iBAAiBvL,IAAjB,EAAuBX,KAAvB,EAA8BsI,SAA9B,CAAP;;;;WAIO3H,KAAKqL,QAAL,IAAiB,CAAjB,IAAsBrL,KAAK+F,UAAL,CAAgBvE,MAA7C,EAAqD;UAC7C2B,IAAImI,SAAStL,KAAK+F,UAAL,CAAgBvE,MAAhB,GAAyB,CAAlC,GAAsC,CAAhD;aACO+J,iBAAiBvL,IAAjB,EAAuBmD,CAAvB,EAA0BwE,SAA1B,CAAP;;;;aAIO2D,SAAStL,KAAK+I,WAAL,CAAiBvH,MAA1B,GAAmC,CAA5C;;;;SAIK,EAAExB,UAAF,EAAQI,cAAR,EAAP;;;;;;;;;;;;;AAaF,SAASmL,gBAAT,CAA0BxL,MAA1B,EAAkCV,KAAlC,EAAyCsI,SAAzC,EAAoD;MAC1C5B,UAD0C,GAC3BhG,MAD2B,CAC1CgG,UAD0C;;MAE9C3C,QAAQ2C,WAAW1G,KAAX,CAAZ;MACI8D,IAAI9D,KAAR;MACImM,eAAe,KAAnB;MACIC,gBAAgB,KAApB;;;;SAKErI,MAAMiI,QAAN,IAAkB,CAAlB,IACCjI,MAAMiI,QAAN,IAAkB,CAAlB,IAAuBjI,MAAM2C,UAAN,CAAiBvE,MAAjB,IAA2B,CADnD,IAEC4B,MAAMiI,QAAN,IAAkB,CAAlB,IAAuBjI,MAAM+H,YAAN,CAAmB,iBAAnB,KAAyC,OAHnE,EAIE;QACIK,gBAAgBC,aAApB,EAAmC;;QAE/BtI,KAAK4C,WAAWvE,MAApB,EAA4B;qBACX,IAAf;UACInC,QAAQ,CAAZ;kBACY,UAAZ;;;;QAIE8D,IAAI,CAAR,EAAW;sBACO,IAAhB;UACI9D,QAAQ,CAAZ;kBACY,SAAZ;;;;YAIM0G,WAAW5C,CAAX,CAAR;QACIwE,aAAa,SAAjB,EAA4BxE;QACxBwE,aAAa,UAAjB,EAA6BxE;;;SAGxBC,SAAS,IAAhB;;;AC5JF;;;;;;;;AAQA,SAASsI,SAAT,CAAmBC,MAAnB,EAA2BpJ,KAA3B,EAAkC;MAC1B+F,KAAKqD,OAAOC,UAAP,IAAqBD,OAAOE,cAAvC;MACI,CAACvD,EAAL,EAAS,OAAO,IAAP;;MAEHF,SAASuC,UAAUrC,EAAV,CAAf;;;;MAKEqD,kBAAkBvD,OAAO0D,KAAzB,IACC1D,OAAO2D,WAAP,IAAsBJ,kBAAkBvD,OAAO2D,WAFlD,EAGE;aACS;kBACKJ,OAAOE,cADZ;oBAEOF,OAAOK,WAFd;iBAGIL,OAAOM,YAHX;mBAIMN,OAAOO;KAJtB;;;gBAcEP,MA1B4B;MAqB9BC,UArB8B,WAqB9BA,UArB8B;MAsB9BxC,YAtB8B,WAsB9BA,YAtB8B;MAuB9B+C,SAvB8B,WAuB9BA,SAvB8B;MAwB9B7C,WAxB8B,WAwB9BA,WAxB8B;MAyB9BE,WAzB8B,WAyB9BA,WAzB8B;;MA2B1BC,SAASY,UAAUuB,UAAV,EAAsBxC,YAAtB,EAAoC7G,KAApC,CAAf;MACMmH,QAAQF,cAAcC,MAAd,GAAuBY,UAAU8B,SAAV,EAAqB7C,WAArB,EAAkC/G,KAAlC,CAArC;MACI,CAACkH,MAAD,IAAW,CAACC,KAAhB,EAAuB,OAAO,IAAP;;;;;MAKnB0C,6BAASC,2BAAb,EAAsB;QACdC,YAAY9D,aAAaiB,OAAOrK,GAApB,EAAyBqK,OAAOrJ,MAAhC,CAAlB;QACMmM,WAAW/D,aAAakB,MAAMtK,GAAnB,EAAwBsK,MAAMtJ,MAA9B,CAAjB;;aAES;kBACKkM,UAAUtM,IADf;oBAEOsM,UAAUlM,MAFjB;iBAGImM,SAASvM,IAHb;mBAIMuM,SAASnM;KAJxB;;;MAQI8I,QAAQ4C,YAAMU,MAAN,CAAa;eACd/C,OAAOrK,GADO;kBAEXqK,OAAOrJ,MAFI;cAGfsJ,MAAMtK,GAHS;iBAIZsK,MAAMtJ,MAJM;gBAKboJ,cAAc,KAAd,GAAsBD,WAAWoC,MAAX,CALT;eAMd;GANC,CAAd;;SASOzC,KAAP;;;ACnEF;;;;;;AAMA,IAAMuD,YAAY,CAAC,MAAD,EAAS,SAAT,EAAoB,QAApB,CAAlB;;;;;;AAMA,IAAMC,YAAYC,8BAAU,CAAC,CAACvE,OAAOwE,SAAP,CAAiBC,SAAjB,CAA2BC,KAA3B,CAAiC,SAAjC,CAA9B;;;;;;;;AAQA,SAASC,mBAAT,CAA6BzE,EAA7B,EAAiCF,MAAjC,EAAyC;MACnCrI,SAASuI,GAAGsC,UAAhB;MACIoC,iBAAJ;;SAEO,CAACA,QAAR,EAAkB;QACZ,CAACjN,OAAO6K,UAAZ,EAAwB;;QAElBtI,QAAQ8F,OAAO6E,gBAAP,CAAwBlN,MAAxB,CAAd;QACQmN,SAJQ,GAIM5K,KAJN,CAIR4K,SAJQ;;;QAMZT,UAAUU,QAAV,CAAmBD,SAAnB,CAAJ,EAAmC;iBACtBnN,MAAX;;;;aAIOA,OAAO6K,UAAhB;;;;;;;;MAQE,CAACoC,QAAL,EAAe;WACN5E,OAAO5F,QAAP,CAAgB4K,IAAvB;;;SAGKJ,QAAP;;;;;;;;;AASF,SAASK,iBAAT,CAA2BpG,SAA3B,EAAsC;MAChCyF,SAAJ,EAAe;MACX,CAACzF,UAAU2E,UAAf,EAA2B;;MAErBxD,SAASuC,UAAU1D,UAAU2E,UAApB,CAAf;MACMoB,WAAWD,oBAAoB9F,UAAU2E,UAA9B,EAA0CxD,MAA1C,CAAjB;MACMkF,WACJN,YAAY5E,OAAO5F,QAAP,CAAgB4K,IAA5B,IACAJ,YAAY5E,OAAO5F,QAAP,CAAgB+K,eAF9B;MAGMC,WAAWjE,WAAWtC,SAAX,CAAjB;;MAEMiC,QAAQjC,UAAUwG,UAAV,CAAqB,CAArB,EAAwBC,UAAxB,EAAd;QACMC,QAAN,CAAeH,QAAf;MACII,aAAa1E,MAAM2E,qBAAN,EAAjB;;;;;;;MAOIC,6BAAJ,EAAe;QACT5E,MAAM6E,SAAN,IAAmBH,WAAWI,GAAX,IAAkB,CAArC,IAA0CJ,WAAWK,MAAX,IAAqB,CAAnE,EAAsE;UAChE/E,MAAM8C,WAAN,IAAqB,CAAzB,EAA4B;cACpBlC,MAAN,CAAaZ,MAAM+C,YAAnB,EAAiC,CAAjC;OADF,MAEO;cACCpC,QAAN,CAAeX,MAAM2C,cAArB,EAAqC3C,MAAM8C,WAAN,GAAoB,CAAzD;;;mBAGW9C,MAAM2E,qBAAN,EAAb;;UAEID,WAAWI,GAAX,IAAkB,CAAlB,IAAuBJ,WAAWK,MAAX,IAAqB,CAAhD,EAAmD;YAC7C/E,MAAMgF,cAAN,GAAuB1M,MAA3B,EAAmC;uBACpB0H,MAAMgF,cAAN,GAAuB,CAAvB,CAAb;;;;;;MAMJC,cAAJ;MACIF,eAAJ;MACIG,gBAAJ;MACIC,gBAAJ;MACIC,cAAc,CAAlB;MACIC,eAAe,CAAnB;MACIC,mBAAmB,CAAvB;MACIC,mBAAmB,CAAvB;MACIC,qBAAqB,CAAzB;MACIC,wBAAwB,CAA5B;MACIC,sBAAsB,CAA1B;MACIC,uBAAuB,CAA3B;;MAEIvB,QAAJ,EAAc;QACJwB,UADI,GACkD1G,MADlD,CACJ0G,UADI;QACQC,WADR,GACkD3G,MADlD,CACQ2G,WADR;QACqBC,WADrB,GACkD5G,MADlD,CACqB4G,WADrB;QACkCC,WADlC,GACkD7G,MADlD,CACkC6G,WADlC;;YAEJH,UAAR;aACSC,WAAT;cACUC,WAAV;cACUC,WAAV;GALF,MAMO;QACGC,WADH,GACwDlC,QADxD,CACGkC,WADH;QACgBC,YADhB,GACwDnC,QADxD,CACgBmC,YADhB;QAC8BC,SAD9B,GACwDpC,QADxD,CAC8BoC,SAD9B;QACyCC,UADzC,GACwDrC,QADxD,CACyCqC,UADzC;;gCAWDjH,OAAO6E,gBAAP,CAAwBD,QAAxB,CAXC;QAGHsC,cAHG,yBAGHA,cAHG;QAIHC,iBAJG,yBAIHA,iBAJG;QAKHC,eALG,yBAKHA,eALG;QAMHC,gBANG,yBAMHA,gBANG;QAOHC,UAPG,yBAOHA,UAPG;QAQHC,aARG,yBAQHA,aARG;QASHC,WATG,yBASHA,WATG;QAUHC,YAVG,yBAUHA,YAVG;;QAaCC,eAAe9C,SAASa,qBAAT,EAArB;YACQqB,WAAR;aACSC,YAAT;kBACcW,aAAa9B,GAAb,GAAmB1O,SAASgQ,cAAT,EAAyB,EAAzB,CAAjC;mBACeQ,aAAaC,IAAb,GAAoBzQ,SAASkQ,eAAT,EAA0B,EAA1B,CAAnC;;uBAGElQ,SAASgQ,cAAT,EAAyB,EAAzB,IAA+BhQ,SAASiQ,iBAAT,EAA4B,EAA5B,CADjC;;uBAIEjQ,SAASkQ,eAAT,EAA0B,EAA1B,IAAgClQ,SAASmQ,gBAAT,EAA2B,EAA3B,CADlC;;yBAGqBnQ,SAASoQ,UAAT,EAAqB,EAArB,CAArB;4BACwBpQ,SAASqQ,aAAT,EAAwB,EAAxB,CAAxB;0BACsBrQ,SAASsQ,WAAT,EAAsB,EAAtB,CAAtB;2BACuBtQ,SAASuQ,YAAT,EAAuB,EAAvB,CAAvB;cACUT,SAAV;cACUC,UAAV;;;MAGIW,YAAYpC,WAAWI,GAAX,GAAiBI,OAAjB,GAA2BE,WAA7C;MACM2B,aAAarC,WAAWmC,IAAX,GAAkB1B,OAAlB,GAA4BE,YAA/C;;MAEI2B,IAAI7B,OAAR;MACI8B,IAAI/B,OAAR;;MAEI6B,aAAa5B,OAAjB,EAA0B;;QAEpB4B,aAAarB,mBAAjB;GAFF,MAGO,IACLqB,aAAarC,WAAWO,KAAxB,GAAgCM,gBAAhC,GACAJ,UAAUF,KAFL,EAGL;;QAEI8B,aAAaxB,gBAAb,GAAgCI,oBAAhC,GAAuDV,KAA3D;;;MAGE6B,YAAY5B,OAAhB,EAAyB;;QAEnB4B,YAAYtB,kBAAhB;GAFF,MAGO,IACLsB,YAAYpC,WAAWK,MAAvB,GAAgCO,gBAAhC,GACAJ,UAAUH,MAFL,EAGL;;QAGE+B,YACAxB,gBADA,GAEAG,qBAFA,GAGAf,WAAWK,MAHX,GAIAA,MALF;;;MAQEX,QAAJ,EAAc;WACL8C,QAAP,CAAgBF,CAAhB,EAAmBC,CAAnB;GADF,MAEO;aACIf,SAAT,GAAqBe,CAArB;aACSd,UAAT,GAAsBa,CAAtB;;;;AC3LJ;;;;;;;;AAQA,SAASG,eAAT,CAAyBpJ,SAAzB,EAAoC;MAC5BqJ,MAAMlI,OAAO5F,QAAnB;;MAEI8N,OAAOA,IAAIlD,IAAJ,CAASmD,eAApB,EAAqC;;QAE7BrH,QAAQoH,IAAIlD,IAAJ,CAASmD,eAAT,EAAd;UACM5C,QAAN;UACM6C,MAAN;GAJF,MAKO;cACKH,eAAV;;;;ACIJ,IAAMI,iCAAiC,iDAAvC;;;;;;;;AAQA,IAAMhR,UAAQC,MAAM,eAAN,CAAd;;;;;;;;IAQMgR;;;;;;;;;;;;;;;mBAqCQ9Q,KAAZ,EAAmB;;;iHACXA,KADW;;UAmBnB+Q,iBAnBmB,GAmBC,YAAM;UAClBvI,SAASuC,UAAU,MAAK9J,OAAf,CAAf;;aAEO2B,QAAP,CAAgBoO,gBAAhB,CACE,iBADF,EAEE,MAAKC,uBAFP;;;UAMI,CAAClE,8BAAUmE,8BAAX,KAA0BC,qCAAiBC,WAA/C,EAA4D;cACrDnQ,OAAL,CAAa+P,gBAAb,CAA8B,aAA9B,EAA6C,MAAKK,mBAAlD;;;YAGGC,eAAL;KAhCiB;;UA2DnBC,kBA3DmB,GA2DE,YAAM;YACpBD,eAAL;KA5DiB;;UAmEnBA,eAnEmB,GAmED,YAAM;UACd7Q,MADc,GACH,MAAKT,KADF,CACdS,MADc;UAEdkC,KAFc,GAEJlC,MAFI,CAEdkC,KAFc;UAGd0E,SAHc,GAGA1E,KAHA,CAGd0E,SAHc;UAIdsC,aAJc,GAICtC,SAJD,CAIdsC,UAJc;;UAKhBnB,SAASuC,UAAU,MAAK9J,OAAf,CAAf;UACM8K,SAASvD,OAAOgJ,YAAP,EAAf;;;;UAII,CAACzF,MAAL,EAAa;;UAEL0F,UAZc,GAYa1F,MAZb,CAYd0F,UAZc;UAYFzF,UAZE,GAYaD,MAZb,CAYFC,UAZE;;;;UAelB,CAACyF,UAAD,IAAepK,UAAUqK,SAA7B,EAAwC;;;;UAIpCrK,UAAUqK,SAAd,EAAyB;YACnB,CAAC,MAAKC,UAAL,CAAgB3F,UAAhB,CAAL,EAAkC;wBAClBD,MAAhB;cACK9K,OAAL,CAAa2Q,IAAb;gBACM,iBAAN,EAAyB,EAAEvK,oBAAF,EAAa0E,cAAb,EAAzB;;;;;UAKE1E,UAAUwK,OAAd,EAAuB;;;UAGjBC,UAAU,CAAC,CAACL,UAAF,IAAgB1F,OAAO8B,UAAP,CAAkB,CAAlB,CAAhC;UACMvE,QAAQD,aAAahC,SAAb,EAAwBmB,MAAxB,CAAd;;UAEI,CAACc,KAAL,EAAY;eACHyI,KAAP,CACE,+DADF,EAEE,EAAE1K,oBAAF,EAFF;;;;UAOM4E,cA1Cc,GA0C2C3C,KA1C3C,CA0Cd2C,cA1Cc;UA0CEG,WA1CF,GA0C2C9C,KA1C3C,CA0CE8C,WA1CF;UA0CeC,YA1Cf,GA0C2C/C,KA1C3C,CA0Ce+C,YA1Cf;UA0C6BC,SA1C7B,GA0C2ChD,KA1C3C,CA0C6BgD,SA1C7B;;;;;;;UAgDlBwF,OAAJ,EAAa;YAER7F,kBAAkB6F,QAAQ7F,cAA1B,IACCG,eAAe0F,QAAQ1F,WADxB,IAECC,gBAAgByF,QAAQzF,YAFzB,IAGCC,aAAawF,QAAQxF,SAHvB,IAICL,kBAAkB6F,QAAQzF,YAA1B,IACCD,eAAe0F,QAAQxF,SADxB,IAECD,gBAAgByF,QAAQ7F,cAFzB,IAGCK,aAAawF,QAAQ1F,WARzB,EASE;;;;;;YAMC4F,GAAL,CAASC,mBAAT,GAA+B,IAA/B;sBACgBlG,MAAhB;;;UAGIA,OAAOmG,gBAAX,EAA6B;;;YAGvBvI,aAAJ,EAAgB;iBACPuI,gBAAP,CACE5I,MAAM+C,YADR,EAEE/C,MAAMgD,SAFR,EAGEhD,MAAM2C,cAHR,EAIE3C,MAAM8C,WAJR;SADF,MAOO;iBACE8F,gBAAP,CACE5I,MAAM2C,cADR,EAEE3C,MAAM8C,WAFR,EAGE9C,MAAM+C,YAHR,EAIE/C,MAAMgD,SAJR;;OAXJ,MAkBO;;eAEE6F,QAAP,CAAgB7I,KAAhB;;;;wBAIgByC,MAAlB;;;iBAGW,YAAM;;;YAGXqG,kCAAc,MAAKnR,OAAvB,EAAgC,MAAKA,OAAL,CAAa6I,KAAb;cAC3BkI,GAAL,CAASC,mBAAT,GAA+B,KAA/B;OAJF;;cAOM,iBAAN,EAAyB,EAAE5K,oBAAF,EAAa0E,cAAb,EAAzB;KAzKiB;;UAkLnBsG,GAlLmB,GAkLb,mBAAW;YACVpR,OAAL,GAAeA,OAAf;KAnLiB;;UAgMnB0Q,UAhMmB,GAgMN,UAACW,MAAD,EAAmC;UAA1BC,cAA0B,uEAAT,IAAS;UACtCtR,OADsC,SACtCA,OADsC;;;UAG1CyH,WAAJ;;UAEI;;;aAGG4J,OAAO7G,QAAP,KAAoB,CAApB,GAAwB6G,OAAOtH,UAA/B,GAA4CsH,MAAjD;OAHF,CAIE,OAAOE,GAAP,EAAY;;;;;YAKRJ,kCAAcvB,+BAA+B4B,IAA/B,CAAoCD,IAAIlQ,OAAxC,CAAlB,EAAoE;iBAC3D,KAAP;;;cAGIkQ,GAAN;;aAGA,CAAC,CAACD,cAAD,IAAmB7J,GAAGgK,iBAAvB,MACChK,OAAOzH,OAAP,IAAkByH,GAAGwC,OAAH,CAAW,qBAAX,MAAsCjK,OADzD,CADF;KApNiB;;UAkTnBoQ,mBAlTmB,GAkTG,iBAAS;UACzB,MAAKrR,KAAL,CAAWsE,QAAf,EAAyB;UACrB,CAAC,MAAKqN,UAAL,CAAgBgB,MAAML,MAAtB,CAAL,EAAoC;;kCAEdK,MAAMC,eAAN,EAJO;;UAItBC,WAJsB;;UAKzB,CAACA,WAAL,EAAkB;;UAEVpS,MAPqB,GAOV,MAAKT,KAPK,CAOrBS,MAPqB;;;cASrBkS,MAAMG,SAAd;aACO,uBAAL;;kBACQC,cAAN;;gBAEMzJ,QAAQwC,UAAU+G,WAAV,EAAuBpS,OAAOkC,KAA9B,CAAd;mBACOqQ,MAAP,CAAc;qBAAUA,OAAOC,aAAP,CAAqB3J,KAArB,CAAV;aAAd;;;;aAIG,iBAAL,CATF;aAUO,iBAAL;;kBACQyJ,cAAN;gBACMzJ,SAAQwC,UAAU+G,WAAV,EAAuBpS,OAAOkC,KAA9B,CAAd;;mBAEOqQ,MAAP,CAAc,kBAAU;kBAClBA,OAAOrQ,KAAP,CAAauQ,QAAjB,EAA2B;uBAClBC,yBAAP;eADF,MAEO;uBACEC,iBAAP,CAAyB9J,MAAzB;;aAJJ;;;;;aAWG,uBAAL,CAzBF;aA0BO,YAAL;;;;;;gBAKQpJ,OACJyS,MAAMU,IAAN,IAAc,IAAd,GACIV,MAAMW,YAAN,CAAmBC,OAAnB,CAA2B,YAA3B,CADJ,GAEIZ,MAAMU,IAHZ;;gBAKInT,QAAQ,IAAZ,EAAkB;;kBAEZ6S,cAAN;;gBAEQpQ,KAdS,GAcClC,MAdD,CAcTkC,KAdS;gBAeT0E,SAfS,GAeK1E,KAfL,CAeT0E,SAfS;;gBAgBXiC,UAAQwC,UAAU+G,WAAV,EAAuBlQ,KAAvB,CAAd;;mBAEOqQ,MAAP,CAAc,kBAAU;qBACfQ,iBAAP,CAAyBlK,OAAzB,EAAgCpJ,IAAhC,EAAsCmH,UAAUpH,KAAhD;;;;kBAIIoH,UAAUpH,KAAV,IAAmB0C,MAAMC,QAAN,IAAkBoQ,OAAOrQ,KAAP,CAAaC,QAAtD,EAAgE;uBACvDgO,MAAP,CAAc,EAAE3Q,OAAO,IAAT,EAAd;;aANJ;;;;;KAvWa;;UA+XnBgR,uBA/XmB,GA+XOwC,SAAS,iBAAS;UACtC,MAAKzT,KAAL,CAAWsE,QAAf,EAAyB;;UAEnBkE,SAASuC,UAAU4H,MAAML,MAAhB,CAAf;UACQoB,aAJkC,GAIhBlL,OAAO5F,QAJS,CAIlC8Q,aAJkC;;UAKtCA,kBAAkB,MAAKzS,OAA3B,EAAoC;;YAE/BjB,KAAL,CAAW2T,QAAX,CAAoBhB,KAApB;KAPwB,EAQvB,GARuB,CA/XP;;UA6enB9K,UA7emB,GA6eN,UAACrE,KAAD,EAAQ2D,UAAR,EAAoB1E,WAApB,EAAoC;wBAClB,MAAKzC,KADa;UACvCS,MADuC,eACvCA,MADuC;UAC/B6D,QAD+B,eAC/BA,QAD+B;UAEvC3B,KAFuC,GAE7BlC,MAF6B,CAEvCkC,KAFuC;UAGvCC,QAHuC,GAGfD,KAHe,CAGvCC,QAHuC;UAG7BwE,SAH6B,GAGfzE,KAHe,CAG7ByE,SAH6B;;;aAM7C,oBAAC,IAAD;eACS,IADT;gBAEU3G,MAFV;qBAGegC,WAHf;oBAIc0E,UAJd;mBAKaC,aAAaD,UAL1B;aAMO3D,MAAMhE,GANb;cAOQgE,KAPR;gBAQUZ,QARV;kBASY0B;QAVd;KAlfiB;;UAEZ0N,GAAL,GAAW,EAAX;UACKA,GAAL,CAASC,mBAAT,GAA+B,KAA/B;;mBAEe7M,OAAf,CAAuB,mBAAW;YAC3BwO,OAAL,IAAgB,iBAAS;cAClBC,OAAL,CAAaD,OAAb,EAAsBjB,KAAtB;OADF;KADF;;;;;;;;;;;;;;;;;;;;;;;;;2CAkCqB;UACfnK,SAASuC,UAAU,KAAK9J,OAAf,CAAf;;UAEIuH,MAAJ,EAAY;eACH5F,QAAP,CAAgBkR,mBAAhB,CACE,iBADF,EAEE,KAAK7C,uBAFP;;;;UAOE,CAAClE,8BAAUmE,8BAAX,KAA0BC,qCAAiBC,WAA/C,EAA4D;aACrDnQ,OAAL,CAAa6S,mBAAb,CAAiC,aAAjC,EAAgD,KAAKzC,mBAArD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4BA8KIuC,SAASjB,OAAO;cAChB,SAAN,EAAiBiB,OAAjB;;;;UAKE,KAAK5B,GAAL,CAASC,mBAAT,KACC2B,WAAW,UAAX,IAAyBA,WAAW,QAApC,IAAgDA,WAAW,SAD5D,CADF,EAGE;;;;;;;;;UASEA,WAAW,UAAf,EAA2B;YACjBnT,MADiB,GACN,KAAKT,KADC,CACjBS,MADiB;YAEjBkC,KAFiB,GAEPlC,MAFO,CAEjBkC,KAFiB;YAGjB0E,SAHiB,GAGH1E,KAHG,CAGjB0E,SAHiB;;YAInBmB,SAASuC,UAAU4H,MAAML,MAAhB,CAAf;YACMvG,SAASvD,OAAOgJ,YAAP,EAAf;YACMlI,QAAQwC,UAAUC,MAAV,EAAkBpJ,KAAlB,CAAd;;YAEI2G,SAASA,MAAMlF,MAAN,CAAaiD,SAAb,CAAb,EAAsC;eAC/BiK,eAAL;;;;;;UAOFsC,WAAW,WAAX,IACAA,WAAW,aADX,IAEAA,WAAW,YAFX,IAGAA,WAAW,aAHX,IAIAA,WAAW,YAJX,IAKAA,WAAW,aALX,IAMAA,WAAW,QAPb,EAQE;YACQtB,MADR,GACmBK,KADnB,CACQL,MADR;;YAEMyB,mBAAmBzB,OAAOpH,OAAP,CAAe,qBAAf,CAAzB;YACI6I,qBAAqB,KAAK9S,OAA9B,EAAuC;;;;;UAMvC2S,WAAW,eAAX,IACAA,WAAW,QADX,IAEAA,WAAW,OAFX,IAGAA,WAAW,kBAHX,IAIAA,WAAW,oBAJX,IAKAA,WAAW,SALX,IAMAA,WAAW,SANX,IAOAA,WAAW,WAPX,IAQAA,WAAW,SARX,IASAA,WAAW,SATX,IAUAA,WAAW,UAXb,EAYE;YACI,CAAC,KAAKjC,UAAL,CAAgBgB,MAAML,MAAtB,CAAL,EAAoC;;;;UAIlCsB,WAAW,QAAf,EAAyB;YACnB,CAAC,KAAKjC,UAAL,CAAgBgB,MAAML,MAAtB,EAA8B,KAA9B,CAAL,EAA2C;;;WAGxCtS,KAAL,CAAW4T,OAAX,EAAoBjB,KAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAyGO;;;UACC3S,KADD,GACW,IADX,CACCA,KADD;UAGLgU,SAHK,GAUHhU,KAVG,CAGLgU,SAHK;UAIL1P,QAJK,GAUHtE,KAVG,CAILsE,QAJK;UAKL7D,MALK,GAUHT,KAVG,CAKLS,MALK;UAMLwT,QANK,GAUHjU,KAVG,CAMLiU,QANK;UAOLC,IAPK,GAUHlU,KAVG,CAOLkU,IAPK;UAQLC,OARK,GAUHnU,KAVG,CAQLmU,OARK;UASLC,UATK,GAUHpU,KAVG,CASLoU,UATK;UAWCzR,KAXD,GAWkBlC,MAXlB,CAWCkC,KAXD;UAWQjC,KAXR,GAWkBD,MAXlB,CAWQC,KAXR;;UAYD2T,YAAYF,OAAlB;UACQvR,QAbD,GAasCD,KAbtC,CAaCC,QAbD;UAaWyE,SAbX,GAasC1E,KAbtC,CAaW0E,SAbX;UAasB5E,WAbtB,GAasCE,KAbtC,CAasBF,WAbtB;;UAcD6E,UAAU1E,SAAS2E,mBAAT,CAA6BF,SAA7B,CAAhB;UACMxE,OAAOD,SAAS6E,cAAT,CAAwB/G,KAAxB,EAA+B8G,MAA/B,CAAsC/E,eAAe,EAArD,CAAb;UACM0C,sBAAsBJ,uBAAuBnC,QAAvB,EAAiCC,IAAjC,CAA5B;;UAEM9B,WAAW6B,SAAStB,KAAT,CAAeyE,OAAf,GAAyBzC,GAAzB,CAA6B,UAACE,KAAD,EAAQD,CAAR,EAAc;YACpD4D,aAAa,CAAC,CAACG,OAAF,IAAaA,QAAQK,KAAR,IAAiBpE,CAA9B,IAAmCA,IAAI+D,QAAQM,GAAlE;;eAEO,OAAKC,UAAL,CAAgBrE,KAAhB,EAAuB2D,UAAvB,EAAmChC,oBAAoB5B,CAApB,CAAnC,CAAP;OAHe,CAAjB;;UAMM+Q,WAAWvV,eAAe+B,MAAf,CAAsB,UAACyT,GAAD,EAAMX,OAAN,EAAkB;YACnDA,OAAJ,IAAe,OAAKA,OAAL,CAAf;eACOW,GAAP;OAFe,EAGd,EAHc,CAAjB;;UAKM7R;;iBAEK,MAFL;;oBAIQ,UAJR;;kBAMM;SAIN4B,WAAW,EAAX,GAAgB,EAAEkQ,kBAAkB,2BAApB,EAVhB,EAYDxU,MAAM0C,KAZL,CAAN;;cAeM,QAAN,EAAgB,EAAE1C,YAAF,EAAhB;;aAGE;iBAAA;qBACMsU,QADN;mCAAA;eAGO,KAAKjC,GAHZ;sBAIYzP,SAASpD,GAJrB;2BAKmB8E,WAAW,IAAX,GAAkB,IALrC;8CAAA;qBAOa0P,SAPb;kBAQU,KAAKS,MARf;mBASW,KAAKC,OAThB;4BAUoB,KAAKC,gBAVzB;8BAWsB,KAAKC,kBAX3B;kBAYU,KAAKC,MAZf;iBAaS,KAAKC,KAbd;qBAca,KAAKC,SAdlB;sBAec,KAAKC,UAfnB;uBAgBe,KAAKC,WAhBpB;kBAiBU,KAAKC,MAjBf;mBAkBW,KAAKC,OAlBhB;qBAmBa,KAAKC,SAnBlB;mBAoBW,KAAKC,OApBhB;mBAqBW,KAAKC,OArBhB;oBAsBY,KAAK3B,QAtBjB;uBAuBe3T,MAAMuV,WAAN,GAAoB,IAApB,GAA2B,KAvB1C;sBAwBcnB,UAxBd;iBAyBS1R,KAzBT;gBA0BQ4B,WAAW,IAAX,GAAkB4P,QAAQ,SA1BlC;oBA2BYD;;;;YAIV,cAAY;;gBA/Bd;aAkCQjU,KAAL,CAAWe;OAnChB;;;;;;;;;;;;;EAlekBgB,MAAMC;;;;;;AAAtB8O,QAOG7O,YAAY;eACJG,MAAMuC,IAAN,CAAWxC,UADP;YAEPC,MAAMsC,GAAN,CAAUvC,UAFH;aAGNC,MAAMjD,MAHA;UAITiD,MAAMxC,MAAN,CAAauC,UAJJ;YAKPC,MAAMuC,IAAN,CAAWxC,UALJ;QAMXC,MAAMjD,MANK;cAOLiD,MAAMuC,IAAN,CAAWxC,UAPN;SAQVC,MAAMxC,MARI;YASPwC,MAAMC,MATC;WAURD,MAAMjD,MAVE;AAPf2R,QA0BGlN,eAAe;SACb,EADa;WAEX,KAFW;AAihBxB7E,eAAeqG,OAAf,CAAuB,mBAAW;UACxBnD,SAAR,CAAkB2R,OAAlB,IAA6BxR,MAAMoT,IAAN,CAAWrT,UAAxC;CADF;;AChlBA;;;;;;AAMA,IAAMsT,iBAAiB;YACX,8BADW;QAEf,WAFe;QAGf,0BAHe;QAIf,UAJe;QAKf;;;;;;;;CALR;;ICIQC,WAAyBD,eAAzBC;IAAUC,OAAeF,eAAfE;IAAMC,OAASH,eAATG;;;;;;;;;;AAUxB,SAASC,aAAT,CAAuBlD,KAAvB,EAA8BhQ,KAA9B,EAAgE;MAA3BmT,QAA2B,uEAAhBnT,MAAMmT,QAAU;;MACxDtN,SAASuC,UAAU4H,MAAML,MAAhB,CAAf;MACMvG,SAASvD,OAAOgJ,YAAP,EAAf;MACQzO,QAHsD,GAGjCJ,KAHiC,CAGtDI,QAHsD;MAG5CE,MAH4C,GAGjCN,KAHiC,CAG5CM,MAH4C;;MAIxD8S,YAAYpT,MAAMC,QAAN,CAAeoT,cAAf,CAA8BjT,QAA9B,CAAlB;MACMkT,UAAUtT,MAAMC,QAAN,CAAeoT,cAAf,CAA8B/S,MAA9B,CAAhB;;;MAGI8I,OAAOnC,WAAP,IAAsB,CAACmM,SAA3B,EAAsC;;;;MAIhCG,UAAUC,OAAOC,aAAP,CAAqBN,QAArB,CAAhB;MACMxM,QAAQyC,OAAO8B,UAAP,CAAkB,CAAlB,CAAd;MACIwI,WAAW/M,MAAMgN,aAAN,EAAf;MACIC,SAASF,SAASlQ,UAAT,CAAoB,CAApB,CAAb;;;WAGSA,UAAT,CAAoBf,OAApB,CAA4B,gBAAQ;QAC9BhF,KAAK+I,WAAL,IAAoB/I,KAAK+I,WAAL,CAAiBqN,IAAjB,OAA4B,EAApD,EAAwD;eAC7CpW,IAAT;;GAFJ;;;;;MASI6V,OAAJ,EAAa;QACLlM,IAAIT,MAAMwE,UAAN,EAAV;QACM1N,OAAOkI,YAAY2N,OAAZ,EAAqBzN,MAArB,CAAb;MACEiO,WAAF,CAAcrW,IAAd;eACW2J,EAAEuM,aAAF,EAAX;;;;;;;MAOEP,SAAJ,EAAe;aACJM,SAASlQ,UAAT,CAAoB,CAApB,EAAuBA,UAAvB,CAAkC,CAAlC,EAAqCuQ,UAA9C;;;;;EAKD,GAAGC,KAAH,CAASC,IAAT,CAAcP,SAASQ,gBAAT,CAA0BzM,mBAA1B,CAAd,EAA8DhF,OAA9D,CAAsE,cAAM;QACrE0R,YAAYC,GAAGxL,YAAH,CAAgBpB,oBAAhB,MAA0C,GAA5D;OACGhB,WAAH,GAAiB2N,YAAY,IAAZ,GAAmB,EAApC;GAFD;;;;;MAQGP,OAAO9K,QAAP,IAAmB,CAAvB,EAA0B;QAClBuL,OAAOxO,OAAO5F,QAAP,CAAgBqU,aAAhB,CAA8B,MAA9B,CAAb;;;;SAIKvU,KAAL,CAAWwU,UAAX,GAAwB,KAAxB;;SAEKC,WAAL,CAAiBZ,MAAjB;aACSY,WAAT,CAAqBH,IAArB;aACSA,IAAT;;;SAGKI,YAAP,CAAoB,qBAApB,EAA2ClB,OAA3C;;;;;MAKMmB,mBAAmBC,YAAM1K,MAAN,CAAa,EAAEhK,UAAUkT,QAAZ,EAAb,CAAzB;MACMyB,YAAYC,MAAMC,SAAN,CAAgBJ,gBAAhB,CAAlB;;;;MAIMK,MAAMlP,OAAO5F,QAAP,CAAgBqU,aAAhB,CAA8B,KAA9B,CAAZ;MACIE,WAAJ,CAAgBd,QAAhB;;;;;;;;MAQI1D,MAAMgF,aAAN,IAAuBhF,MAAMgF,aAAN,CAAoBC,OAA3C,IAAsD,CAACpL,yBAA3D,EAAkE;UAC1DuG,cAAN;UACM4E,aAAN,CAAoBC,OAApB,CAA4BhC,IAA5B,EAAkC2B,SAAlC;UACMI,aAAN,CAAoBC,OAApB,CAA4BlC,QAA5B,EAAsCQ,OAAtC;UACMyB,aAAN,CAAoBC,OAApB,CAA4BjC,IAA5B,EAAkC+B,IAAIG,SAAtC;;;;;;;MAOIpX,SAASkS,MAAML,MAAN,CAAapH,OAAb,CAAqB,qBAArB,CAAf;MACIkM,YAAJ,CAAiB,iBAAjB,EAAoC,IAApC;MACI1U,KAAJ,CAAUoV,QAAV,GAAqB,UAArB;MACIpV,KAAJ,CAAUyN,IAAV,GAAiB,SAAjB;SACOgH,WAAP,CAAmBO,GAAnB;SACOK,iBAAP,CAAyBL,GAAzB;;;SAGOM,qBAAP,CAA6B,YAAM;WAC1BC,WAAP,CAAmBP,GAAnB;oBACgB3L,MAAhB;WACOoG,QAAP,CAAgB7I,KAAhB;GAHF;;;AC1HF;;;;;;;;AAQA,SAAS4O,QAAT,CAAkBjX,OAAlB,EAA2B0B,KAA3B,EAAkC;MAC1BuI,UAAUjK,QAAQiK,OAAR,CAAgB,YAAhB,CAAhB;MACI,CAACA,OAAL,EAAc,OAAO,IAAP;;MAER1L,MAAM0L,QAAQK,YAAR,CAAqB,UAArB,CAAZ;MACI,CAAC/L,GAAL,EAAU,OAAO,IAAP;;MAEJY,OAAOuC,MAAMC,QAAN,CAAeuV,OAAf,CAAuB3Y,GAAvB,CAAb;SACOY,QAAQ,IAAf;;;ACVF;;;;;;;;AAQA,SAASgY,aAAT,CAAuBzF,KAAvB,EAA8BhQ,KAA9B,EAAqC;MAC/BgQ,MAAM0F,WAAV,EAAuB;YACb1F,MAAM0F,WAAd;;;eAGuB1F,KALU;MAK3BrC,CAL2B,UAK3BA,CAL2B;MAKxBC,CALwB,UAKxBA,CALwB;MAKrB+B,MALqB,UAKrBA,MALqB;;MAM/BhC,KAAK,IAAL,IAAaC,KAAK,IAAtB,EAA4B,OAAO,IAAP;;MAEpB3N,QAR2B,GAQdD,KARc,CAQ3BC,QAR2B;;MAS7BxC,OAAO8X,SAAS5F,MAAT,EAAiB3P,KAAjB,CAAb;MACI,CAACvC,IAAL,EAAW,OAAO,IAAP;;;;;MAKPA,KAAKiB,MAAT,EAAiB;QACTiX,OAAOhG,OAAOrE,qBAAP,EAAb;QACMsK,aACJnY,KAAKR,MAAL,IAAe,QAAf,GACI0Q,IAAIgI,KAAKnI,IAAT,GAAgBmI,KAAKnI,IAAL,GAAYmI,KAAK/J,KAAjB,GAAyB+B,CAD7C,GAEIC,IAAI+H,KAAKlK,GAAT,GAAekK,KAAKlK,GAAL,GAAWkK,KAAKjK,MAAhB,GAAyBkC,CAH9C;;QAKMrQ,OAAOE,KAAK0E,YAAL,EAAb;QACMwE,SAAQ4C,YAAMU,MAAN,EAAd;;QAEI2L,UAAJ,EAAgB;UACRC,eAAe5V,SAAS6V,eAAT,CAAyBvY,KAAKV,GAA9B,CAArB;;UAEIgZ,YAAJ,EAAkB;eACTlP,OAAMoP,WAAN,CAAkBF,YAAlB,CAAP;;;;QAIEG,WAAW/V,SAASgW,WAAT,CAAqB1Y,KAAKV,GAA1B,CAAjB;WACOmZ,WAAWrP,OAAMuP,aAAN,CAAoBF,QAApB,CAAX,GAA2C,IAAlD;;;;MAIInQ,SAASuC,UAAUuH,MAAV,CAAf;MACIvG,eAAJ;;;MAGIvD,OAAO5F,QAAP,CAAgBkW,mBAApB,EAAyC;aAC9BtQ,OAAO5F,QAAP,CAAgBkW,mBAAhB,CAAoCxI,CAApC,EAAuCC,CAAvC,CAAT;GADF,MAEO,IAAI/H,OAAO5F,QAAP,CAAgBmW,sBAApB,EAA4C;QAC3CjB,WAAWtP,OAAO5F,QAAP,CAAgBmW,sBAAhB,CAAuCzI,CAAvC,EAA0CC,CAA1C,CAAjB;aACS/H,OAAO5F,QAAP,CAAgBoH,WAAhB,EAAT;WACOC,QAAP,CAAgB6N,SAASkB,UAAzB,EAAqClB,SAAStX,MAA9C;WACO0J,MAAP,CAAc4N,SAASkB,UAAvB,EAAmClB,SAAStX,MAA5C;GAJK,MAKA,IAAIgI,OAAO5F,QAAP,CAAgB4K,IAAhB,CAAqBmD,eAAzB,EAA0C;;;aAGtCnI,OAAO5F,QAAP,CAAgB4K,IAAhB,CAAqBmD,eAArB,EAAT;;QAEI;aACKsI,WAAP,CAAmB3I,CAAnB,EAAsBC,CAAtB;KADF,CAEE,OAAOwB,KAAP,EAAc;;;aAGP,IAAP;;;;;MAKEzI,QAAQwC,UAAUC,MAAV,EAAkBpJ,KAAlB,CAAd;MACI,CAAC2G,KAAL,EAAY,OAAO,IAAP;;SAELA,KAAP;;;AC7EF;;;;;;IAMQoM,aAAqCD,eAArCC;IAAUC,SAA2BF,eAA3BE;IAAMuD,OAAqBzD,eAArByD;IAAMC,OAAe1D,eAAf0D;IAAMvD,SAASH,eAATG;;;;;;;;AAQpC,IAAMwD,mBAAmB,kCAAzB;;;;;;;;;AASA,SAASC,gBAAT,CAA0B1G,KAA1B,EAAiC;;;;MAI3B,CAACnG,yBAAD,IAAUmG,MAAM0F,WAApB,EAAiC;YACvB1F,MAAM0F,WAAd;;;MAGIiB,WAAW3G,MAAMW,YAAN,IAAsBX,MAAMgF,aAA7C;MACI7B,WAAWyD,QAAQD,QAAR,EAAkB5D,UAAlB,CAAf;MACItV,OAAOmZ,QAAQD,QAAR,EAAkBJ,IAAlB,CAAX;MACMM,OAAOD,QAAQD,QAAR,EAAkB3D,MAAlB,CAAb;MACM8D,OAAOF,QAAQD,QAAR,EAAkBH,IAAlB,CAAb;MACIjZ,OAAOqZ,QAAQD,QAAR,EAAkB1D,MAAlB,CAAX;MACI8D,cAAJ;;;;MAII,CAAC5D,QAAD,IAAa0D,IAAb,IAAqB,CAACA,KAAKG,OAAL,CAAa,wBAAb,CAA1B,EAAkE;QAC1Dva,UAAUga,iBAAiB/Z,IAAjB,CAAsBma,IAAtB,CAAhB;;iCACwBpa,OAFwC;QAEzDwa,IAFyD;QAEnD1D,OAFmD;;;QAG5DA,OAAJ,EAAaJ,WAAWI,OAAX;;;;;MAKXhW,IAAJ,EAAU;QACF2Z,gBAAgBC,iBAAiB5Z,IAAjB,CAAtB;;QAEI2Z,cAAcnE,UAAd,CAAJ,EAA6BI,WAAW+D,cAAcnE,UAAd,CAAX;QACzBmE,cAAcX,IAAd,CAAJ,EAAyB9Y,OAAOyZ,cAAcX,IAAd,CAAP;QACrBW,cAAcjE,MAAd,CAAJ,EAAyB1V,OAAO2Z,cAAcjE,MAAd,CAAP;;;;MAIvBE,QAAJ,EAAcA,WAAWK,OAAO4D,eAAP,CAAuBjE,QAAvB,CAAX;MACV1V,IAAJ,EAAUA,OAAO+V,OAAO4D,eAAP,CAAuB3Z,IAAvB,CAAP;;;;MAIN;;QAEEkZ,SAASU,KAAT,IAAkBV,SAASU,KAAT,CAAepY,MAArC,EAA6C;cACnCqY,MAAMC,IAAN,CAAWZ,SAASU,KAApB,EACL1W,GADK,CACD;eAAS+B,KAAK8U,IAAL,IAAa,MAAb,GAAsB9U,KAAK+U,SAAL,EAAtB,GAAyC,IAAlD;OADC,EAELtX,MAFK,CAEE;eAAUuX,MAAV;OAFF,CAAR;KADF,MAIO,IAAIf,SAASI,KAAT,IAAkBJ,SAASI,KAAT,CAAe9X,MAArC,EAA6C;cAC1CqY,MAAMC,IAAN,CAAWZ,SAASI,KAApB,CAAR;;GAPJ,CASE,OAAOlH,GAAP,EAAY;QACR8G,SAASI,KAAT,IAAkBJ,SAASI,KAAT,CAAe9X,MAArC,EAA6C;cACnCqY,MAAMC,IAAN,CAAWZ,SAASI,KAApB,CAAR;;;;;MAKErG,OAAO,EAAEqG,YAAF,EAAS5D,kBAAT,EAAmB0D,UAAnB,EAAyBpZ,UAAzB,EAA+BqZ,UAA/B,EAAqCvZ,UAArC,EAAb;OACK0E,IAAL,GAAY0V,gBAAgBjH,IAAhB,CAAZ;SACOA,IAAP;;;;;;;;;;;AAWF,SAASyG,gBAAT,CAA0B5Z,IAA1B,EAAgC;MACxBqa,SAAS,oBAAf;;MAEIra,KAAKsa,SAAL,CAAe,CAAf,EAAkBD,OAAO3Y,MAAzB,KAAoC2Y,MAAxC,EAAgD;WACvC,EAAE3E,MAAM1V,IAAR,EAAP;;;;;MAKE;WACKua,KAAKvb,KAAL,CAAWgB,KAAKsa,SAAL,CAAeD,OAAO3Y,MAAtB,CAAX,CAAP;GADF,CAEE,OAAO4Q,GAAP,EAAY;UACN,IAAIlT,KAAJ,CAAU,+CAAV,CAAN;;;;;;;;;;;AAWJ,SAASgb,eAAT,CAAyBjH,IAAzB,EAA+B;MACzBA,KAAKyC,QAAT,EAAmB,OAAO,UAAP;MACfzC,KAAKjT,IAAT,EAAe,OAAO,MAAP;;;;;;MAMXiT,KAAKoG,IAAL,IAAapG,KAAKmG,IAAtB,EAA4B,OAAO,MAAP;MACxBnG,KAAKoG,IAAL,IAAapG,KAAKnT,IAAtB,EAA4B,OAAO,MAAP;;MAExBmT,KAAKqG,KAAL,IAAcrG,KAAKqG,KAAL,CAAW9X,MAA7B,EAAqC,OAAO,OAAP;MACjCyR,KAAKmG,IAAT,EAAe,OAAO,MAAP;MACXnG,KAAKnT,IAAT,EAAe,OAAO,MAAP;SACR,SAAP;;;;;;;;;;;;AAYF,SAASqZ,OAAT,CAAiBD,QAAjB,EAA2B1U,IAA3B,EAAiC;MAC3B,CAAC0U,SAASoB,KAAV,IAAmB,CAACpB,SAASoB,KAAT,CAAe9Y,MAAvC,EAA+C;;;WAGtCgD,QAAQgR,MAAR,GAAe0D,SAAS/F,OAAT,CAAiB,MAAjB,KAA4B,IAA3C,GAAkD,IAAzD;;;;MAIImH,QAAQT,MAAMC,IAAN,CAAWZ,SAASoB,KAApB,CAAd;;SAEOA,MAAMf,OAAN,CAAc/U,IAAd,MAAwB,CAAC,CAAzB,GAA6B0U,SAAS/F,OAAT,CAAiB3O,IAAjB,KAA0B,IAAvD,GAA8D,IAArE;;;ACzJF;;;;;;IAMQgR,SAASH,eAATG;;;;;;;;;;;;;AAaR,SAAS+E,gBAAT,CAA0BhI,KAA1B,EAAiC/N,IAAjC,EAAuCH,OAAvC,EAAgD;MACxCmW,OAAOnF,eAAe7Q,KAAKiW,WAAL,EAAf,CAAb;;MAEI,CAACD,IAAL,EAAW;UACH,IAAItb,KAAJ,wCAA+Csb,IAA/C,QAAN;;;MAGEjI,MAAM0F,WAAV,EAAuB;YACb1F,MAAM0F,WAAd;;;MAGIiB,WAAW3G,MAAMW,YAAN,IAAsBX,MAAMgF,aAA7C;;MAEI;aACOC,OAAT,CAAiBgD,IAAjB,EAAuBnW,OAAvB;;;aAGSmT,OAAT,CAAiB,MAAjB,EAAyB0B,SAAS/F,OAAT,CAAiB,MAAjB,CAAzB;GAJF,CAKE,OAAOf,GAAP,EAAY;QACN+H,SAAS,oBAAf;QACMra,OAAOoZ,SAAS/F,OAAT,CAAiBqC,MAAjB,CAAb;QACIrB,MAAM,EAAV;;;QAGIrU,KAAKsa,SAAL,CAAe,CAAf,EAAkBD,OAAO3Y,MAAzB,MAAqC2Y,MAAzC,EAAiD;UAC3C;cACIE,KAAKvb,KAAL,CAAWgB,KAAKsa,SAAL,CAAeD,OAAO3Y,MAAtB,CAAX,CAAN;OADF,CAEE,OAAOkZ,CAAP,EAAU;cACJ,IAAIxb,KAAJ,CACJ,wDADI,CAAN;;KAJJ,MAQO;;UAEDsW,MAAJ,IAAY1V,IAAZ;;;QAGE0a,IAAJ,IAAYnW,OAAZ;QACMtF,cAAYob,MAAZ,GAAqBE,KAAK9a,SAAL,CAAe4U,GAAf,CAA3B;aACSqD,OAAT,CAAiBhC,MAAjB,EAAuBzW,MAAvB;;;;ACxCJ;;;;;;AAMA,IAAMU,UAAQC,MAAM,aAAN,CAAd;;;;;;;;AAQA,SAASib,WAAT,GAAuB;MACjBC,uBAAuB,IAA3B;;;;;;;;;;WAUSC,aAAT,CAAuBtI,KAAvB,EAA8BK,MAA9B,EAAsCvS,MAAtC,EAA8C;YACtC,eAAN,EAAuB,EAAEkS,YAAF,EAAvB;;UAEMI,cAAN;WACOmI,UAAP,CAAkBvI,MAAMU,IAAxB;;;;;;;;;;;WAWOoB,MAAT,CAAgB9B,KAAhB,EAAuBK,MAAvB,EAA+BvS,MAA/B,EAAuC;YAC/B,QAAN,EAAgB,EAAEkS,YAAF,EAAhB;;WAEOf,IAAP;;;;;;;;;;;WAWOuJ,OAAT,CAAiBxI,KAAjB,EAAwBK,MAAxB,EAAgCvS,MAAhC,EAAwC;QAClCA,OAAOT,KAAP,CAAasE,QAAjB,EAA2B;aAClB,IAAP;;;QAGM3B,KAL8B,GAKpBqQ,MALoB,CAK9BrQ,KAL8B;QAM9BC,QAN8B,GAMjBD,KANiB,CAM9BC,QAN8B;;QAOhCxC,OAAO8X,SAASvF,MAAML,MAAf,EAAuB3P,KAAvB,CAAb;;QAEI,CAACvC,IAAL,EAAW;;;;QAILiB,SAASjB,KAAKiB,MAAL,IAAeuB,SAASwY,aAAT,CAAuBhb,KAAKZ,GAA5B,CAA9B;;QAEI6B,MAAJ,EAAY;;;;;aAKHyI,KAAP,GAAeuR,eAAf,CAA+Bjb,IAA/B;;;YAGI,SAAN,EAAiB,EAAEuS,YAAF,EAAjB;;;;;;;;;;;WAWOkC,MAAT,CAAgBlC,KAAhB,EAAuBK,MAAvB,EAA+BvS,MAA/B,EAAuC;YAC/B,QAAN,EAAgB,EAAEkS,YAAF,EAAhB;;kBAEcA,KAAd,EAAqBK,OAAOrQ,KAA5B;;;;;;;;;;;WAWOmS,KAAT,CAAenC,KAAf,EAAsBK,MAAtB,EAA8BvS,MAA9B,EAAsC;YAC9B,OAAN,EAAe,EAAEkS,YAAF,EAAf;;QAEQhQ,KAH4B,GAGlBqQ,MAHkB,CAG5BrQ,KAH4B;;kBAItBgQ,KAAd,EAAqBhQ,KAArB;;QAEIlC,OAAOT,KAAP,CAAasE,QAAjB,EAA2B;;;;;QAKrBkE,SAASuC,UAAU4H,MAAML,MAAhB,CAAf;;;;WAIO0F,qBAAP,CAA6B,YAAM;;;UAGzBsD,QAHyB,GAGY3Y,KAHZ,CAGzB2Y,QAHyB;UAGfC,SAHe,GAGY5Y,KAHZ,CAGf4Y,SAHe;UAGJ3R,WAHI,GAGYjH,KAHZ,CAGJiH,WAHI;;UAI3B4R,cAAcF,YAAYA,SAASja,MAArB,IAA+BuI,WAAnD;UACM6R,eAAeF,aAAaA,UAAUla,MAAvB,IAAiCuI,WAAtD;;UAEI4R,WAAJ,EAAiB;eACRxI,MAAP,CAAc;iBAAK0I,EAAEC,eAAF,CAAkBL,SAAS9b,GAA3B,CAAL;SAAd;OADF,MAEO,IAAIic,YAAJ,EAAkB;eAChBzI,MAAP,CAAc;iBAAK0I,EAAEC,eAAF,CAAkBJ,UAAU/b,GAA5B,CAAL;SAAd;OADK,MAEA;eACEwT,MAAP,CAAc;iBAAK0I,EAAEE,MAAF,EAAL;SAAd;;KAZJ;;;;;;;;;;;WAyBO7G,SAAT,CAAmBpC,KAAnB,EAA0BK,MAA1B,EAAkCvS,MAAlC,EAA0C;YAClC,WAAN,EAAmB,EAAEkS,YAAF,EAAnB;;2BAEuB,IAAvB;;;;;;;;;;;WAWOqC,UAAT,CAAoBrC,KAApB,EAA2BK,MAA3B,EAAmCvS,MAAnC,EAA2C;YACnC,YAAN,EAAoB,EAAEkS,YAAF,EAApB;;;;;;;;;;;WAWOsC,WAAT,CAAqBtC,KAArB,EAA4BK,MAA5B,EAAoCvS,MAApC,EAA4C;YACpC,aAAN,EAAqB,EAAEkS,YAAF,EAArB;;2BAEuB,IAAvB;;QAEQhQ,KALkC,GAKxBqQ,MALwB,CAKlCrQ,KALkC;QAMlCC,QANkC,GAMrBD,KANqB,CAMlCC,QANkC;;QAOpCxC,OAAO8X,SAASvF,MAAML,MAAf,EAAuB3P,KAAvB,CAAb;QACMtB,SAASjB,SAASA,KAAKiB,MAAL,IAAeuB,SAASwY,aAAT,CAAuBhb,KAAKZ,GAA5B,CAAxB,CAAf;;QAEI6B,MAAJ,EAAY;UACJ6U,UAAUC,OAAOC,aAAP,CAAqBhW,IAArB,EAA2B,EAAEyb,cAAc,IAAhB,EAA3B,CAAhB;uBACiBlJ,KAAjB,EAAwB,MAAxB,EAAgCuD,OAAhC;KAFF,MAGO;UACGJ,QADH,GACgBnT,KADhB,CACGmT,QADH;;UAECI,WAAUC,OAAOC,aAAP,CAAqBN,QAArB,CAAhB;uBACiBnD,KAAjB,EAAwB,UAAxB,EAAoCuD,QAApC;;;;;;;;;;;;WAYKhB,MAAT,CAAgBvC,KAAhB,EAAuBK,MAAvB,EAA+BvS,MAA/B,EAAuC;YAC/B,QAAN,EAAgB,EAAEkS,YAAF,EAAhB;;QAEQhQ,KAH6B,GAGnBqQ,MAHmB,CAG7BrQ,KAH6B;QAI7BC,QAJ6B,GAILD,KAJK,CAI7BC,QAJ6B;QAInByE,SAJmB,GAIL1E,KAJK,CAInB0E,SAJmB;;QAK/BmB,SAASuC,UAAU4H,MAAML,MAAhB,CAAf;QACIA,SAAS8F,cAAczF,KAAd,EAAqBhQ,KAArB,CAAb;QACI,CAAC2P,MAAL,EAAa;;QAEPgH,WAAWD,iBAAiB1G,KAAjB,CAAjB;QACQ/N,IAV6B,GAUE0U,QAVF,CAU7B1U,IAV6B;QAUvBkR,QAVuB,GAUEwD,QAVF,CAUvBxD,QAVuB;QAUb1V,IAVa,GAUEkZ,QAVF,CAUblZ,IAVa;QAUPF,IAVO,GAUEoZ,QAVF,CAUPpZ,IAVO;;;WAY9B4J,KAAP;;;;QAKEkR,wBACA3T,UAAUpE,MAAV,IAAoBqP,OAAOrP,MAD3B,IAEAoE,UAAUiF,SAAV,GAAsBgG,OAAOhG,SAH/B,EAIE;eACSgG,OAAOwJ,IAAP,CACPzU,UAAUtE,QAAV,IAAsBsE,UAAUpE,MAAhC,GACI,IAAIoE,UAAUiF,SAAd,GAA0BjF,UAAU+E,WADxC,GAEI,IAAI/E,UAAUiF,SAHX,CAAT;;;QAOE0O,oBAAJ,EAA0B;aACjBY,MAAP;;;WAGKhL,MAAP,CAAc0B,MAAd;;QAEI1N,QAAQ,MAAR,IAAkBA,QAAQ,MAA9B,EAAsC;oBACd0N,MADc;UAC5B/I,SAD4B,WAC5BA,SAD4B;;UAEhC6R,gBAAgBxY,SAASwY,aAAT,CAAuB7R,SAAvB,CAApB;;UAEI6R,aAAJ,EAAmB;YACbtX,IAAIlB,SAASuV,OAAT,CAAiB5O,SAAjB,CAAR;;eAEO6R,aAAP,EAAsB;cAChBxY,SAASgW,WAAT,CAAqB9U,EAAEtE,GAAvB,CAAJ;cACI,CAACsE,CAAL,EAAQ;0BACQlB,SAASwY,aAAT,CAAuBtX,EAAEtE,GAAzB,CAAhB;;;YAGEsE,CAAJ,EAAOkP,OAAO+I,iBAAP,CAAyBjY,CAAzB;;;UAGL5D,IAAJ,EAAU;aACH8b,KAAL,CAAW,IAAX,EAAiB5W,OAAjB,CAAyB,UAAC6W,IAAD,EAAO1Y,CAAP,EAAa;cAChCA,IAAI,CAAR,EAAWyP,OAAOkJ,UAAP;iBACJhB,UAAP,CAAkBe,IAAlB;SAFF;;;;QAOArX,QAAQ,UAAZ,EAAwB;aACfuX,cAAP,CAAsBrG,QAAtB;;;QAGElR,QAAQ,MAAR,IAAkBwX,YAAMC,OAAN,CAAcjc,IAAd,CAAtB,EAA2C;aAClCkc,WAAP,CAAmBlc,KAAKmc,aAAL,EAAnB,EAAyCZ,eAAzC,CAAyDvb,KAAKZ,GAA9D;;;QAGEoF,QAAQ,MAAR,IAAkB4X,aAAOC,QAAP,CAAgBrc,IAAhB,CAAtB,EAA6C;aACpCsc,YAAP,CAAoBtc,KAAKmc,aAAL,EAApB,EAA0CZ,eAA1C,CAA0Dvb,KAAKZ,GAA/D;;;;;;;QAOI+M,YAAY3J,SAASuV,OAAT,CAAiB7F,OAAO7I,QAAxB,CAAlB;QACMf,KAAKJ,YAAYiE,SAAZ,EAAuB/D,MAAvB,CAAX;QACI,CAACE,EAAL,EAAS;;OAENiU,aAAH,CACE,IAAIC,UAAJ,CAAe,SAAf,EAA0B;YAClBpU,MADkB;eAEf,IAFe;kBAGZ;KAHd,CADF;;;;;;;;;;WAgBO2M,OAAT,CAAiBxC,KAAjB,EAAwBK,MAAxB,EAAgCvS,MAAhC,EAAwC;YAChC,SAAN,EAAiB,EAAEkS,YAAF,EAAjB;;QAEMnK,SAASuC,UAAU4H,MAAML,MAAhB,CAAf;QACQ3P,KAJ8B,GAIpBqQ,MAJoB,CAI9BrQ,KAJ8B;;;;QAOhCoJ,SAASvD,OAAOgJ,YAAP,EAAf;QACQxF,UAR8B,GAQfD,MARe,CAQ9BC,UAR8B;;QAShC6Q,QAAQpS,UAAUuB,UAAV,EAAsB,CAAtB,EAAyBrJ,KAAzB,CAAd;QACI,CAACka,KAAL,EAAY;;;QAGJja,QAb8B,GAaND,KAbM,CAa9BC,QAb8B;QAapByE,SAboB,GAaN1E,KAbM,CAapB0E,SAboB;;QAchCjH,OAAOwC,SAASka,aAAT,CAAuBD,MAAMrd,GAA7B,CAAb;QACM2B,QAAQyB,SAASma,eAAT,CAAyB3c,KAAKZ,GAA9B,CAAd;QACM4B,SAAShB,KAAKiD,SAAL,EAAf;QACM7B,WAAWL,MAAMM,WAAN,EAAjB;QACMub,WAAW5b,OAAO8C,IAAP,EAAjB;QACIyD,QAAQ,CAAZ;QACIC,MAAM,CAAV;;QAEMjH,OACJS,OAAOF,IAAP,CAAY,aAAK;cACP0G,GAAR;aACOmC,EAAE7J,IAAF,CAAO0B,MAAd;UACIgG,MAAMiV,MAAMrc,MAAhB,EAAwB,OAAO,IAAP;KAH1B,KAIMwc,QALR;;;QAQQ9c,IA9B8B,GA8BrBS,IA9BqB,CA8B9BT,IA9B8B;QA+BhCiJ,WA/BgC,GA+BhB6C,UA/BgB,CA+BhC7C,WA/BgC;;QAgChCtH,aAAazB,QAAQoB,QAA3B;QACMM,aAAanB,QAAQqc,QAA3B;QACMtb,WAAWyH,YAAYxH,MAAZ,CAAmBwH,YAAYvH,MAAZ,GAAqB,CAAxC,CAAjB;;;;;QAKIC,cAAcC,UAAd,IAA4BJ,YAAY,IAA5C,EAAkD;oBAClCyH,YAAYwN,KAAZ,CAAkB,CAAlB,EAAqB,CAAC,CAAtB,CAAd;;;;QAIExN,eAAejJ,IAAnB,EAAyB;;;QAGnB+c,QAAQ9T,YAAYvH,MAAZ,GAAqB1B,KAAK0B,MAAxC;QACMsb,YAAY7V,UAAU8V,aAAV,GAA0BrB,IAA1B,CAA+BmB,KAA/B,CAAlB;QACMG,SAAS/V,UACZgW,YADY,CACCR,MAAMrd,GADP,EACYmI,KADZ,EAEZ2V,WAFY,CAEAT,MAAMrd,GAFN,EAEWoI,GAFX,CAAf;;;WAKO4L,iBAAP,CAAyB4J,MAAzB,EAAiCjU,WAAjC,EAA8CxI,KAAKV,KAAnD,EAA0D2Q,MAA1D,CAAiEsM,SAAjE;;;;;;;;;;;WAWO9H,SAAT,CAAmBzC,KAAnB,EAA0BK,MAA1B,EAAkCvS,MAAlC,EAA0C;YAClC,WAAN,EAAmB,EAAEkS,YAAF,EAAnB;;QAEQhQ,KAHgC,GAGtBqQ,MAHsB,CAGhCrQ,KAHgC;;;;;;QAQpC4a,QAAQC,YAAR,CAAqB7K,KAArB,KAA+B,CAAC5F,0BAApC,EAA4C;aACnCpK,MAAMuQ,QAAN,GACHF,OAAOG,yBAAP,EADG,GAEHH,OAAOkJ,UAAP,EAFJ;;;QAKEqB,QAAQE,oBAAR,CAA6B9K,KAA7B,KAAuC,CAAC5F,0BAA5C,EAAoD;aAC3CiG,OAAO0K,kBAAP,EAAP;;;QAGEH,QAAQI,mBAAR,CAA4BhL,KAA5B,KAAsC,CAAC5F,0BAA3C,EAAmD;aAC1CiG,OAAO4K,iBAAP,EAAP;;;QAGEL,QAAQM,oBAAR,CAA6BlL,KAA7B,CAAJ,EAAyC;aAChCK,OAAO8K,kBAAP,EAAP;;;QAGEP,QAAQQ,mBAAR,CAA4BpL,KAA5B,CAAJ,EAAwC;aAC/BK,OAAOgL,iBAAP,EAAP;;;QAGET,QAAQU,oBAAR,CAA6BtL,KAA7B,CAAJ,EAAyC;aAChCK,OAAOkL,kBAAP,EAAP;;;QAGEX,QAAQY,mBAAR,CAA4BxL,KAA5B,CAAJ,EAAwC;aAC/BK,OAAOoL,iBAAP,EAAP;;;QAGEb,QAAQc,MAAR,CAAe1L,KAAf,CAAJ,EAA2B;aAClBK,OAAOsL,IAAP,EAAP;;;QAGEf,QAAQgB,MAAR,CAAe5L,KAAf,CAAJ,EAA2B;aAClBK,OAAOwL,IAAP,EAAP;;;;;;QAMEjB,QAAQkB,sBAAR,CAA+B9L,KAA/B,CAAJ,EAA2C;YACnCI,cAAN;aACOC,OAAO0L,oBAAP,EAAP;;;QAGEnB,QAAQoB,qBAAR,CAA8BhM,KAA9B,CAAJ,EAA0C;YAClCI,cAAN;aACOC,OAAO4L,mBAAP,EAAP;;;QAGErB,QAAQsB,oBAAR,CAA6BlM,KAA7B,CAAJ,EAAyC;YACjCI,cAAN;aACOC,OAAO8L,kBAAP,EAAP;;;QAGEvB,QAAQwB,mBAAR,CAA4BpM,KAA5B,CAAJ,EAAwC;YAChCI,cAAN;aACOC,OAAOgM,iBAAP,EAAP;;;;;;QAMEzB,QAAQ0B,sBAAR,CAA+BtM,KAA/B,CAAJ,EAA2C;UACjC/P,QADiC,GACeD,KADf,CACjCC,QADiC;UACvBsQ,QADuB,GACevQ,KADf,CACvBuQ,QADuB;UACbsF,YADa,GACe7V,KADf,CACb6V,YADa;UACC0G,SADD,GACevc,KADf,CACCuc,SADD;;UAEnCC,mBACJ3G,gBAAgB5V,SAASwY,aAAT,CAAuB5C,aAAahZ,GAApC,CADlB;;UAGI0T,YAAYiM,gBAAZ,IAAgCD,UAAUhf,IAAV,IAAkB,EAAtD,EAA0D;cAClD6S,cAAN;eACOC,OAAOoM,oBAAP,EAAP;;;;QAIA7B,QAAQ8B,qBAAR,CAA8B1M,KAA9B,CAAJ,EAA0C;UAChC/P,SADgC,GACYD,KADZ,CAChCC,QADgC;UACtBsQ,SADsB,GACYvQ,KADZ,CACtBuQ,QADsB;UACZyF,QADY,GACYhW,KADZ,CACZgW,QADY;UACFuG,UADE,GACYvc,KADZ,CACFuc,SADE;;UAElCI,eAAe3G,YAAY/V,UAASwY,aAAT,CAAuBzC,SAASnZ,GAAhC,CAAjC;;UAEI0T,aAAYoM,YAAZ,IAA4BJ,WAAUhf,IAAV,IAAkB,EAAlD,EAAsD;cAC9C6S,cAAN;eACOC,OAAOuM,mBAAP,EAAP;;;;QAIAhC,QAAQiC,oBAAR,CAA6B7M,KAA7B,CAAJ,EAAyC;UAC/B/P,UAD+B,GACiBD,KADjB,CAC/BC,QAD+B;UACrBsQ,UADqB,GACiBvQ,KADjB,CACrBuQ,QADqB;UACXsF,aADW,GACiB7V,KADjB,CACX6V,YADW;UACG0G,WADH,GACiBvc,KADjB,CACGuc,SADH;;UAEjCC,oBACJ3G,iBAAgB5V,WAASwY,aAAT,CAAuB5C,cAAahZ,GAApC,CADlB;;UAGI0T,cAAYiM,iBAAZ,IAAgCD,YAAUhf,IAAV,IAAkB,EAAtD,EAA0D;cAClD6S,cAAN;eACOC,OAAOyM,kBAAP,EAAP;;;;QAIAlC,QAAQmC,mBAAR,CAA4B/M,KAA5B,CAAJ,EAAwC;UAC9B/P,UAD8B,GACcD,KADd,CAC9BC,QAD8B;UACpBsQ,UADoB,GACcvQ,KADd,CACpBuQ,QADoB;UACVyF,SADU,GACchW,KADd,CACVgW,QADU;UACAuG,WADA,GACcvc,KADd,CACAuc,SADA;;UAEhCI,gBAAe3G,aAAY/V,WAASwY,aAAT,CAAuBzC,UAASnZ,GAAhC,CAAjC;;UAEI0T,cAAYoM,aAAZ,IAA4BJ,YAAUhf,IAAV,IAAkB,EAAlD,EAAsD;cAC9C6S,cAAN;eACOC,OAAO2M,iBAAP,EAAP;;;;;;;;;;;;;WAaGrK,OAAT,CAAiB3C,KAAjB,EAAwBK,MAAxB,EAAgCvS,MAAhC,EAAwC;YAChC,SAAN,EAAiB,EAAEkS,YAAF,EAAjB;;QAEM2G,WAAWD,iBAAiB1G,KAAjB,CAAjB;QACQ/N,IAJ8B,GAIL0U,QAJK,CAI9B1U,IAJ8B;QAIxBkR,QAJwB,GAILwD,QAJK,CAIxBxD,QAJwB;QAId5V,IAJc,GAILoZ,QAJK,CAIdpZ,IAJc;;;QAMlC0E,QAAQ,UAAZ,EAAwB;aACfuX,cAAP,CAAsBrG,QAAtB;;;QAGElR,QAAQ,MAAR,IAAkBA,QAAQ,MAA9B,EAAsC;UAChC,CAAC1E,IAAL,EAAW;UACHyC,KAF4B,GAElBqQ,MAFkB,CAE5BrQ,KAF4B;UAG5BC,QAH4B,GAGQD,KAHR,CAG5BC,QAH4B;UAGlByE,SAHkB,GAGQ1E,KAHR,CAGlB0E,SAHkB;UAGPuY,UAHO,GAGQjd,KAHR,CAGPid,UAHO;;UAIhCA,WAAWve,MAAf,EAAuB;;UAEjBwe,eAAeD,UAArB;UACME,eAAeld,SAASmd,qBAAT,CAA+B1Y,SAA/B,CAArB;UACM2Y,OAAOxI,MAAMyI,WAAN,CAAkB/f,IAAlB,EAAwB,EAAE2f,0BAAF,EAAgBC,0BAAhB,EAAxB,EACVld,QADH;aAEOuZ,cAAP,CAAsB6D,IAAtB;;;;;;;;;;;;WAYKrM,QAAT,CAAkBhB,KAAlB,EAAyBK,MAAzB,EAAiCvS,MAAjC,EAAyC;YACjC,UAAN,EAAkB,EAAEkS,YAAF,EAAlB;;QAEMnK,SAASuC,UAAU4H,MAAML,MAAhB,CAAf;QACQ3P,KAJ+B,GAIrBqQ,MAJqB,CAI/BrQ,KAJ+B;QAK/BC,QAL+B,GAKlBD,KALkB,CAK/BC,QAL+B;;QAMjCmJ,SAASvD,OAAOgJ,YAAP,EAAf;;;QAGI,CAACzF,OAAO0F,UAAZ,EAAwB;aACfG,IAAP;;;;;QAKEtI,QAAQwC,UAAUC,MAAV,EAAkBpJ,KAAlB,CAAZ;QACI,CAAC2G,KAAL,EAAY;;iBAE+CA,KAlBpB;QAkB/BC,SAlB+B,UAkB/BA,SAlB+B;QAkBpBC,YAlBoB,UAkBpBA,YAlBoB;QAkBNC,QAlBM,UAkBNA,QAlBM;QAkBIC,WAlBJ,UAkBIA,WAlBJ;;QAmBjCwW,aAAatd,SAASuV,OAAT,CAAiB5O,SAAjB,CAAnB;QACM4W,YAAYvd,SAASuV,OAAT,CAAiB1O,QAAjB,CAAlB;QACM2W,eAAexd,SAASyd,gBAAT,CAA0B9W,SAA1B,CAArB;QACM+W,cAAc1d,SAASyd,gBAAT,CAA0B5W,QAA1B,CAApB;QACM8W,aAAa3d,SAASma,eAAT,CAAyBtT,QAAzB,CAAnB;QACM+W,cAAc5d,SAASma,eAAT,CAAyBxT,SAAzB,CAApB;;;;;;;;;QAUEiX,eACA,CAACA,YAAYnf,MADb,IAEAmI,gBAAgB,CAFhB,IAGA+W,UAHA,IAIAA,WAAWlf,MAJX,IAKAqI,eAAe,CANjB,EAOE;cACQJ,MAAMmX,GAAN,CAAU,aAAV,EAAyB,CAAzB,CAAR;;;;;;QAOAL,gBACA,CAACA,aAAa/e,MADd,IAEAmI,gBAAgB0W,WAAWhgB,IAAX,CAAgB0B,MAHlC,EAIE;UACMT,QAAQyB,SAASma,eAAT,CAAyBxT,SAAzB,CAAd;UACMmX,OAAOvf,MAAMyX,WAAN,CAAkBrP,SAAlB,CAAb;UACImX,IAAJ,EAAUpX,QAAQA,MAAM+T,YAAN,CAAmBqD,KAAKlhB,GAAxB,EAA6B,CAA7B,CAAR;;;QAIV8gB,eACA,CAACA,YAAYjf,MADb,IAEAqI,eAAeyW,UAAUjgB,IAAV,CAAe0B,MAHhC,EAIE;UACMT,SAAQyB,SAASma,eAAT,CAAyBtT,QAAzB,CAAd;UACMiX,QAAOvf,OAAMyX,WAAN,CAAkBnP,QAAlB,CAAb;UACIiX,KAAJ,EAAUpX,QAAQA,MAAMgU,WAAN,CAAkBoD,MAAKlhB,GAAvB,EAA4B,CAA5B,CAAR;;;YAGJ8J,MAAMqX,SAAN,CAAgB/d,QAAhB,CAAR;;;;YAIQ0G,MAAMmX,GAAN,CAAU,OAAV,EAAmB9d,MAAM0E,SAAN,CAAgBpH,KAAnC,CAAR;;WAEO2Q,MAAP,CAActH,KAAd;;;;;;;;;;;WAWOsX,YAAT,CAAsB5gB,KAAtB,EAA6BS,MAA7B,EAAqC;QAC7B6T,WAAWvV,eAAe+B,MAAf,CAAsB,UAACyT,GAAD,EAAMX,OAAN,EAAkB;UACnDA,OAAJ,IAAenT,OAAOmT,OAAP,CAAf;aACOW,GAAP;KAFe,EAGd,EAHc,CAAjB;;WAME,oBAAC,OAAD,eACMD,QADN;mBAEetU,MAAMuV,WAFrB;iBAGavV,MAAMgU,SAHnB;gBAIYhU,MAAMe,QAJlB;cAKUN,MALV;gBAMYT,MAAMsE,QANlB;YAOQtE,MAAMkU,IAPd;kBAQclU,MAAMoU,UARpB;aASSpU,MAAM0C,KATf;gBAUY1C,MAAMiU,QAVlB;eAWWjU,MAAMmU;OAZnB;;;;;;;;;;WAwBOtM,UAAT,CAAoB7H,KAApB,EAA2B;QACjBa,UADiB,GACcb,KADd,CACjBa,UADiB;QACLE,QADK,GACcf,KADd,CACLe,QADK;QACKX,IADL,GACcJ,KADd,CACKI,IADL;;QAErBA,KAAKR,MAAL,IAAe,OAAf,IAA0BQ,KAAKR,MAAL,IAAe,QAA7C,EAAuD;QACjD2E,MAAMnE,KAAKR,MAAL,IAAe,OAAf,GAAyB,KAAzB,GAAiC,MAA7C;QACM8C,QAAQ,EAAEoV,UAAU,UAAZ,EAAd;WAEE;SAAA;mBAASjX,UAAT,IAAqB,OAAO6B,KAA5B;;KADF;;;;;;;;;;WAcOme,iBAAT,CAA2B7gB,KAA3B,EAAkC;QACxBS,MADwB,GACPT,KADO,CACxBS,MADwB;QAChBL,IADgB,GACPJ,KADO,CAChBI,IADgB;;QAE5B,CAACK,OAAOT,KAAP,CAAakI,WAAlB,EAA+B;QAC3BzH,OAAOqgB,KAAP,CAAaC,WAAjB,EAA8B;QAC1B3gB,KAAKR,MAAL,IAAe,OAAnB,EAA4B;QACxB,CAAC4C,WAAKwe,UAAL,CAAgB5gB,KAAKkB,KAArB,CAAL,EAAkC;QAC9BlB,KAAKF,IAAL,IAAa,EAAjB,EAAqB;QACjBO,OAAOkC,KAAP,CAAaC,QAAb,CAAsBqe,SAAtB,GAAkC1f,IAAlC,GAAyC,CAA7C,EAAgD;;QAE1CmB,QAAQ;qBACG,MADH;eAEH,cAFG;aAGL,GAHK;gBAIF,MAJE;kBAKA,QALA;eAMH;KANX;;WAUE;;QAAM,iBAAiB,KAAvB,EAA8B,OAAOA,KAArC;aACU1C,KAAP,CAAakI;KAFlB;;;;;;;;;SAaK;gCAAA;kBAAA;oBAAA;kBAAA;gBAAA;wBAAA;0BAAA;4BAAA;kBAAA;oBAAA;wBAAA;oBAAA;sBAAA;8BAAA;0BAAA;;GAAP;;;ACvqBF;;;;;;AAMA,IAAMrI,UAAQC,MAAM,cAAN,CAAd;;;;;;;;;;;;;;AAcA,SAASohB,oBAAT,CAA8BvO,KAA9B,EAAqCK,MAArC,EAA6CvS,MAA7C,EAAqD;MAC3C6D,QAD2C,GAC9B7D,OAAOT,KADuB,CAC3CsE,QAD2C;MAE3C3B,KAF2C,GAEjCqQ,MAFiC,CAE3CrQ,KAF2C;;;MAI/C,CAAC2B,QAAL,EAAe;WACN,IAAP;;;;MAIIkE,SAASuC,UAAU4H,MAAML,MAAhB,CAAf;MACMvG,SAASvD,OAAOgJ,YAAP,EAAf;MACMlI,QAAQwC,UAAUC,MAAV,EAAkBpJ,KAAlB,CAAd;;MAEI,CAAC2G,KAAL,EAAY;;WAEH,KAAP;;;;SAIKsH,MAAP,CAActH,KAAd;SACO,IAAP;;;;;;;;;AASF,SAAS6X,YAAT,GAAwB;MAClBzN,gBAAgB,IAApB;MACI0N,mBAAmB,CAAvB;MACIL,cAAc,KAAlB;MACIM,YAAY,KAAhB;MACIC,aAAa,KAAjB;;;;;;;;;;WAUSrG,aAAT,CAAuBtI,KAAvB,EAA8BK,MAA9B,EAAsCvS,MAAtC,EAA8C;QACxCA,OAAOT,KAAP,CAAasE,QAAjB,EAA2B,OAAO,IAAP;;;;;;;;;;QAUvB,CAACyI,8BAAUmE,8BAAX,KAA0BC,qCAAiBC,WAA/C,EAA4D,OAAO,IAAP;;YAEtD,eAAN,EAAuB,EAAEuB,YAAF,EAAvB;;;;;;;;;;;WAWO8B,MAAT,CAAgB9B,KAAhB,EAAuBK,MAAvB,EAA+BvS,MAA/B,EAAuC;QACjC4gB,SAAJ,EAAe,OAAO,IAAP;QACX5gB,OAAOT,KAAP,CAAasE,QAAjB,EAA2B,OAAO,IAAP;;QAEnB3B,KAJ6B,GAInBqQ,MAJmB,CAI7BrQ,KAJ6B;QAK7B4e,aAL6B,GAKH5O,KALG,CAK7B4O,aAL6B;QAKdjP,MALc,GAKHK,KALG,CAKdL,MALc;;QAM/B9J,SAASuC,UAAUuH,MAAV,CAAf;;;;;;QAMIoB,iBAAiBlL,OAAO5F,QAAP,CAAgB8Q,aAArC,EAAoD,OAAO,IAAP;;;;QAIhD6N,aAAJ,EAAmB;UACX7Y,KAAKJ,qBAAY7H,MAAZ,CAAX;;;;;UAKI8gB,iBAAiB7Y,EAArB,EAAyB,OAAO,IAAP;;;;UAIrB6Y,cAAcjW,YAAd,CAA2B,mBAA3B,CAAJ,EAAqD,OAAO,IAAP;;;;;UAK/ClL,OAAO8X,SAASqJ,aAAT,EAAwB5e,KAAxB,CAAb;UACI+F,GAAG8Y,QAAH,CAAYD,aAAZ,KAA8BnhB,IAA9B,IAAsC,CAACA,KAAKiB,MAAhD,EAAwD,OAAO,IAAP;;;YAGpD,QAAN,EAAgB,EAAEsR,YAAF,EAAhB;;;;;;;;;;WAUO8O,QAAT,CAAkBzO,MAAlB,EAA0BvS,MAA1B,EAAkC;QACxBkC,KADwB,GACdqQ,MADc,CACxBrQ,KADwB;;;;;;QAM5BA,MAAM+e,MAAN,IAAgBjhB,OAAOihB,MAA3B,EAAmC;aAC1BC,QAAP,CAAgB,EAAED,QAAQjhB,OAAOihB,MAAjB,EAAhB,EAA2C,EAAEE,MAAM,KAAR,EAA3C,EAA4DjB,SAA5D;;;YAGI,UAAN;;;;;;;;;;;WAWOhM,gBAAT,CAA0BhC,KAA1B,EAAiCK,MAAjC,EAAyCvS,MAAzC,EAAiD;QACzCqD,IAAIsd,gBAAV;;;;;WAKOpJ,qBAAP,CAA6B,YAAM;UAC7BoJ,mBAAmBtd,CAAvB,EAA0B;oBACZ,KAAd;;;;;;UAMIrD,OAAOqgB,KAAP,CAAaC,WAAjB,EAA8B;eACrBc,QAAP,CAAgB,EAAEd,aAAa,KAAf,EAAhB;;KATJ;;YAaM,kBAAN,EAA0B,EAAEpO,YAAF,EAA1B;;;;;;;;;;;WAWOiC,kBAAT,CAA4BjC,KAA5B,EAAmCK,MAAnC,EAA2CvS,MAA3C,EAAmD;kBACnC,IAAd;;;;;;;QAOI,CAACA,OAAOqgB,KAAP,CAAaC,WAAlB,EAA+B;aACtBc,QAAP,CAAgB,EAAEd,aAAa,IAAf,EAAhB;;;YAGI,oBAAN,EAA4B,EAAEpO,YAAF,EAA5B;;;;;;;;;;;WAWOkC,MAAT,CAAgBlC,KAAhB,EAAuBK,MAAvB,EAA+BvS,MAA/B,EAAuC;QAC/B+H,SAASuC,UAAU4H,MAAML,MAAhB,CAAf;;QAEMwP,eAAeZ,qBAAqBvO,KAArB,EAA4BK,MAA5B,EAAoCvS,MAApC,CAArB;;QAEI,CAACqhB,YAAL,EAAmB;;;aAGV,IAAP;;;gBAGU,IAAZ;WACO9J,qBAAP,CAA6B;aAAOqJ,YAAY,KAAnB;KAA7B;;YAEM,QAAN,EAAgB,EAAE1O,YAAF,EAAhB;;;;;;;;;;;WAWOmC,KAAT,CAAenC,KAAf,EAAsBK,MAAtB,EAA8BvS,MAA9B,EAAsC;QAC9B+H,SAASuC,UAAU4H,MAAML,MAAhB,CAAf;gBACY,IAAZ;WACO0F,qBAAP,CAA6B;aAAOqJ,YAAY,KAAnB;KAA7B;;YAEM,OAAN,EAAe,EAAE1O,YAAF,EAAf;;;;;;;;;;;WAWOoC,SAAT,CAAmBpC,KAAnB,EAA0BK,MAA1B,EAAkCvS,MAAlC,EAA0C;iBAC3B,KAAb;;YAEM,WAAN,EAAmB,EAAEkS,YAAF,EAAnB;;;;;;;;;;;WAWOoP,WAAT,CAAqBpP,KAArB,EAA4BK,MAA5B,EAAoCvS,MAApC,EAA4C;YACpC,aAAN,EAAqB,EAAEkS,YAAF,EAArB;;;;;;;;;;;WAWOqP,UAAT,CAAoBrP,KAApB,EAA2BK,MAA3B,EAAmCvS,MAAnC,EAA2C;YACnC,YAAN,EAAoB,EAAEkS,YAAF,EAApB;;;;;;;;;;;WAWOsP,WAAT,CAAqBtP,KAArB,EAA4BK,MAA5B,EAAoCvS,MAApC,EAA4C;YACpC,aAAN,EAAqB,EAAEkS,YAAF,EAArB;;;;;;;;;;;WAWOqC,UAAT,CAAoBrC,KAApB,EAA2BK,MAA3B,EAAmCvS,MAAnC,EAA2C;;;;;QAKnCL,OAAO8X,SAASvF,MAAML,MAAf,EAAuB7R,OAAOkC,KAA9B,CAAb;QACIvC,KAAKiB,MAAT,EAAiBsR,MAAMI,cAAN;;;;;;QAMbvG,yBAAJ,EAAWmG,MAAMI,cAAN;;;QAGP,CAACuO,UAAL,EAAiB;mBACF,IAAb;;;;UAII,CAAC9U,yBAAL,EAAY;cACJ6L,WAAN,CAAkB/E,YAAlB,CAA+B4O,UAA/B,GAA4C,MAA5C;;;;YAIE,YAAN,EAAoB,EAAEvP,YAAF,EAApB;;;;;;;;;;;WAWOsC,WAAT,CAAqBtC,KAArB,EAA4BK,MAA5B,EAAoCvS,MAApC,EAA4C;iBAC7B,IAAb;;YAEM,aAAN,EAAqB,EAAEkS,YAAF,EAArB;;;;;;;;;;;WAWOuC,MAAT,CAAgBvC,KAAhB,EAAuBK,MAAvB,EAA+BvS,MAA/B,EAAuC;;QAEjCA,OAAOT,KAAP,CAAasE,QAAjB,EAA2B,OAAO,IAAP;;;UAGrByO,cAAN;;YAEM,QAAN,EAAgB,EAAEJ,YAAF,EAAhB;;;;;;;;;;;WAWO+B,OAAT,CAAiB/B,KAAjB,EAAwBK,MAAxB,EAAgCvS,MAAhC,EAAwC;QAClC4gB,SAAJ,EAAe,OAAO,IAAP;QACX5gB,OAAOT,KAAP,CAAasE,QAAjB,EAA2B,OAAO,IAAP;;QAErBoE,KAAKJ,qBAAY7H,MAAZ,CAAX;;;QAGM+H,SAASuC,UAAU4H,MAAML,MAAhB,CAAf;oBACgB9J,OAAO5F,QAAP,CAAgB8Q,aAAhC;;;;;QAKItB,kCAAcO,MAAML,MAAN,IAAgB5J,EAAlC,EAAsC;SACjCoB,KAAH;aACO,IAAP;;;YAGI,SAAN,EAAiB,EAAE6I,YAAF,EAAjB;;;;;;;;;;;WAWOwC,OAAT,CAAiBxC,KAAjB,EAAwBK,MAAxB,EAAgCvS,MAAhC,EAAwC;QAClCsgB,WAAJ,EAAiB,OAAO,IAAP;QACb/N,OAAOrQ,KAAP,CAAa+O,SAAjB,EAA4B,OAAO,IAAP;;YAEtB,SAAN,EAAiB,EAAEiB,YAAF,EAAjB;;;;;;;;;;;WAWOyC,SAAT,CAAmBzC,KAAnB,EAA0BK,MAA1B,EAAkCvS,MAAlC,EAA0C;QACpCA,OAAOT,KAAP,CAAasE,QAAjB,EAA2B,OAAO,IAAP;;;;;QAKvByc,WAAJ,EAAiB;UACXxD,QAAQwD,WAAR,CAAoBpO,KAApB,CAAJ,EAAgCA,MAAMI,cAAN;aACzB,IAAP;;;;;QAKEwK,QAAQ7K,iBAAR,CAA0BC,KAA1B,KAAoC,CAAC5F,0BAAzC,EAAiD;YACzCgG,cAAN;;;YAGI,WAAN,EAAmB,EAAEJ,YAAF,EAAnB;;;;;;;;;;;WAWO2C,OAAT,CAAiB3C,KAAjB,EAAwBK,MAAxB,EAAgCvS,MAAhC,EAAwC;QAClCA,OAAOT,KAAP,CAAasE,QAAjB,EAA2B,OAAO,IAAP;;;UAGrByO,cAAN;;YAEM,SAAN,EAAiB,EAAEJ,YAAF,EAAjB;;;;;;;;;;;WAWOgB,QAAT,CAAkBhB,KAAlB,EAAyBK,MAAzB,EAAiCvS,MAAjC,EAAyC;QACnC4gB,SAAJ,EAAe,OAAO,IAAP;QACXN,WAAJ,EAAiB,OAAO,IAAP;QACbtgB,OAAOT,KAAP,CAAasE,QAAjB,EAA2B,OAAO,IAAP;;;QAGrBkE,SAASuC,UAAU4H,MAAML,MAAhB,CAAf;oBACgB9J,OAAO5F,QAAP,CAAgB8Q,aAAhC;;YAEM,UAAN,EAAkB,EAAEf,YAAF,EAAlB;;;;;;;;;SASK;gCAAA;kBAAA;sBAAA;sCAAA;0CAAA;kBAAA;gBAAA;wBAAA;4BAAA;0BAAA;4BAAA;0BAAA;4BAAA;kBAAA;oBAAA;oBAAA;wBAAA;oBAAA;;GAAP;;;ACxeF;;;;;;AAMA,SAASwP,IAAT,GAAgB;;ACQhB;;;;;;AAMA,IAAMtiB,UAAQC,MAAM,cAAN,CAAd;;;;;;;;IAQMsiB;;;;;;;;;;;;;;;kBA6CQpiB,KAAZ,EAAmB;;;+GACXA,KADW;;;;UAEZ8gB,KAAL,GAAa,EAAb;UACK9O,GAAL,GAAW,EAAX;UACKA,GAAL,CAASqQ,OAAT,GAAmB,CAAnB;UACKrQ,GAAL,CAASsQ,QAAT,GAAoB,CAApB;;;QAGMC,UAAU,MAAKC,cAAL,CAAoBxiB,MAAMuiB,OAA1B,EAAmCviB,MAAM0hB,MAAzC,CAAhB;QACMhhB,QAAQ+hB,YAAM7V,MAAN,CAAa,EAAE2V,gBAAF,EAAb,CAAd;QACMb,SAASgB,aAAO9V,MAAP,CAAc,EAAE2V,gBAAF,EAAd,CAAf;UACKzB,KAAL,CAAWY,MAAX,GAAoBA,MAApB;UACKZ,KAAL,CAAWpgB,KAAX,GAAmBA,KAAnB;;;;QAIMsS,SAAShT,MAAM2C,KAAN,CAAYqQ,MAAZ,EAAf;UACM2P,GAAN,CAAU,UAAV,EAAsB3P,MAAtB;UACK4P,WAAL,CAAiB5P,MAAjB;UACK8N,KAAL,CAAWne,KAAX,GAAmBqQ,OAAOrQ,KAA1B;;;mBAGeyC,OAAf,CAAuB,mBAAW;YAC3BwO,OAAL,IAAgB,YAAa;0CAATrR,IAAS;cAAA;;;cACtBsR,OAAL,eAAaD,OAAb,SAAyBrR,IAAzB;OADF;KADF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAyLO;cACD,QAAN,EAAgB,IAAhB;;UAEMxB,WAAW,KAAKL,KAAL,CACd4C,GADc,CACV,cADU,EACM,KAAKX,KADX,EACkB,IADlB,EAEdW,GAFc,CAEV,UAACE,KAAD,EAAQD,CAAR;eACH;gBAAA;YAAQ,KAAKA,CAAb,EAAgB,cAAhB;;SADG;OAFU,CAAjB;;UAQMvD,qBAAa,KAAKA,KAAlB,IAAyBe,kBAAzB,GAAN;UACM8hB,OAAO,KAAKniB,KAAL,CAAWoiB,MAAX,CAAkB,cAAlB,EAAkC9iB,KAAlC,EAAyC,IAAzC,CAAb;aACO6iB,IAAP;;;;;;;;;;;;;;;;;;;;;;;;;2BAhEW;aACJ,KAAK/B,KAAL,CAAWY,MAAlB;;;;2BAGU;aACH,KAAKZ,KAAL,CAAWpgB,KAAlB;;;;2BAGU;aACH,KAAKogB,KAAL,CAAWne,KAAlB;;;;;;;;;;;;;;;;;;EAlNiBZ,MAAMC;;;;;;AAArBogB,OAOGngB,YAAY;eACJG,MAAMuC,IADF;aAENvC,MAAMuC,IAFA;aAGNvC,MAAMjD,MAHA;YAIPiD,MAAMoT,IAJC;eAKJpT,MAAMsC,GALF;WAMRtC,MAAM2gB,KANE;YAOP3gB,MAAMuC,IAPC;QAQXvC,MAAMjD,MARK;UASTiD,MAAMxC,MATG;cAULwC,MAAMuC,IAVD;SAWVvC,MAAMxC,MAXI;YAYPwC,MAAMC,MAZC;SAaVH,WAAWS,KAAX,CAAiBR,UAbP;AAPfigB,OA6BGxe,eAAe;aACT,KADS;eAEP,IAFO;YAGVue,IAHU;WAIX,EAJW;YAKV,KALU;UAMZ,EANY;cAOR,IAPQ;;;;;OAoDtBa,4BAA4B,iBAAS;QAC7BtB,MAD6B,UAC7BA,MAD6B;QACrBhhB,KADqB,UACrBA,KADqB;;;;WAI9BsR,GAAL,CAASqQ,OAAT;;;;QAKEriB,MAAMuiB,OAAN,IAAiB,OAAKviB,KAAL,CAAWuiB,OAA5B,IACAviB,MAAM0hB,MAAN,IAAgB,OAAK1hB,KAAL,CAAW0hB,MAF7B,EAGE;UACMa,UAAU,OAAKC,cAAL,CAAoBxiB,MAAMuiB,OAA1B,EAAmCviB,MAAM0hB,MAAzC,CAAhB;cACQe,YAAM7V,MAAN,CAAa,EAAE2V,gBAAF,EAAb,CAAR;eACSG,aAAO9V,MAAP,CAAc,EAAE2V,gBAAF,EAAd,CAAT;aACKV,QAAL,CAAc,EAAEH,cAAF,EAAUhhB,YAAV,EAAd;;;aAGKsR,GAAL,CAASsQ,QAAT;;;;UAII,OAAKtQ,GAAL,CAASsQ,QAAT,GAAoB,CAApB,IAAyB,OAAKtQ,GAAL,CAASsQ,QAAT,IAAqB,OAAKtQ,GAAL,CAASqQ,OAA3D,EAAoE;eAC3Dha,IAAP,CACE,yQADF;;;;;;QAQE2K,SAAShT,MAAM2C,KAAN,CAAYqQ,MAAZ,EAAf;UACM2P,GAAN,CAAU,UAAV,EAAsB3P,MAAtB;WACK4P,WAAL,CAAiB5P,MAAjB;WACK6O,QAAL,CAAc,EAAElf,OAAOqQ,OAAOrQ,KAAhB,EAAd;;;OAQFoO,oBAAoB,YAAM;WACnBkS,WAAL;;QAEI,OAAKjjB,KAAL,CAAWkjB,SAAf,EAA0B;aACnBpZ,KAAL;;;;OAQJyH,qBAAqB,YAAM;WACpB0R,WAAL;;;OAYFL,cAAc,kBAAU;QAClB5P,OAAOmQ,UAAP,CAAkB5hB,IAAtB,EAA4B;cACpB,aAAN,EAAqB,EAAEyR,cAAF,EAArB;aACKhB,GAAL,CAASgB,MAAT,GAAkBA,MAAlB;;;;OASJiQ,cAAc,YAAM;QACVjQ,MADU,GACC,OAAKhB,GADN,CACVgB,MADU;;;QAGdA,MAAJ,EAAY;cACJ,aAAN,EAAqB,EAAEA,cAAF,EAArB;aACO,OAAKhB,GAAL,CAASgB,MAAhB;aACKhT,KAAL,CAAWyhB,QAAX,CAAoBzO,MAApB;;;;OAUJA,SAAS,YAAa;;;QACdA,SAAS,wBAAKrQ,KAAL,CAAWqQ,MAAX,IAAoB4D,IAApB,gCAAf;WACK6K,QAAL,CAAczO,MAAd;;;OAOFpB,OAAO,YAAM;WACNoB,MAAL,CAAY;aAAK0I,EAAE9J,IAAF,EAAL;KAAZ;;;OAOF9H,QAAQ,YAAM;WACPkJ,MAAL,CAAY;aAAK0I,EAAE5R,KAAF,EAAL;KAAZ;;;OA0BF+J,UAAU,UAACD,OAAD,EAAUjB,KAAV,EAAoB;WACvBK,MAAL,CAAY,kBAAU;aACftS,KAAL,CAAWiiB,GAAX,CAAe/O,OAAf,EAAwBjB,KAAxB,EAA+BK,MAA/B;KADF;;;OAWFyO,WAAW,kBAAU;YACb,UAAN,EAAkB,EAAEzO,cAAF,EAAlB;;QAEI,OAAKhT,KAAL,CAAWsE,QAAf,EAAyB;;;;WAIpB5D,KAAL,CAAWiiB,GAAX,CAAe,UAAf,EAA2B3P,MAA3B;QACQrQ,KARW,GAQDqQ,MARC,CAQXrQ,KARW;QASX8e,QATW,GASE,OAAKzhB,KATP,CASXyhB,QATW;;QAUf9e,SAAS,OAAKA,KAAlB,EAAyB;aAChBqQ,MAAT;;;OAuCFwP,iBAAiB,UAACD,OAAD,EAAUb,MAAV,EAAqB;QAC9B0B,eAAejC,cAArB;QACMkC,cAActI,aAApB;QACMuI,eAAe;cACX5B,UAAU;KADpB;;+BAIW6B,KAPyB;;UAS9BA,SAAQ,UAAZ,EAAwB;;;;UAIpBA,SAAQ,QAAZ,EAAsB;;;mBAGTA,KAAb,IAAqB,YAAa;;;eACzB,OAAKvjB,KAAL,CAAWujB,KAAX,KAAoB,iBAAKvjB,KAAL,EAAWujB,KAAX,0BAA3B;OADF;;;;;;;;4BATiBC,YAAnB,mIAAkC;YAAvBD,KAAuB;;yBAAvBA,KAAuB;;iCAMV;;;;;;;;;;;;;;;;;YAQhBH,YAAR,EAAsBE,YAAtB,2BAAwCf,WAAW,EAAnD,IAAwDc,WAAxD;;;;;;;;;uBAQetkB,cAAnB,8HAAmC;QAAxBwkB,IAAwB;;WAC1BthB,SAAP,CAAiBshB,IAAjB,IAAyBnhB,MAAMoT,IAA/B;;;;;;;;;;;;;;;;;;;;;;;ACpTF,YAAe;gBAAA;8BAAA;0BAAA;4BAAA;oBAAA;sBAAA;8BAAA;oCAAA;oCAAA;0BAAA;;CAAf;;;;;;;;;;;;;;;"}